<?xml version='1.0' encoding='UTF-8'?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->


<!-- ************ JSF build file ************************************** -->

<project name="RiSandboxDemo" default="main" basedir=".">


    <!-- ************ Per user local properties ******************************* -->

    <property file="${user.home}/build.properties"/>
    <property file="../../../build.properties"/>
    <import file="${jsf.build.home}/common/ant/common.xml"/>


    <!-- ******************* Structural ************************** -->

    <!-- The base directory for compilation targets -->
    <property name="sandbox.dir" value="${basedir}/.."/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.webinf.dir" value="${build.dir}/WEB-INF/"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    
    <property name="assemble.dir" value="${basedir}/assemble"/>

    <property name="web.dir" value="${basedir}/WebRoot"/>
    <property name="web.jsft.dir" value="${basedir}/WebRoot-jsftemplating"/>
    <property name="web.facelets.dir" value="${basedir}/WebRoot-facelets"/>
    <property name="web.jsp.dir" value="${basedir}/WebRoot-jsp"/>

    <!-- The base directory for distribution targets -->
    <property name="dist.dir" value="${basedir}/dist"/>

    <!-- The base directory for component sources -->
    <property name="source.dir" value="${basedir}/src/java"/>
    <property name="source.web.dir" value="${basedir}/src/web"/>

    <!-- The base resource directory -->
    <property name="resource.dir" value="${basedir}/src/resources"/>
	
    <property name="dep.dir" value="${basedir}/deps"/>

    <!-- Dependencies -->
    <property name="sandbox.dependency.base.dir" value="${sandbox.dir}/dependencies"/>

    <import file="${sandbox.dir}/build.xml"/>

    <path id="impl.compile.classpath">
        <pathelement location="${jsf-api.jar}"/>
        <pathelement location="${jsf-impl.jar}"/>
        <path refid="sun.commons.classpath"/>
        <path refid="compile.classpath"/>
        <pathelement location="${tools.dir}/build/classes"/>
    </path>


    <!-- ************ Executable Targets ************************************** -->

	<!--
		This file assumes you have the ant contrib lib in your Ant home:
		http://mirrors.ibiblio.org/pub/mirrors/maven2/ant-contrib/ant-contrib/1.0b2/ant-contrib-1.0b2.jar
	-->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	
	<macrodef name="download">
		<attribute name="target"/>
		<attribute name="url" />
			
		<sequential>
			<if>
				<not>
					<available file="@{target}" property="ignore.me"/>
				</not>
				<then>
					<get src="@{url}" dest="@{target}" usetimestamp="true" />
				</then>
			</if>
		</sequential>
	</macrodef>

    <target name="init" description="Initialize and evaluate conditionals">
        <echo message="-------- ${impl.name} ${impl.version} --------"/>
    </target>

    <target name="prepare" depends="init" description="Prepare build directory">
        <mkdir dir="${build.dir}"/>
    </target>

    <target name="update" description="Download project dependencies">
        <!-- setup the proxy if necessary -->
        <if>
            <and>
                <length string="${http.proxy.host}" when="greater" length="0"/>
                <length string="${http.proxy.port}" when="greater" length="0"/>
            </and>
            <then>
                <setproxy proxyhost="${http.proxy.host}" proxyport="${http.proxy.port}"/>
            </then>
        </if>
		<mkdir dir="${dep.dir}"/>
        <download url="http://www.canekpelaez.com/pensadero/posts-images/2006/11/java-duke-guitar.png" target="${resource.dir}/sample.png" />
        <download url="https://maven-repository.dev.java.net/repository/el-impl/jars/el-impl-1.0.jar" target="${dep.dir}/el-impl-1.0.jar" />
        <download url="https://maven-repository.dev.java.net/repository/javax.el/jars/el-api-1.0.jar" target="${dep.dir}/el-api-1.0.jar" />
    </target>

    <target name="compile" depends="prepare,update" description="Just compile the classes">
        <if>
            <equals arg1="${container.name}" arg2="glassfish"/>
            <then>
                <property name="exclude.path" value="com/sun/faces/sandbox/web/**"/>
            </then>
            <else>
                <property name="exclude.path" value="com/sun/faces/vendor/**,com/sun/faces/sandbox/web/**"/>
            </else>
        </if>

        <path id="sandbox.compile.classpath">
            <fileset dir="${sandbox.dependency.base.dir}" includes="*.jar"/>
        </path>

        <!-- Run javac through everything -->
        <jsf.javac srcdir="${source.dir}"
                   destdir="${build.dir}"
                   source="1.5"
                   target="1.5">
            <classpath>
                <path refid="sandbox.compile.classpath"/>
                <path refid="impl.compile.classpath"/>
                <fileset dir="${sandbox.dir}/build/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </jsf.javac>


        <copy toDir="${web.jsft.dir}/WEB-INF/classes">
            <fileset dir="${resource.dir}/" />
        </copy>
        <copy toDir="${web.facelets.dir}/WEB-INF/classes">
            <fileset dir="${resource.dir}/" />
        </copy>
        <copy toDir="${web.jsp.dir}/WEB-INF/classes">
            <fileset dir="${resource.dir}/" />
        </copy>

        <!--
        <copy toDir="${build.dir}/">
            <fileset dir="${web.dir}/" />
        </copy>
        -->
    </target>

    <target name="clean" description="Clean build and distribution directories">

        <delete dir="${build.dir}"/>
        <delete dir="${assemble.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${web.jsft.dir}/WEB-INF/classes"/>
        <delete dir="${web.facelets.dir}/WEB-INF/classes"/>
        <delete dir="${web.jsp.dir}/WEB-INF/classes"/>
        <delete dir="${web.jsft.dir}/WEB-INF/lib"/>
        <delete dir="${web.facelets.dir}/WEB-INF/lib"/>
        <delete dir="${web.jsp.dir}/WEB-INF/lib"/>

        <delete>
            <fileset dir="." includes="**/*~" defaultexcludes="no"/>
            <fileset dir="." includes="**/.nbattrs" defaultexcludes="no"/>
        </delete>
    </target>

    <target name="all" depends="clean,prepare,compile"
            description="Clean and compile all components"/>

	<macrodef name="copylibs">
		<attribute name="to"/>
		<sequential>
	        <copy file="${httpclient.jar}" todir="@{to}" />
	        <copy file="${fileupload.jar}" todir="@{to}" />
	        <copy file="${codec.jar}" todir="@{to}" />
	        <copy file="${logging.jar}" todir="@{to}" />
	        <copy file="${io.jar}" todir="@{to}" />
	        <copy file="${sandbox.dir}/build/lib/${name}-${sb.impl.version}.jar" todir="@{to}" />
	        <copy file="${assemble.dir}/JsfRiSandboxDemo.jar" todir="@{to}" />
			<copy file="${jsf-api.jar}" todir="@{to}" />
			<copy file="${jsf-impl.jar}" todir="@{to}" />
			<copy todir="@{to}">
				<fileset dir="${dep.dir}" includes="**/*.jar"/>
			</copy>
		</sequential>
	</macrodef>

    <target name="dist" depends="clean,compile" description="Build distribution files">
        <delete dir="temp"/>
        <delete dir="${assemble.dir}"/>
		<delete dir="${web.jsp.dir}/WEB-INF/lib" />
		<delete dir="${web.jsft.dir}/WEB-INF/lib" />
		<delete dir="${web.facelets.dir}/WEB-INF/lib" />

        <mkdir dir="${dist.dir}"/>
        <mkdir dir="temp/WEB-INF/lib"/>
        <mkdir dir="${assemble.dir}"/>
        <mkdir dir="${assemble.dir}/lib"/>
        
        <jar destfile="${assemble.dir}/JsfRiSandboxDemo.jar">
            <fileset dir="${build.dir}"/>
        </jar>
        
		<copylibs to="temp/WEB-INF/lib"/>
		<copy file="${facelets.jar}" todir="${web.facelets.dir}/WEB-INF/lib" />
		<copy file="${jsftemplating.jar}" todir="${web.jsft.dir}/WEB-INF/lib" />
		<copy file="${jsftemplating.df.jar}" todir="${web.jsft.dir}/WEB-INF/lib" />
		
        <jar destfile="${assemble.dir}/JsfRiSandboxDemo.war">
            <fileset dir="${web.dir}"/>
            <fileset dir="${source.web.dir}"/>
        </jar>
        <jar destfile="${assemble.dir}/JsfRiSandboxDemo-jsp.war">
            <fileset dir="${web.jsp.dir}"/>
            <fileset dir="${source.web.dir}"/>
			<fileset dir="temp/" />
        </jar>
        <jar destfile="${assemble.dir}/JsfRiSandboxDemo-jsftemplating.war">
            <fileset dir="${web.jsft.dir}"/>
            <fileset dir="${source.web.dir}"/>
			<fileset dir="temp/" />
        </jar>
        <jar destfile="${assemble.dir}/JsfRiSandboxDemo-facelets.war">
            <fileset dir="${web.facelets.dir}"/>
            <fileset dir="${source.web.dir}"/>
			<fileset dir="temp/" />
        </jar>
        
        <jar destfile="${dist.dir}/JsfRiSandboxDemo.ear">
            <fileset dir="${assemble.dir}"/>
            <fileset dir="${source.web.dir}"/>
        </jar>
		
		<copy todir="${dist.dir}">
			<fileset dir="${assemble.dir}" includes="**/*.war"/>
		</copy>
        
        <delete dir="${assemble.dir}"/>
        <delete dir="temp"/>
    </target>
    
    <target name="main" depends="compile"/>
</project>