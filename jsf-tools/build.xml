<?xml version="1.0"?>

<!--
 Copyright 2004 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->


<!--
  =======================================================================
    JSF-TOOLS build file
  =======================================================================
-->
<project name="JSF-TOOLS" default="main" basedir=".">

  <property file="${user.home}/build.properties"/>   <!-- User local        -->
  <property file="build.properties"/>                <!-- Component local   -->
  <property file="../build.properties"/>             <!-- Commons local     -->

  <property name="Name"             value="JavaServer Faces Tools"/>
  <property name="name"             value="jsf-tools"/>
  <property name="version"          value="20040127"/>

  <property name="debug"            value="true" />
  <property name="deprecation"      value="false" />
  <property name="optimize"         value="false" />

  <property name="src.dir"          value="${basedir}/src"/>
  <property name="dist.dir"         value="${basedir}/dist"/>
  <property name="jsf-api.dir"      value="${basedir}/../jsf-api"/>
  <property name="standard-html-renderkit"      
                                    value="${jsf-api.dir}/doc/standard-html-renderkit.xml"/>
  <property name="jsf-ri.dir"       value="${basedir}/../jsf-ri"/>

  <!-- The locations of necessary jar files -->
  <property name="junit.jar" 
            value="${tomcat.home}/../junit3.8.1/junit.jar"/>
  <property name="servlet.jar" value="${tomcat.home}/common/lib/servlet-api.jar"/>
  <property name="jsp.jar" value="${tomcat.home}/common/lib/jsp-api.jar"/>
  <property name="commons-logging.jar" 
            value="${tomcat.home}/jwsdp-shared/lib/commons-logging.jar"/>
  <property name="commons-digester.jar" 
            value="${tomcat.home}/jwsdp-shared/lib/commons-digester.jar"/>
  <property name="commons-collections.jar" 
            value="${tomcat.home}/jwsdp-shared/lib/commons-collections.jar"/>
  <property name="commons-beanutils.jar" 
            value="${tomcat.home}/jwsdp-shared/lib/commons-beanutils.jar"/>
  <property name="xerces.jar" value="${tomcat.home}/jaxp/lib/endorsed/xercesImpl.jar"/>
  <property name="dom.jar.dir" value="${tomcat.home}/jaxp/lib/endorsed"/>

  <property name="build.dir"        value="${basedir}/build"/>
  <property name="build.classes"    value="${build.dir}/classes"/>
  <property name="build.lib"        value="${build.dir}/lib"/>
  <property name="build.temp"       value="${build.dir}/temp"/>
  <property name="build.test"       value="${build.dir}/test"/>
  <property name="build.generate"   value="${build.dir}/generate"/>
  <property name="build.generate.facesdoc" value="${build.dir}/generate/facesdoc"/>
  <property name="build.generate.tld"   value="${build.dir}/generate/conf/share"/>
  <property name="build.javadocs"   value="${build.dir}/javadocs"/>
  <property name="build.mifdocs"    value="${build.dir}/mifdocs"/>
  <property name="javadoc.private"  value="false"/>
  <property name="javadoc.protected"  value="true"/>

  <!-- Default commons logging configuration settings -->
  <property name="log.impl"         value="org.apache.commons.logging.impl.SimpleLog"/>
  <property name="log.level"        value="info"/> <!-- Generator -->
  <property name="log.digester"     value="info"/> <!-- Digester main -->
  <property name="log.sax"          value="info"/> <!-- SAX events -->

  <!-- Default value for debugging arguments is no.  Override in
       build.properties -->
  <property name="debug.jvm.args" value=""/>

  <path id="compile.classpath">
    <pathelement location="${build.classes}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${jsp.jar}"/>
  </path>

  <path id="run.classpath">
    <pathelement location="${build.dir}/${name}.jar"/>
    <pathelement location="${build.test}"/>
    <pathelement location="${junit.jar}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${jsp.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${xerces.jar}"/>
    <pathelement location="${dom.jar}"/>  
    <pathelement location="${jsf-api.dir}/build/classes"/>
    <pathelement location="${el-api.jar}"/>
  </path>

  <!--
       ===================================================================
         Prepare the build
       ===================================================================
  -->
  <target name="prepare.generate" 
          depends="set.required-properties,verify.standard-html-renderkit-impl,verify.standard-html-renderkit">
    <tstamp />
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes}"/>
    <mkdir dir="${build.lib}"/>
    <mkdir dir="${build.generate}"/>
    <mkdir dir="${build.generate.facesdoc}"/>
    <mkdir dir="${build.generate.tld}"/>
    <mkdir dir="${build.classes}/META-INF"/>
    <mkdir     dir="${build.temp}"/>
    <copy    todir="${build.temp}">
      <fileset dir="${jsf-api.dir}/doc" includes="standard-html-renderkit.xml"/>
    </copy>
    <copy    todir="${build.classes}/com/sun/faces">
      <fileset dir="${jsf-api.dir}/doc" includes="*.dtd"/>
      <fileset dir="${jsf-api.dir}/doc" includes="*.xsd"/>
    </copy>
    <copy    todir="${build.temp}"
              file="${standard-html-renderkit-impl}"/>
  </target>

  <target name="set.required-properties" 
          unless="standard-html-renderkit-impl">
    <available property="standard-html-renderkit-impl" 
          value="${jsf-ri.dir}/src/com/sun/faces/standard-html-renderkit-impl.xml"
          file="${jsf-ri.dir}/src/com/sun/faces/standard-html-renderkit-impl.xml"/>
    <available property="standard-html-renderkit" 
          value="${jsf-api.dir}/doc/standard-html-renderkit.xml"
          file="${jsf-api.dir}/doc/standard-html-renderkit.xml"/>
  </target>

  <target name="verify.standard-html-renderkit-impl" 
          unless="standard-html-renderkit-impl">

<fail>
You must have the property standard-html-renderkit-impl defined, or the
path ../jsf-ri/src/com/sun/faces/standard-html-renderkit-impl.xml must
exist.  This is necessary to generate required classes.
</fail>
  </target>

  <target name="verify.standard-html-renderkit" 
          unless="standard-html-renderkit">

<fail>
You must have the property standard-html-renderkit defined, or the path
../jsf-api/doc/standard-html-renderkit.xml must exist.  This is
necessary to generate required classes.
</fail>
  </target>

  <!--
       ===================================================================
         Build the Code Generating code
       ===================================================================
  -->
  <target name="build" depends="generate.taglib">
  </target>

  <target         name="props"
           description="Display resolved JAR file properties">

    <echo      message="commons-beanutils.jar =   ${commons-beanutils.jar}"/>
    <echo      message="commons-collections.jar = ${commons-collections.jar}"/>
    <echo      message="commons-digester.jar =    ${commons-digester.jar}"/>
    <echo      message="commons-logging.jar =     ${commons-logging.jar}"/>
    <echo      message="jsp.jar =                 ${jsp.jar}"/>
    <echo      message="junit.jar =               ${junit.jar}"/>  
    <echo      message="servlet.jar =             ${servlet.jar}"/>
    <echo      message="xerces.jar =              ${xerces.jar}"/>
    <echo      message="dom.jar.dir =      ${dom.jar.dir}"/>
  </target>

  <target           name="generate.html"
                 depends="tools"
                      if="standard-html-renderkit-impl"
                  unless="skip.generation">

    <generateComponents generatorConfig="${basedir}/conf/HtmlBasicTaglib21.properties"
                        facesConfig="${build.temp}/standard-html-renderkit.xml"
                        fork="true">
        <classpath refid="run.classpath" />
        <sysproperty key="java.endorsed.dirs" value="${endorsed.dirs}"/>
    </generateComponents>

  </target>

  <target name="generate.taglib"
          depends="tools"
          if="standard-html-renderkit-impl"
      unless="skip.taglib.generation">

    <copy todir="${build.dir}">
        <fileset dir="${basedir}/conf">
            <include name="TAG-*"/>
        </fileset>
    </copy>    
    <generateTaglib generatorConfig="${basedir}/conf/HtmlBasicTaglib21.properties"
                    facesConfig="${build.temp}/standard-html-renderkit.xml"
                    fork="true">
        <classpath refid="run.classpath" />
        <sysproperty key="java.endorsed.dirs" value="${endorsed.dirs}"/>
        <jvmarg line="${debug.jvm.args}"/>
    </generateTaglib>

  </target>

  <target name="tools" depends="prepare.generate"
                       if="standard-html-renderkit-impl">

    <javac srcdir="${src.dir}"
           destdir="${build.classes}"
           debug="${debug}"
           deprecation="${deprecation}"
           source="1.4"
           optimize="${optimize}" >
      <classpath refid="compile.classpath" />
      <classpath refid="run.classpath" />
    </javac>

    <echo file="${build.classes}/com/sun/faces/whaat" message="cosby" />

    <taskdef name="generateTaglib" classname="com.sun.faces.ant.TaglibGenTask">
        <classpath>
            <pathelement location="${build.classes}"/>
        </classpath>
    </taskdef>

    <taskdef name="generateComponents" classname="com.sun.faces.ant.ComponentGenTask">
        <classpath>
            <pathelement location="${build.classes}"/>
        </classpath>
    </taskdef>

    <taskdef name="generateRenderkitDocs" classname="com.sun.faces.ant.RenderkitDocGenTask">
        <classpath>
            <pathelement location="${build.classes}"/>
        </classpath>
    </taskdef>

    <copy todir="${build.classes}">
      <fileset dir="${src.dir}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>

    <jar destfile="${build.dir}/${name}.jar" basedir="${build.classes}" />

  </target>

  <target name="check.generation.necessity" if="standard-html-renderkit-impl">
    <uptodate property="skip.generation"
              targetfile="${build.generate}/last-generation">
       <srcfiles dir="${jsf-api.dir}/doc">
         <include name="standard-html-renderkit.xml"/>
       </srcfiles>
    </uptodate>
  </target>

  <target name="check.taglib.generation.necessity" if="standard-html-renderkit-impl">
    <uptodate property="skip.taglib.generation"
              targetfile="${build.generate}/last-taglib-generation">
       <srcfiles dir="${jsf-api.dir}/doc">
         <include name="standard-html-renderkit.xml"/>               
       </srcfiles>
    </uptodate>
  </target>

  <!--
       ===================================================================
         Clean up build and distribution directories
       ===================================================================
  -->
  <target name="clean" description="Clean build directory" depends="clean.generated">
    <delete dir="${build.dir}" />
    <delete>
      <fileset dir="." includes="**/.nbattrs" defaultexcludes="no"/>
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
    </delete>
    <!-- delete this file since it's copied from another file based on JSP level -->
    <delete file="${basedir}/test/javax/faces/mock/MockPageContext.java"/>
    <delete dir="${dist.dir}"/>
  </target>

  <target name="clean.generated" description="Clean generated code">
    <delete dir="${build.generate}" />
  </target>

  <target name="clean.generated.components" description="Clean generated components code">
    <delete dir="${build.generate}/javax" />
    <delete file="${build.generate}/last-generation" />
  </target>

  <target name="clean.generated.taglib" description="Clean generated taglib code">
    <delete dir="${build.generate}/com" />
    <delete dir="${build.generate}/conf" />
    <delete file="${build.generate}/last-taglib-generation" />
  </target>

  <!--
       ===================================================================
         Clean everything
       ===================================================================
  -->
  <target name="allclean" depends="clean">
  </target>


  <!--
       ===================================================================
         Create the documentation
       ===================================================================
  -->

  <target name="javadoc_check">
    <uptodate property="javadoc.notrequired" targetfile="${build.javadocs}/packages.html" >
        <srcfiles dir= "${src.dir}" includes="**/*.java"/>
        <srcfiles dir= "${build.generate}" includes="**/*.java"/>
    </uptodate>
  </target>

  <target name="javadocs" depends="javadoc_check"
          unless="javadoc.notrequired"
          description="Create the JavaDoc documentation">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="javax.*"
             destdir="${build.javadocs}"
             private="${javadoc.private}"
             protected="${javadoc.protected}"
             windowtitle="${Name} (${version})"
             doctitle="${Name} (${version})"
             bottom="Copyright &#169; 2002-2004 Sun Microsystems, Inc. All Rights Reserved.">
       <fileset dir="${src.dir}">
         <include name="**/*.java"/>
       </fileset>
       <fileset dir="${build.generate}">
         <include name="**/*.java"/>
       </fileset>
      <classpath refid="compile.classpath"/>
    </javadoc>
  </target>

  <xmlcatalog id="standard-renderkit">

    <dtd 
      publicId="-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN"
      location="${jsf-api.dir}/doc/web-facesconfig_1_1.dtd" />

  </xmlcatalog>

  <target name="docs" depends="prepare.generate,tools" 
                      if="standard-html-renderkit-impl"
                  unless="skip.generation">

      <generateRenderkitDocs generatorConfig="${basedir}/conf/HtmlBasicTaglib12.properties"
                        facesConfig="${build.temp}/standard-html-renderkit.xml"
                        fork="true">
        <classpath refid="run.classpath" />
        <sysproperty key="java.endorsed.dirs" value="${endorsed.dirs}"/>
      </generateRenderkitDocs>

    <touch file="${build.generate}/last-generation"/>

  </target>

  <!--
       ===================================================================
         Main target
       ===================================================================
  -->
  <target name="main" depends="build"
   description="Generate classes"/>


  <!--
       ===================================================================
         Distributions target
       ===================================================================
  -->
  <target name="dist" depends="main,javadocs"
   description="Build distribution files">

    <!-- Create the distributions directory -->
    <mkdir        dir="${dist.dir}"/>

    <!-- Create the binary distribution -->
    <zip     destfile="${dist.dir}/jsf-tools-${version}.zip">
      <zipfileset dir="${build.dir}"
             includes="lib/** javadocs/**"
               prefix="jsf-tools-${version}"/>
    </zip>

    <!-- Create the javadocs distribution -->
    <zip     destfile="${dist.dir}/jsf-tools-javadocs-${version}.zip">
      <zipfileset dir="${build.dir}"
             includes="javadocs/**"
               prefix="jsf-tools-${version}"/>
    </zip>


    <!-- Create the source distribution -->
    <zip     destfile="${dist.dir}/jsf-tools-src-${version}.zip">
      <zipfileset dir="${basedir}"
             includes="build.xml COPYRIGHT LICENSE.html"
               prefix="jsf-api"/> 

      <zipfileset dir="${src.dir}"
             excludes="**/CVS/**"
               prefix="jsf-api/src"/>
    </zip>

  </target>


</project>
