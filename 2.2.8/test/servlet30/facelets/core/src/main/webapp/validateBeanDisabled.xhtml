<?xml version='1.0' encoding='UTF-8' ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core">
    <h:body>
        <h1>Bean Validation Test</h1>
        <p>
            <em>This test sees whether disabling Bean Validation on JSF components gets 'lost' after POST-back.</em> 
        </p>
        <p>
            The field below is annotated <tt>@NotEmpty</tt>, but has <tt>&lt;f:validateBean disabled="true"/&gt;</tt> on
            the JSF component. To reproduce the problem:
        </p>
        <ul>
            <li>Leave the field blank, and click Submit</li>
            <li>Message will say 'SUCCESS' because the empty value got through (this is correct, as bean validation has been disabled)</li>
            <li>Click Submit again</li>
            <li>Message will not say 'SUCCESS' because bean validation is enabled again</li>
        </ul>
        <hr/>
        <h:form id="form">
            <h:messages />
            <h:outputLabel for="fooBeanFooName" value="Foo:"/>
            <h:inputText id="fooBeanFooName" value="#{validateBeanDisabledBean.foo.name}">
                <f:validateBean disabled="#{true}"/>
            </h:inputText>
            <p/>
            <h:commandButton id="submit" value="Submit" action="#{validateBeanDisabledBean.submit}"/>
        </h:form>
    </h:body>
</html>	
