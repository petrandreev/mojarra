<?xml version="1.0"?>

<!--
 Copyright 2002 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->


<!-- ************ JSF build file ************************************** -->

<project name="JSF-RI" default="build-all" basedir=".">

  <property name="Name" value="JSF Demos"/>
  <property name="name" value="jsf-demo"/>
  <property name="version" value="post-EA2"/>

<!-- ************ Per user local properties ******************************* -->

  <property file="${user.home}/build.properties"/>   <!-- User local        -->
  <property file="build.properties"/>                <!-- Component local   -->
  <property file="../build.properties"/>             <!-- Commons local     -->


<!-- ************ Where are we building into? ***************************** -->

  <!-- The base directory for compilation targets -->
  <property name="build.home" value="${basedir}/build"/>

  <!-- The base directory for the JSF API and RI -->
  <property name="jsf.api.home" value ="../jsf-api"/>
  <property name="jsf.ri.home" value ="../jsf-ri"/>

  <!-- dependent jars -->
  <property name="commons-beanutils.jar" 
            value="${jsf.ri.home}/lib/commons-beanutils.jar" />
  <property name="commons-logging.jar" 
            value="${jsf.ri.home}/lib/commons-logging.jar" />
  <property name="commons-digester.jar" 
            value="${jsf.ri.home}/lib/commons-digester.jar" />
  <property name="jsf-api.jar" 
            value="${jsf.api.home}/build/lib/jsf-api.jar" />
  <property name="jsf-ri.jar" 
            value="${jsf.ri.home}/build/lib/jsf-ri.jar" />

  <target name="clean">
    
    <ant target="clean" dir="templateDemo"/>
    <antcall target="deleteJarsFromDemo">
      <param name="demoDir" value="templateDemo"/>
    </antcall>

    <ant target="clean" dir="helloDuke"/>
    <antcall target="deleteJarsFromDemo">
      <param name="demoDir" value="helloDuke"/>
    </antcall>

    <delete> 
      <fileset dir="." includes="**/*~" defaultexcludes="no"/>
      <fileset dir="." includes="**/.nbattrs" defaultexcludes="no"/>
    </delete>

  </target>

  <target name="copyJarsToDemos">

    <antcall target="copyJarsToDemo">
      <param name="demoDir" value="templateDemo"/>
    </antcall>

    <antcall target="copyJarsToDemo">
      <param name="demoDir" value="helloDuke"/>
    </antcall>

  </target>

  <target name="copyJarsToDemo">

    <mkdir dir="${demoDir}/WEB-INF/lib"/>
    <copy todir="${demoDir}/WEB-INF/lib" file="${commons-beanutils.jar}" />
    <copy todir="${demoDir}/WEB-INF/lib" file="${commons-logging.jar}" />
    <copy todir="${demoDir}/WEB-INF/lib" file="${commons-digester.jar}" />
    <copy todir="${demoDir}/WEB-INF/lib" file="${jsf-api.jar}" />
    <copy todir="${demoDir}/WEB-INF/lib" file="${jsf-ri.jar}" />
    <copy todir="${demoDir}/WEB-INF/lib" file="${standard.jar}" />
    <copy todir="${demoDir}/WEB-INF/lib" file="${jstl.jar}" />

  </target>

  <target name="deleteJarsFromDemo">

    <delete file="${demoDir}/WEB-INF/lib/commons-beanutils.jar" />
    <delete file="${demoDir}/WEB-INF/lib/commons-logging.jar" />
    <delete file="${demoDir}/WEB-INF/lib/commons-digester.jar" />
    <delete file="${demoDir}/WEB-INF/lib/jsf-api.jar" />
    <delete file="${demoDir}/WEB-INF/lib/jsf-ri.jar" />
    <delete file="${demoDir}/WEB-INF/lib/standard.jar" />
    <delete file="${demoDir}/WEB-INF/lib/jstl.jar" />

  </target>



  <target name="build-all" depends="verifyPreconditions,copyJarsToDemos">

    <ant inheritAll="false" dir="${basedir}/helloDuke"/>

  </target>

  <target name="verifyPreconditions">

    <antcall target="checkRequiredFile">
       <param name="file" value="${standard.jar}"/>
       <param name="fail.message" value="${standard.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl.jar}"/>
       <param name="fail.message" value="${jstl.jar} must exist."/>
    </antcall>

  </target>

  <target name="checkRequiredFile">
    <available file="${file}" property="requirement.satisfied"/>
    <antcall target="checkRequired.fail"/>
  </target>

  <target name="checkRequired.fail" unless="requirement.satisfied">
    <fail message="${fail.message}"/>
  </target>

</project>
