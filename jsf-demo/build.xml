<?xml version="1.0"?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2009 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->


<!-- ************ JSF build file ************************************** -->

<project name="jsf-demo" default="main" basedir=".">
    <!--
    
     This build is designed to build the JavaServer Faces Demos in two modes:
    
     1. engineering development mode
    
        This is where you're working on the demos themselves and you have a
        complete development environment to host your work.
    
     2. distribution mode
    
        This is where you're producing a distribution bundle to deploy
        JavaServer Faces for shipment either as a standalone product, with
        minimal external dependencies, or for bundling into an existing
        product, such as JWSDP.
    
     See the target "verifyPreconditions" to discover the inputs to this
     build file.
    
    -->

    <!-- ************ Per user local properties ******************************* -->

    <property file="${user.home}/build.properties"/>
    <property file="../build.properties"/>
    <import file="${jsf.build.home}/common/ant/common.xml"/>


    <!-- ************ Where are we building into? ***************************** -->

    <!-- The base directory for compilation targets -->

    <property name="Name" value="JavaServer Faces"/>
    <property name="name" value="jsf-demo"/>

    <property name="build.home" value="${basedir}/build"/>

    <!-- The base directory for distribution targets -->
    <property name="dist.home" value="${basedir}/dist"/>


    <!-- Use LICENSE.txt for FCS release. -->
    <property name="license" value="LICENSE.TXT"/>

    <target name="clean">

        <delete file="mojarra-${impl.version}.zip"/>
        <delete dir="${dist.home}"/>
        <delete dir="${basedir}/test/build"/>

        <ant target="clean" dir="custom-bean-scope"/>
        <ant target="clean" dir="archive/guessNumber"/>
        <ant target="clean" dir="tree-visit"/>
        <ant target="clean" dir="guessNumber2.0"/>
        <ant target="clean" dir="basic-ezcomp"/>
        <ant target="clean" dir="basic-ajax"/>
        <ant target="clean" dir="sandbox/ajax-request"/>
        <ant target="clean" dir="sandbox/ajax-queue"/>
        <ant target="clean" dir="archive/helloDuke"/>
        <ant target="clean" dir="archive/components"/>
        <ant target="clean" dir="archive/carstore"/>
        <ant target="clean" dir="archive/mojarra_ext"/>
        <ant target="clean" dir="archive/renderkits"/>
        <ant target="clean" dir="archive/standard"/>
        <ant target="clean" dir="archive/webtier-sample"/>
        <ant target="clean" dir="test/mappingDemo"/>

    </target>


    <target name="test" depends="main,run.test"/>


    <target name="run.test">
        <ant target="test" antfile="build-tests.xml"/>
    </target>

    <target name="prepare.build">
        <mkdir dir="${basedir}/lib"/>
    </target>

    <target name="dist.binary"
            depends="copyDemoSource,main">
        <echo>Build the demos from the jsf-demo repository</echo>
        <echo>copy the sample war files to the zip area</echo>

<!--  No longer copying sample wars  RELEASE_PENDING delete this whole section
        <copy todir="${dist.home}/samples"
              file="${basedir}/basic-ezcomp/build/basic-ezcomp.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/basic-ajax/build/basic-ajax.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/guessNumber2.0/build/jsf-guessNumber2.0.war"/>
        <copy todir="${dist.home}/samples"
              file="sandbox/ajax-request/build/ajax-request.war"/>
        <copy todir="${dist.home}/samples"
              file="sandbox/ajax-queue/build/ajax-queue.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/ifnavigation/build/ifnavigation.war"/>
         <copy todir="${dist.home}/samples"
              file="${basedir}/custom-bean-scope/build/custom-bean-scope.war"/>
-->
        <!-- RELEASE_PENDING need to clean up this build -->

        <!-- Temporarily remove these examples
        <copy todir="${dist.home}/samples"
              file="${basedir}/ezcomp00/build/ezcomp00.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/ezcomp01/build/ezcomp01.war"/>
          -->

        <!-- Not including these old demos in the distribution 

        <copy todir="${dist.home}/samples"
              file="${basedir}/components/build/jsf-components.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/carstore/build/jsf-cardemo.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/mojarra_ext/build/mojarra_ext.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/guessNumber/build/jsf-guessNumber.war"/>       
        <copy todir="${dist.home}/samples"
              file="${basedir}/renderkits/build/jsf-renderkits.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/webtier-sample/build/webtier-sample.war"/>
        <copy todir="${dist.home}/samples"
              file="${basedir}/lib/ui.jar"/>

        -->
    </target>

    <target name="copyDemoSource" depends="copyJars">
        <echo>copy the necessary samples</echo>
         <copy todir="${dist.home}/samples/basic-ezcomp" includeEmptyDirs="false">
            <fileset dir="${basedir}/basic-ezcomp" excludes="build.xml"/>
         </copy>
         <copy todir="${dist.home}/samples/basic-ajax" includeEmptyDirs="false">
            <fileset dir="${basedir}/basic-ajax" excludes="build.xml"/>
         </copy>
         <copy todir="${dist.home}/samples/guessNumber2.0" includeEmptyDirs="false">
            <fileset dir="${basedir}/guessNumber2.0" excludes="build.xml"/>
         </copy>
         <copy todir="${dist.home}/samples/custom-bean-scope" includeEmptyDirs="false">
            <fileset dir="${basedir}/custom-bean-scope" excludes="build.xml"/>
         </copy>
<!--
         <copy todir="${dist.home}/samples/ajax-request" includeEmptyDirs="false">
            <fileset dir="sandbox/ajax-request" excludes="build.xml"/>
         </copy>
         <copy todir="${dist.home}/samples/ajax-queue" includeEmptyDirs="false">
            <fileset dir="sandbox/ajax-queue" excludes="build.xml"/>
         </copy>
-->
        <!--
         <copy todir="${dist.home}/samples/ezcomp00" includeEmptyDirs="false">
            <fileset dir="${basedir}/ezcomp00" excludes="build.xml"/>
         </copy>
         <copy todir="${dist.home}/samples/ezcomp01" includeEmptyDirs="false">
            <fileset dir="${basedir}/ezcomp01" excludes="build.xml"/>
         </copy>
         -->

        <!-- Not including these old demos in the distribution 

        <copy todir="${dist.home}/samples/guessNumber" includeEmptyDirs="false">
            <fileset dir="${basedir}/guessNumber" excludes="build.xml"/>
        </copy>
        <copy todir="${dist.home}/samples/renderkits" includeEmptyDirs="false">
            <fileset dir="${basedir}/renderkits" excludes="build.xml"/>
        </copy>
        <copy todir="${dist.home}/samples/webtier-sample"
              includeEmptyDirs="false">
            <fileset dir="${basedir}/webtier-sample" excludes="build.xml"/>
        </copy>

        <copy todir="${dist.home}/samples/cardemo" includeEmptyDirs="false">
            <fileset dir="${basedir}/carstore"
                     excludes="build.xml"/>
        </copy>       
        <copy todir="${dist.home}/samples/mojarra_ext" includeEmptyDirs="false">
            <fileset dir="${basedir}/mojarra_ext"
                     excludes="build.xml"/>
        </copy> 
        <copy todir="${dist.home}/samples/components" includeEmptyDirs="false">
            <fileset dir="${basedir}/components"
                     excludes="build.xml"/>
        </copy>

        <copy tofile="${dist.home}/samples/build.properties" 
              file="${basedir}/demo-standalone/build.properties.sample"/>
        <copy todir="${dist.home}/samples" 
              file="${basedir}/demo-standalone/build.xml"/>

        -->

    </target>


    <target name="copyJars" depends="prepare.dist">
        <copy file="${jsf-api.jar}" todir="${dist.home}/lib"/>
        <copy file="${jsf-impl.jar}" todir="${dist.home}/lib"/>
        <!--
        <copy file="${impl.dir}/build/generate/conf/share/html_basic.tld"
              todir="${dist.home}/lib"/>
        <copy file="${impl.dir}/conf/share/jsf_core.tld"
              todir="${dist.home}/lib"/>
              -->
    </target>

    <!-- target for building standalone JSF distribution -->
    <target name="dist" depends="dist.binary">
        <echo>create the zip file</echo>
        <move todir="${basedir}/mojarra-${impl.version}">
            <fileset dir="dist"/>
        </move>
        <zip zipfile="mojarra-${impl.version}.zip">
            <fileset dir="${basedir}"
                     includes="mojarra-${impl.version}/**"/>
        </zip>
        <move todir="dist">
            <fileset dir="${basedir}/mojarra-${impl.version}"/>
        </move>

        <echo>Creating Special JAR for GlassFish</echo>
        <mkdir dir="${basedir}/tmp"/>
        <jsf.manifested.jar jarfile="${basedir}/tmp/jsf-impl.jar"
                            basedir="${jsf.build.home}/jsf-ri/build/classes"
                            extension-name="com.sun.faces"/>
        <jar jarfile="glassfish-jsf-${impl.version}.jar">
            <fileset dir="${basedir}/tmp" includes="jsf-impl.jar"/>
            <fileset dir="${jsf.build.home}/jsf-api/build/lib" includes="jsf-api.jar"/>
        </jar>             
        <delete dir="${basedir}/tmp"/>
    </target>


    <target name="prepare.dist">
        <mkdir dir="${dist.home}"/>
        <mkdir dir="${dist.home}/docs"/>
        <mkdir dir="${dist.home}/samples"/>
        <mkdir dir="${dist.home}/renderkitdocs"/>

        <echo>Handle the top level files</echo>
        <copy file="${impl.dir}/${license}" todir="${dist.home}"/>
        <copy file="${impl.dir}/LICENSE-APACHE.txt" todir="${dist.home}"/>
        <copy file="${impl.dir}/THIRDPARTYLICENSEREADME.txt"
              todir="${dist.home}"/>
        <copy todir="${dist.home}/lib">
            <fileset dir="${api.dir}/build/lib" includes="*.jar"/>
        </copy>
        <ant dir="${api.dir}"
             antfile="build.xml"
             inheritall="false"
             target="facesdoc"/>
        <copy todir="${dist.home}/renderkitdocs">
            <fileset dir="${api.dir}/build/generate/facesdoc"/>
        </copy>
        <zip zipfile="${dist.home}/docs/renderkitdocs-${impl.version}.zip">
           <fileset dir="${dist.home}" includes="renderkitdocs/**"/>
        </zip>
        <antcall target="api.javadocs"/>
        <antcall target="api.jsdocs"/>
        <antcall target="ri.vdldocs"/>
        <!--
           rlubke: commented out for now since release notes are 
                   maintained live at https://javaserverfaces.dev.java.net/nonav/rlnotes/<version>

        <antcall target="copydocs"/>
        -->
        <delete dir="${dist.home}/renderkitdocs"/>
        <delete dir="${dist.home}/vdldocs"/>
        <delete dir="${dist.home}/javadocs"/>
        <delete dir="${dist.home}/managed-bean-javadocs" />
        <delete dir="${dist.home}/jsdocs" />
        <unzip src="${dist.home}/docs/javadocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <unzip src="${dist.home}/docs/jsdocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <unzip src="${dist.home}/docs/renderkitdocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <unzip src="${dist.home}/docs/vdldocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <delete file="${dist.home}/docs/javadocs-${impl.version}.zip" />
        <delete file="${dist.home}/docs/jsdocs-${impl.version}.zip" />
        <delete file="${dist.home}/docs/renderkitdocs-${impl.version}.zip" />
        <delete file="${dist.home}/docs/vdldocs-${impl.version}.zip" />
        <echoxml file="${dist.home}/docs/doclist.html">
            <html>
            <head>
               <title>Mojarra ${impl.version} Documentation</title>
            </head>
                <body>
                <div align="center">
                <a href="javadocs/index.html" target="loc">JSF 2.0 API Documentation</a><span> | </span>
                <a href="managed-bean-javadocs/index.html" target="loc">JSF 2.0 Managed Bean Documentation</a><span> | </span>
                <a href="vdldocs/facelets/index.html" target="loc">Facelets Tag Documentation</a><span> | </span>
                <a href="vdldocs/jsp/index.html" target="loc">JSP Tag Documentation</a><span> | </span>
                <a href="renderkitdocs/index.html" target="loc">Renderkit Documentation</a><span> | </span>
                <a href="jsdocs/index.html" target="loc">Javascript Documentation</a>
                </div>
                </body>
            </html>
        </echoxml>
        <echoxml file="${dist.home}/docs/index.html">
            <html>
            <head>
               <title>Mojarra ${impl.version} Documentation</title>
            </head>
            <frameset cols="100%">
              <frameset rows="10%, 90%">
                  <frame src="doclist.html" />
                  <frame name="loc" />
              </frameset>

            </frameset>
            </html>
        </echoxml>
        <zip basedir="${dist.home}/docs" destfile="${dist.home}/mojarra-${impl.version}-documentation.zip" />
        <delete dir="${dist.home}/docs/renderkitdocs"/>
        <delete dir="${dist.home}/docs/vdldocs"/>
        <delete dir="${dist.home}/docs/javadocs"/>
        <delete dir="${dist.home}/docs/managed-bean-javadocs" />
        <delete dir="${dist.home}/docs/jsdocs" />
        <delete file="${dist.home}/docs/index.html" />
        <delete file="${dist.home}/docs/doclist.html" />
        <move file="${dist.home}/mojarra-${impl.version}-documentation.zip" todir="${dist.home}/docs" />
    </target>

    <target name="api.javadocs">

        <echo>Build the API Javadocs</echo>
        <ant dir="${api.dir}"
             antfile="build.xml" target="javadocs"/>
        <echo>Copy the API Javadocs to the dist</echo>
        <filter token="build.number" value="${build.number}" />
        <copy todir="${dist.home}/javadocs" filtering="true">
            <fileset dir="${api.dir}/build/javadocs"/>
        </copy>
        <copy todir="${dist.home}/managed-bean-javadocs" filtering="true">
            <fileset dir="${api.dir}/build/managed-bean-javadocs"/>
        </copy>
        <zip zipfile="${dist.home}/docs/javadocs-${impl.version}.zip">
           <fileset dir="${dist.home}" includes="javadocs/**"/>
           <fileset dir="${dist.home}" includes="managed-bean-javadocs/**"/>
        </zip>

    </target>

    <target name="api.jsdocs">
            <!-- Create the jsdocs distribution -->
        <java fork="true" jar="${jsdoc.home}/jsdoc-toolkit/jsrun.jar">
                    <arg line="${jsdoc.home}/jsdoc-toolkit/app/run.js"/>
                    <arg line="-a"/>
                    <arg line="-d=${dist.home}/jsdocs"/>
                    <arg line="-t=${jsdoc.home}/jsdoc-toolkit/templates/jsdoc"/>
                    <arg value="${basedir}/../jsf-api/src/main/resources/jsf.js"/>
        </java>
        <zip zipfile="${dist.home}/docs/jsdocs-${impl.version}.zip">
            <fileset dir="${dist.home}" includes="jsdocs/**"/>
        </zip>

    </target>

    <target name="ri.vdldocs">

        <echo>Build the vdldocs</echo>
        <ant inheritAll="false" dir="${impl.dir}"
             antfile="build.xml" target="vdldocs"/>
        <echo>Copy the Javadocs to the dist</echo>
        <copy todir="${dist.home}/vdldocs">
            <fileset dir="${impl.dir}/build/vdldocs"/>
        </copy>
        <zip zipfile="${dist.home}/docs/vdldocs-${impl.version}.zip">
           <fileset dir="${dist.home}" includes="vdldocs/**"/>
        </zip>

    </target>


    <target name="copydocs"
            description="Copy necessary files from docs directory to dist.home">
        <mkdir dir="${dist.home}"/>
        <mkdir dir="${dist.home}/docs"/>
        <mkdir dir="${dist.home}/docs/style"/>
        <copy todir="${dist.home}/docs">
            <fileset dir="${impl.dir}/docs"
                     includes="index.html,samples.html,ReleaseNotes.html"/>
        </copy>
        <copy todir="${dist.home}/docs/style">
            <fileset dir="${impl.dir}/docs/style" includes="default.css"/>
        </copy>
    </target>


    <target name="main" depends="update,prepare.build">
        <ant dir="${basedir}/custom-bean-scope" inheritAll="false" />
<!--
        <ant dir="archive/components" inheritAll="false" />
        <ant dir="archive/carstore" inheritAll="false" />
-->
        <ant dir="${basedir}/tree-visit" inheritAll="false" />
        <ant dir="${basedir}/viewExpired" inheritAll="false" />
<!--
        <ant dir="archive/mojarra_ext" inheritAll="false" />
        <ant dir="archive/helloDuke" inheritAll="false" />
        <ant dir="archive/guessNumber" inheritAll="false" />
-->
        <ant dir="${basedir}/guessNumber2.0" inheritAll="false" />
        <ant dir="${basedir}/ifnavigation" inheritAll="false" />
<!--
        <ant dir="${basedir}/basic-ezcomp" inheritAll="false" />
        <ant dir="${basedir}/basic-ajax" inheritAll="false" />
-->
<!--
        <ant dir="sandbox/ajax-request" inheritAll="false" />
        <ant dir="sandbox/ajax-queue" inheritAll="false" />
-->
        <!--
        <ant dir="${basedir}/ezcomp00" inheritAll="false" />
        <ant dir="${basedir}/ezcomp01" inheritAll="false" />
         -->
<!--
        <ant dir="${basedir}/test/mappingDemo" inheritAll="false" />
        <ant dir="archive/standard" inheritAll="false" />
        <ant dir="archive/renderkits" inheritAll="false"/>
        <ant dir="archive/webtier-sample" inheritAll="false"/>
-->
    </target>

</project>
