<?xml version="1.0"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!-- ************ JSF build file ************************************** -->

<project name="jsf-demo" default="main" basedir=".">

    <!-- ************ Per user local properties ******************************* -->

    <property file="${user.home}/build.properties"/>
    <property file="../build.properties"/>
    <import file="${jsf.build.home}/common/ant/common.xml"/>


    <!-- ************ Where are we building into? ***************************** -->

    <!-- The base directory for compilation targets -->

    <property name="Name" value="JavaServer Faces"/>
    <property name="name" value="jsf-demo"/>

    <property name="build.home" value="${basedir}/build"/>

    <!-- The base directory for distribution targets -->
    <property name="dist.home" value="${basedir}/dist"/>


    <!-- Use LICENSE.txt for FCS release. -->
    <property name="license" value="LICENSE.TXT"/>

    <target name="clean">

        <delete file="mojarra-${impl.version}.zip"/>
        <delete file="glassfish-jsf-${impl.version}.jar"/>
        <delete dir="${dist.home}"/>
        <delete dir="${basedir}/test/build"/>
        <ant target="clean" antfile="build-tests.xml"/>
    </target>


    <target name="test" depends="main,run.test">
        <ant target="clean" antfile="build-tests.xml"/>
    </target>


    <target name="run.test">
        <ant target="test" antfile="build-tests.xml"/>
    </target>

    <target name="prepare.build">
        <mkdir dir="archive/lib"/>
    </target>

    <target name="copyDemoSource" depends="copyJars">
        <echo>copy the necessary samples</echo>
         <copy todir="${dist.home}/samples/basic-ezcomp" includeEmptyDirs="false">
            <fileset dir="${basedir}/basic-ezcomp" excludes="build.xml,build/**"/>
         </copy>
         <copy todir="${dist.home}/samples/basic-ajax" includeEmptyDirs="false">
            <fileset dir="${basedir}/basic-ajax" excludes="build.xml,build/**"/>
         </copy>
        <copy todir="${dist.home}/samples/ajax-component" includeEmptyDirs="false">
           <fileset dir="${basedir}/ajax-component" excludes="build.xml,build/**"/>
        </copy>
         <copy todir="${dist.home}/samples/guessNumber" includeEmptyDirs="false">
            <fileset dir="${basedir}/guessNumber" excludes="build.xml,build/**"/>
         </copy>
         <copy todir="${dist.home}/samples/custom-bean-scope" includeEmptyDirs="false">
            <fileset dir="${basedir}/custom-bean-scope" excludes="build.xml,build/**"/>
         </copy>
        <copy todir="${dist.home}/samples/bean-validator" includeEmptyDirs="false">
           <fileset dir="${basedir}/bean-validator" excludes="build.xml,build/**"/>
        </copy>
        <copy todir="${dist.home}/samples/custom-tag" includeEmptyDirs="false">
           <fileset dir="${basedir}/custom-tag" excludes="build.xml,build/**"/>
        </copy>
        <copy todir="${dist.home}/samples/helloworld" includeEmptyDirs="false">
           <fileset dir="${basedir}/helloworld" excludes="build.xml,build/**"/>
        </copy>
        <copy todir="${dist.home}/samples/viewExpired" includeEmptyDirs="false">
           <fileset dir="${basedir}/viewExpired" excludes="build.xml,build/**"/>
        </copy>
    </target>


    <target name="copyJars" depends="prepare.dist">
        <copy file="${jsf-api.jar}" todir="${dist.home}/lib"/>
        <copy file="${jsf-impl.jar}" todir="${dist.home}/lib"/>
    </target>

    <!-- target for building standalone JSF distribution -->
    <target name="dist" depends="copyDemoSource,main">
        <echo>create the zip file</echo>
        <move todir="${basedir}/mojarra-${impl.version}">
            <fileset dir="dist"/>
        </move>
        <zip zipfile="mojarra-${impl.version}.zip">
            <fileset dir="${basedir}"
                     includes="mojarra-${impl.version}/**"/>
        </zip>
        <move todir="dist">
            <fileset dir="${basedir}/mojarra-${impl.version}"/>
        </move>

        <echo>Creating Special JAR for GlassFish</echo>
        <mkdir dir="${basedir}/tmp"/>
        <jsf.manifested.jar jarfile="${basedir}/tmp/jsf-impl.jar"
                            basedir="${jsf.build.home}/jsf-ri/build/classes"
                            extension-name="com.sun.faces"/>
        <jar jarfile="glassfish-jsf-${impl.version}.jar">
            <fileset dir="${basedir}/tmp" includes="jsf-impl.jar"/>
            <fileset dir="${jsf.build.home}/jsf-api/build/lib" includes="jsf-api.jar"/>
        </jar>             
        <delete dir="${basedir}/tmp"/>
    </target>


    <target name="prepare.dist">
        <mkdir dir="${dist.home}"/>
        <mkdir dir="${dist.home}/docs"/>
        <mkdir dir="${dist.home}/samples"/>
        <mkdir dir="${dist.home}/renderkitdocs"/>

        <echo>Handle the top level files</echo>
        <copy file="${impl.dir}/${license}" todir="${dist.home}"/>
        <copy file="${impl.dir}/LICENSE-APACHE.txt" todir="${dist.home}"/>
        <copy file="${impl.dir}/THIRDPARTYLICENSEREADME.txt"
              todir="${dist.home}"/>
        <copy todir="${dist.home}/lib">
            <fileset dir="${api.dir}/build/lib" includes="*.jar"/>
        </copy>
        <ant dir="${api.dir}"
             antfile="build.xml"
             inheritall="false"
             target="facesdoc"/>
        <copy todir="${dist.home}/renderkitdocs">
            <fileset dir="${api.dir}/build/generate/facesdoc"/>
        </copy>
        <zip zipfile="${dist.home}/docs/renderkitdocs-${impl.version}.zip">
           <fileset dir="${dist.home}" includes="renderkitdocs/**"/>
        </zip>
        <antcall target="api.javadocs"/>
        <antcall target="api.jsdocs"/>
        <antcall target="ri.vdldocs"/>
        <!--
           rlubke: commented out for now since release notes are 
                   maintained live at https://javaserverfaces.dev.java.net/nonav/rlnotes/<version>

        <antcall target="copydocs"/>
        -->
        <delete dir="${dist.home}/renderkitdocs"/>
        <delete dir="${dist.home}/vdldocs"/>
        <delete dir="${dist.home}/javadocs"/>
        <delete dir="${dist.home}/managed-bean-javadocs" />
        <delete dir="${dist.home}/jsdocs" />
        <unzip src="${dist.home}/docs/javadocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <unzip src="${dist.home}/docs/jsdocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <unzip src="${dist.home}/docs/renderkitdocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <unzip src="${dist.home}/docs/vdldocs-${impl.version}.zip" dest="${dist.home}/docs" />
        <delete file="${dist.home}/docs/javadocs-${impl.version}.zip" />
        <delete file="${dist.home}/docs/jsdocs-${impl.version}.zip" />
        <delete file="${dist.home}/docs/renderkitdocs-${impl.version}.zip" />
        <delete file="${dist.home}/docs/vdldocs-${impl.version}.zip" />
        <echoxml file="${dist.home}/docs/doclist.html">
            <html>
            <head>
               <title>Mojarra ${impl.version} Documentation</title>
                <style>
                    .navbar {
                    display: block;
                    background: #507c9a;
                    padding: 9px 7px 5px 7px;
                    }
                    .navbar UL {
                    display: inline;
                    margin-left: 0px;
                    padding-left: 0px;
                    }
                    .navbar UL LI {
                    display: inline;
                    margin-left: 0px;
                    border-left: 1px solid #FFF;
                    padding-left: 5px;
                    }
                    .navbar UL LI.first {
                    border-left: none;
                    }
                    .navbar A {
                    font-weight:normal;
                    color:#CCDAE3;
                    text-decoration: none;
                    }
                    .navbar A:hover {
                    text-decoration: underline;
                    }
                    .navbar A:visited {
                    font-weight:normal;
                    color:#FFF;
                    }
                    .navbar UL LI A SPAN.active {
                    font-weight: bold;
                    color:#FFF;
                    }
                </style>
            </head>
                <body>
                <div class="navbar" align="center">
                    <ul>
                        <li class="first"><a href="javadocs/index.html" target="loc">JSF 2.1 API Documentation</a></li>
                        <li><a href="managed-bean-javadocs/index.html" target="loc">JSF 2.1 Managed Bean Documentation</a></li>
                        <li><a href="vdldocs/facelets/index.html" target="loc">Facelets Tag Documentation</a></li>
                        <li><a href="vdldocs/jsp/index.html" target="loc">JSP Tag Documentation</a></li>
                        <li><a href="renderkitdocs/index.html" target="loc">Renderkit Documentation</a></li>
                        <li><a href="jsdocs/index.html" target="loc">Javascript Documentation</a></li>
                    </ul>
                </div>
                </body>
            </html>
        </echoxml>
        <echoxml file="${dist.home}/docs/index.html">
            <html>
            <head>
               <title>Mojarra ${impl.version} Documentation</title>
            </head>
            <frameset cols="100%">
              <frameset rows="8%, 92%">
                  <frame src="doclist.html" />
                  <frame name="loc" />
              </frameset>

            </frameset>
            </html>
        </echoxml>
        <zip basedir="${dist.home}/docs" excludes="*.zip" destfile="${dist.home}/mojarra-${impl.version}-documentation.zip" />
        <delete dir="${dist.home}/docs/renderkitdocs"/>
        <delete dir="${dist.home}/docs/vdldocs"/>
        <delete dir="${dist.home}/docs/javadocs"/>
        <delete dir="${dist.home}/docs/managed-bean-javadocs" />
        <delete dir="${dist.home}/docs/jsdocs" />
        <delete file="${dist.home}/docs/index.html" />
        <delete file="${dist.home}/docs/doclist.html" />
        <move file="${dist.home}/mojarra-${impl.version}-documentation.zip" todir="${dist.home}/docs" />
    </target>

    <target name="api.javadocs">

        <echo>Build the API Javadocs</echo>
        <ant dir="${api.dir}"
             antfile="build.xml" target="javadocs"/>
        <echo>Copy the API Javadocs to the dist</echo>
        <filter token="build.number" value="${build.number}" />
        <copy todir="${dist.home}/javadocs" filtering="true">
            <fileset dir="${api.dir}/build/javadocs"/>
        </copy>
        <copy todir="${dist.home}/managed-bean-javadocs" filtering="true">
            <fileset dir="${api.dir}/build/managed-bean-javadocs"/>
        </copy>
        <zip zipfile="${dist.home}/docs/javadocs-${impl.version}.zip">
           <fileset dir="${dist.home}" includes="javadocs/**"/>
           <fileset dir="${dist.home}" includes="managed-bean-javadocs/**"/>
        </zip>

    </target>

    <target name="api.jsdocs">
            <!-- Create the jsdocs distribution -->
        <java fork="true" jar="${jsdoc.home}/jsdoc-toolkit/jsrun.jar">
                    <arg line="${jsdoc.home}/jsdoc-toolkit/app/run.js"/>
                    <arg line="-a"/>
                    <arg line="-d=${dist.home}/jsdocs"/>
                    <arg line="-t=${jsdoc.home}/jsdoc-toolkit/templates/jsdoc"/>
                    <arg value="${basedir}/../jsf-api/src/main/resources/jsf.js"/>
        </java>
        <zip zipfile="${dist.home}/docs/jsdocs-${impl.version}.zip">
            <fileset dir="${dist.home}" includes="jsdocs/**"/>
        </zip>

    </target>

    <target name="ri.vdldocs">

        <echo>Build the vdldocs</echo>
        <ant inheritAll="false" dir="${impl.dir}"
             antfile="build.xml" target="vdldocs"/>
        <echo>Copy the Javadocs to the dist</echo>
        <copy todir="${dist.home}/vdldocs">
            <fileset dir="${impl.dir}/build/vdldocs"/>
        </copy>
        <zip zipfile="${dist.home}/docs/vdldocs-${impl.version}.zip">
           <fileset dir="${dist.home}" includes="vdldocs/**"/>
        </zip>

    </target>


    <target name="copydocs"
            description="Copy necessary files from docs directory to dist.home">
        <mkdir dir="${dist.home}"/>
        <mkdir dir="${dist.home}/docs"/>
        <mkdir dir="${dist.home}/docs/style"/>
        <copy todir="${dist.home}/docs">
            <fileset dir="${impl.dir}/docs"
                     includes="index.html,samples.html,ReleaseNotes.html"/>
        </copy>
        <copy todir="${dist.home}/docs/style">
            <fileset dir="${impl.dir}/docs/style" includes="default.css"/>
        </copy>
    </target>


    <target name="main" depends="prepare.build">
    </target>

</project>
