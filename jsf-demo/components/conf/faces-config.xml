<?xml version='1.0' encoding='UTF-8'?>

<!--
 Copyright 2003 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<!DOCTYPE faces-config PUBLIC
  "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.0//EN"
  "http://java.sun.com/dtd/web-facesconfig_1_0.dtd">

<!-- =========== DEMO COMPONENTS CONFIGURATION FILE ======================= -->

<faces-config>

  <!-- Custom Components -->

  <component>
    <component-type>DemoArea</component-type>
    <component-class>components.components.AreaComponent</component-class>
    <property>
      <description>
        Alternate text if we synthesize an ImageArea bean.
      </description>
      <property-name>alt</property-name>
      <property-class>java.lang.String</property-class>
    </property>
    <property>
      <description>
        Hotspot coordinates if we synthesize an ImageArea bean.
      </description>
      <property-name>coords</property-name>
      <property-class>java.lang.String</property-class>
    </property>
    <property>
      <description>
        Shape (default, rect, circle, poly) if we synthesize an ImageArea bean.
      </description>
      <property-name>shape</property-name>
      <property-class>java.lang.String</property-class>
    </property>
  </component>

  <component>
    <component-type>Graph</component-type>
    <component-class>components.components.GraphComponent</component-class>
  </component>

  <component>
    <component-type>DemoMap</component-type>
    <component-class>components.components.MapComponent</component-class>
    <property>
      <description>
        Alternate text for the currently selected child AreaComponent.
      </description>
      <property-name>current</property-name>
      <property-class>java.lang.String</property-class>
    </property>
  </component>

  <component>
    <component-type>Pane</component-type>
    <component-class>components.components.PaneComponent</component-class>
  </component>
  
  <component>
    <component-type>Scroller</component-type>
    <component-class>components.components.ScrollerComponent</component-class>
  </component>

    <!-- Custom Renderers -->

  <render-kit>

    <renderer>
      <description>
        Renderer for a components.components.AreaComponent component.
      </description>
      <renderer-type>DemoArea</renderer-type>
      <renderer-class>components.renderkit.AreaRenderer</renderer-class>
      <attribute>
        <description>
          Context-relative path to an image to be displayed when the
          mouse is not hovering over this hotspot.
        </description>
        <attribute-name>onmouseout</attribute-name>
        <attribute-class>java.lang.String</attribute-class>
      </attribute>
      <attribute>
        <description>
          Context-relative path to an image to be displayed when the
          mouse is hovering over this hotspot.
        </description>
        <attribute-name>onmouseover</attribute-name>
        <attribute-class>java.lang.String</attribute-class>
      </attribute>
      <attribute>
        <description>
          CSS style class to use when rendering this component.
        </description>
        <attribute-name>styleClass</attribute-name>
        <attribute-class>java.lang.String</attribute-class>
      </attribute>
      <supported-component-class>
        <component-class>components.components.AreaComponent</component-class>
      </supported-component-class>
    </renderer>

    <renderer>
      <description>
        Renderer for a components.components.MapComponent component.
      </description>
      <renderer-type>DemoMap</renderer-type>
      <renderer-class>components.renderkit.MapRenderer</renderer-class>
      <attribute>
        <description>
          CSS style class to use when rendering this component.
        </description>
        <attribute-name>styleClass</attribute-name>
        <attribute-class>java.lang.String</attribute-class>
      </attribute>
      <supported-component-class>
        <component-class>components.components.MapComponent</component-class>
      </supported-component-class>
    </renderer>

    <renderer>
      <renderer-type>MenuBar</renderer-type>
      <renderer-class>components.renderkit.MenuBarRenderer</renderer-class>
    </renderer>

    <renderer>
      <renderer-type>MenuTree</renderer-type>
      <renderer-class>components.renderkit.MenuTreeRenderer</renderer-class>
    </renderer>

    <renderer>
      <description>
        Renderer for a UIData component that can serve as the basis for
        different markup creation for the components that are children
        of the child UIColumn components.
      </description>
      <renderer-type>Repeater</renderer-type>
      <renderer-class>components.renderkit.RepeaterRenderer</renderer-class>
    </renderer>

    <renderer>
      <renderer-type>Stylesheet</renderer-type>
      <renderer-class>components.renderkit.StylesheetRenderer</renderer-class>
    </renderer>

    <renderer>
      <renderer-type>TabLabel</renderer-type>
      <renderer-class>components.renderkit.TabLabelRenderer</renderer-class>
    </renderer>

    <renderer>
      <renderer-type>Tab</renderer-type>
      <renderer-class>components.renderkit.TabRenderer</renderer-class>
    </renderer>

    <renderer>
      <renderer-type>Tabbed</renderer-type>
      <renderer-class>components.renderkit.TabbedRenderer</renderer-class>
    </renderer>
  </render-kit>


</faces-config>
