<!--
 
 * Copyright 2002 Sun Microsystems, Inc. All Rights Reserved.
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * - Redistribution in binary form must reproduce the above
 *   copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials
 *   provided with the distribution.
 * 
 * Neither the name of Sun Microsystems, Inc. or the names of
 * contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * 
 * This software is provided "AS IS," without a warranty of any
 * kind. ALL EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND
 * WARRANTIES, INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT, ARE HEREBY
 * EXCLUDED. SUN AND ITS LICENSORS SHALL NOT BE LIABLE FOR ANY
 * DAMAGES OR LIABILITIES SUFFERED BY LICENSEE AS A RESULT OF OR
 * RELATING TO USE, MODIFICATION OR DISTRIBUTION OF THIS SOFTWARE OR
 * ITS DERIVATIVES. IN NO EVENT WILL SUN OR ITS LICENSORS BE LIABLE
 * FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT, INDIRECT,
 * SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER
 * CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF
 * THE USE OF OR INABILITY TO USE THIS SOFTWARE, EVEN IF SUN HAS
 * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 * 
 * You acknowledge that this software is not designed, licensed or
 * intended for use in the design, construction, operation or
 * maintenance of any nuclear facility.
  
-->

<project name="components" default="build" basedir=".">
  <target name="init">
      <tstamp/>
  </target>

  <!-- Configure the context path for this application -->
  <property file="${user.home}/build.properties"/>  <!-- User local        -->
  <property file="build.properties"/>               <!-- Component local   -->
  <property file="../build.properties"/>            <!-- Commons local     -->
  <property name="context.path" value="/components"/>
  <property name="example" value="components" />
  <property name="webapp" value="demo" />
  <property name="build"   value="${basedir}/build" />

  <!-- Configure properties to access the Manager application -->
  <property name="url"      value="http://localhost:8080/manager"/>

  <!-- Required jars for making this self-contained -->
  <property name="servlet23.jar" 
            value="${tomcat.home}/common/lib/servlet.jar"/>
  <property name="commons-beanutils.jar" 
            value="web/WEB-INF/lib/commons-beanutils.jar"/>
  <property name="commons-collections.jar"
    	    value="web/WEB-INF/lib/commons-collections.jar"/>
  <property name="jstl_el.jar"
    	    value="web/WEB-INF/lib/jstl_el.jar"/>
  <property name="commons-logging.jar" 
            value="web/WEB-INF/lib/commons-logging.jar"/>
  <property name="commons-digester.jar" 
            value="web/WEB-INF/lib/commons-digester.jar"/>
  <property name="jsf-api.jar" 
            value="web/WEB-INF/lib/jsf-api.jar"/>
  <property name="jsf-ri.jar" 
            value="web/WEB-INF/lib/jsf-ri.jar"/>
  <property name="jstl.jar" 
            value="web/WEB-INF/lib/jstl.jar"/>
  <property name="standard.jar" 
            value="web/WEB-INF/lib/standard.jar"/>

  <path id="classpath">
    <fileset dir="${build}/${webapp}/WEB-INF/lib" includes="*.jar" 
             excludes="**/jsf-ri.jar"/>
    <pathelement location="${build}/classes"/>
    <pathelement location="${servlet23.jar}"/>
    <pathelement location="${standard.jar}"/>
  </path>


  <target name="clean" >
    <delete dir="${build}" />
    <delete dir="${context.path}" />
  </target>

  <target name="verifyPreconditions">

    <antcall target="checkRequiredFile">
       <param name="file" value="${servlet23.jar}"/>
       <param name="fail.message" value="A jar file containing the Servlet 2.3 and JSP1.2 classes is required to compile components.  Please define the property servlet23.jar in your build.properties file and ensure that the file exists."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-beanutils.jar}"/>
       <param name="fail.message" value="${commons-beanutils.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-digester.jar}"/>
       <param name="fail.message" value="${commons-digester.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-logging.jar}"/>
       <param name="fail.message" value="${commons-logging.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-collections.jar}"/>
       <param name="fail.message" value="${commons-collections.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl_el.jar}"/>
       <param name="fail.message" value="${jstl_el.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-api.jar}"/>
       <param name="fail.message" value="${jsf-api.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-ri.jar}"/>
       <param name="fail.message" value="${jsf-ri.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${standard.jar}"/>
       <param name="fail.message" value="${standard.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl.jar}"/>
       <param name="fail.message" value="${jstl.jar} must exist."/>
    </antcall>

  </target>

  <target name="prepare" depends="init"
   	description="Create build directories.">
    <mkdir dir="${build}" />
    <mkdir dir="${build}/${webapp}" />
    <mkdir dir="${build}/classes" />
    <mkdir dir="${build}/classes/${webapp}" />
    <mkdir dir="${build}/classes/${example}" />
    <mkdir dir="${build}/classes/${example}/META-INF" />
    <mkdir dir="${build}/${webapp}/WEB-INF/lib" />
    <mkdir dir="${build}/${webapp}/src/components" />
    <mkdir dir="${build}/${webapp}/WEB-INF/classes" />
    <copy todir="${build}/${webapp}/WEB-INF/lib" >
      <fileset dir="${basedir}/web/WEB-INF/lib">
        <include name="*.jar"/>
      </fileset>
    </copy>
  </target>
  
  <taskdef name="list" classname="org.apache.catalina.ant.ListTask"/>	
  <taskdef name="install"  classname="org.apache.catalina.ant.InstallTask"/>
  <taskdef name="reload"   classname="org.apache.catalina.ant.ReloadTask"/>
  <taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask"/>	

  <!-- Executable Targets -->

  <target name="list" description="List web applications" >
    <list url="${url}" username="${username}" password="${password}" />
  </target>

  <target name="install" description="Install web application"
          depends="build">
    <install url="${url}" username="${username}" password="${password}"
          path="${context.path}"  war="file://${build}/${webapp}" />
  </target>

  <target name="reload" description="Reload web application"
          depends="build">
    <reload  url="${url}" username="${username}" password="${password}"
          path="${context.path}"/>
  </target>

  <target name="remove" description="Remove web application">
    <remove url="${url}" username="${username}" password="${password}"
          path="${context.path}"/>
  </target>

  <target name="build" depends="prepare" 
     description="Compile Java files for components, not webapp." >
    <javac debug="on" srcdir="src" destdir="${build}/classes/${example}">
        <include name="components/**" />
     <classpath refid="classpath"/>
    </javac>
    <copy todir="${build}/classes/${example}/META-INF" 
            file="src/components/taglib/components.tld"/>

    <javac debug="on" srcdir="src" destdir="${build}/${webapp}/WEB-INF/classes">
        <include name="demo/**" />
     <classpath refid="classpath"/>
    </javac>

    <!-- strip out the components -->
    <delete dir="${build}/${webapp}/WEB-INF/classes/components" />

    <copy todir="${build}/${webapp}/WEB-INF">
      <fileset dir="web/WEB-INF"    >
        <include name="web.xml" />
      </fileset>
    </copy>

    <!-- copy over the properties -->
    <copy todir="${build}/${webapp}/WEB-INF/classes/">
      <fileset dir="src"    >
        <include name="**/*.properties" />
      </fileset>
    </copy>


    <!-- copy the java source to the webapp for viewing by the user -->
    <copy todir="${build}/${webapp}/src/components">
      <fileset dir="src/components" />
    </copy>
    <copy todir="${build}/${webapp}/WEB-INF" file="src/demo/taglib/demo.tld"/>

     <copy todir="${build}/${webapp}">
      <fileset dir="web" />
    </copy>

    <jar destfile="${build}/${webapp}/WEB-INF/lib/demo-${example}.jar" 
            basedir="${build}/classes/${example}"/>

  </target>	

</project>

