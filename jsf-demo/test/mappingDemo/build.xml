<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License). You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the License at
 https://javaserverfaces.dev.java.net/CDDL.html or
 legal/CDDLv1.0.txt. 
 See the License for the specific language governing
 permission and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at legal/CDDLv1.0.txt.    
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 your own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 [Name of File] [ver.__] [Date]
 
 Copyright 2005 Sun Microsystems Inc. All Rights Reserved
-->

<project name="mappingDemo" default="build" basedir=".">
 
  <property name="depth" value="../.."/>

  <property file="${user.home}/build.properties"/>   <!-- user local      -->
  <property file="build.properties"/>                <!-- this demo local -->
  <property file="../../build.properties"/>          <!-- demos local     -->
  <property file="../../../build.properties"/>       <!-- jsf local       -->
  <property file="../../default.properties"/>        <!-- last resort     -->

  <!-- Configure the context path for this application -->
  <property name="context.path" value="/jsf-mappingDemo"/>
  <property name="example" value="jsf-mappingDemo" />
  <property name="build"   value="${basedir}/build" />

  <property name="extension" value="extension" />
  <property name="extension.war" value="${example}-${extension}.war" />
  <property name="extension.context.path" value="/${example}-${extension}" />

  <property name="prefix" value="prefix" />
  <property name="prefix.war" value="${example}-${prefix}.war" />
  <property name="prefix.context.path" value="/${example}-${prefix}" />

  <!-- Configure properties to access the Manager application -->
  <property name="url"      value="http://localhost:8080/manager"/>


  <path id="classpath">
    <pathelement location="${commons-beanutils.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-digester.jar}"/>
    <pathelement location="${commons-logging.jar}"/>
    <pathelement location="${jsf-api.jar}"/>
    <pathelement location="${jsf-impl.jar}"/>
    <pathelement location="${jstl.jar}"/>
    <pathelement location="${build}/${example}/WEB-INF/classes"/>
    <pathelement location="${servlet.jar}"/>
  </path>

  <path id="catalina-ant.classpath">
    <pathelement location="${catalina-ant.jar}"/>
  </path>
    
    <target name="init" depends="verifyPreconditions">
        <tstamp/>        
    </target>
    

  <target name="clean" >
    <echo message="JAR: ${catalina-ant.jar}"/>
    <delete dir="${build}" />
    <delete dir="${context.path}" />
  </target>

  <target name="verifyPreconditions" >

    <antcall target="checkRequiredFile">
       <param name="file" value="${servlet.jar}"/>
       <param name="fail.message" value="A jar file containing the Servlet 2.3 and JSP1.2 classes is required to compile mappingDemo.  Please define the property servlet.jar in your build.properties file and ensure that the file exists."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-beanutils.jar}"/>
       <param name="fail.message" value="${commons-beanutils.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-digester.jar}"/>
       <param name="fail.message" value="${commons-digester.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-logging.jar}"/>
       <param name="fail.message" value="${commons-logging.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-collections.jar}"/>
       <param name="fail.message" value="${commons-collections.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-api.jar}"/>
       <param name="fail.message" value="${jsf-api.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-impl.jar}"/>
       <param name="fail.message" value="${jsf-impl.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${standard.jar}"/>
       <param name="fail.message" value="${standard.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl.jar}"/>
       <param name="fail.message" value="${jstl.jar} must exist."/>
    </antcall>

  </target>

  <target name="prepare" depends="init"
        description="Create build directories.">
    <mkdir dir="${build}/${example}" />
    <mkdir dir="${build}/${example}/WEB-INF" />
    <mkdir dir="${build}/${example}/WEB-INF/classes" />
    <mkdir dir="${build}/${example}/WEB-INF/lib" />
  </target>

  <target name="copyJars" depends="prepare" if="build.standalone">
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-beanutils.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-logging.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-digester.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${commons-collections.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${jsf-api.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${jsf-impl.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${jstl.jar}" />
    <copy todir="${build}/${example}/WEB-INF/lib" file="${standard.jar}" />
  </target>
 
  <taskdef  name="install"  classname="org.apache.catalina.ant.InstallTask">
      <classpath refid="catalina-ant.classpath" />
  </taskdef>
  <taskdef  name="list"     classname="org.apache.catalina.ant.ListTask">
      <classpath refid="catalina-ant.classpath" />
  </taskdef>
  <taskdef  name="reload"   classname="org.apache.catalina.ant.ReloadTask">
      <classpath refid="catalina-ant.classpath" />
  </taskdef>
  <taskdef  name="remove"   classname="org.apache.catalina.ant.RemoveTask">
      <classpath refid="catalina-ant.classpath" />
  </taskdef>

  <!-- Executable Targets -->

  <target name="list" description="List web applications" >
    <list url="${url}" username="${username}" password="${password}" />
  </target>

  <target name="install" description="Install web application"
          depends="build">
    <install url="${url}" username="${username}" password="${password}"
          path="${extension.context.path}"  war="file:${build}/${extension.war}" />
    <install url="${url}" username="${username}" password="${password}"
          path="${prefix.context.path}"  war="file:${build}/${prefix.war}" />
  </target>


  <target name="reload" description="Reload web application"
          depends="build">
    <reload  url="${url}" username="${username}" password="${password}"
          path="${extension.context.path}"/>
    <reload  url="${url}" username="${username}" password="${password}"
          path="${prefix.context.path}"/>
  </target>

  <target name="remove" description="Remove web application">
    <remove url="${url}" username="${username}" password="${password}"
          path="${extension.context.path}"/>
    <remove url="${url}" username="${username}" password="${password}"
          path="${prefix.context.path}"/>
  </target>

  <target name="build" depends="build-prefix-war, build-extension-war"/>

  <target name="build-extension-war" depends="build-both" 
     description="Compile Java files and copy static files." >
    <delete file="${build}/${example}/WEB-INF/web.xml" />
    <copy tofile="${build}/${example}/WEB-INF/web.xml">
        <fileset dir="web/WEB-INF">
        <include name="*${extension}.xml" />
      </fileset>
    </copy>
    <copy todir="${build}/${example}/WEB-INF">
        <fileset dir="web/WEB-INF">
        <include name="faces-config.xml" />
      </fileset>
    </copy>

    <jar jarfile="${extension.war}" basedir="${build}/${example}"/>
    <copy todir="${build}" file="${extension.war}" />
    <delete file="${extension.war}" />
  </target>

  <target name="build-prefix-war" depends="build-both" 
     description="Compile Java files and copy static files." >
    <delete file="${build}/${example}/WEB-INF/web.xml" />
    <copy tofile="${build}/${example}/WEB-INF/web.xml">
        <fileset dir="web/WEB-INF">
        <include name="*${prefix}.xml" />
      </fileset>
    </copy>
    <copy todir="${build}/${example}/WEB-INF">
        <fileset dir="web/WEB-INF">
        <include name="faces-config.xml" />
      </fileset>
    </copy>

    <jar jarfile="${prefix.war}" basedir="${build}/${example}"/>
    <copy todir="${build}" file="${prefix.war}" />
    <delete file="${prefix.war}" />
  </target>

  <target name="build-both" depends="copyJars" 
     description="Compile Java files and copy static files." >
    <javac srcdir="src" destdir="${build}/${example}/WEB-INF/classes">
    	<include name="**/*.java" />
     <classpath refid="classpath"/>
    </javac>

     <copy todir="${build}/${example}/">
      <fileset dir="web">
        <include name="*.html" />
        <include name="*.gif" />
        <include name="*.jpg" />
        <include name="*.jsp" />
        <include name="*.xml" />
      </fileset>
    </copy>
    <copy todir="${build}/${example}/WEB-INF/classes/${example}" >
      <fileset dir="web" >
         <include name="*properties"/>
      </fileset>
    </copy>

  </target>	 

  <target name="checkRequiredFile">
    <available file="${file}" property="requirement.satisfied"/>
    <antcall target="checkRequired.fail"/>
  </target>

  <target name="checkRequired.fail" unless="requirement.satisfied">
    <fail message="${fail.message}"/>
  </target>

</project>

