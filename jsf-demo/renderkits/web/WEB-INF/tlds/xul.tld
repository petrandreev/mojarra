<?xml version="1.0" encoding="UTF-8"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License). You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the License at
 https://javaserverfaces.dev.java.net/CDDL.html or
 legal/CDDLv1.0.txt. 
 See the License for the specific language governing
 permission and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at legal/CDDLv1.0.txt.    
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 your own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 [Name of File] [ver.__] [Date]
 
 Copyright 2005 Sun Microsystems Inc. All Rights Reserved
-->

                                                                                       
<taglib xsi:schemaLocation="http://java.sun.com/xml/ns/javaee web-jsptaglibrary_2_1.xsd"
xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.1">
                                                                                       
<!-- ============== Tag Library Description Elements ============= -->
                                                                                       
    <description>
        This tag library contains JavaServer Faces component tags for all
        UIComponent + XUL RenderKit Renderer combinations defined in the
        JavaServer Faces Specification.
    </description>
    <tlib-version>
        1.2
    </tlib-version>
    <short-name>
        x 
    </short-name>
    <uri>
        http://java.sun.com/jsf/xul
    </uri>

    <tag>
        <description>
            <![CDATA[<p>Renders an XUL "input" element.</p>
                                                                                       
            <p>Decode Behavior</p>
                                                                                       
            <ul>
            <p>Obtain the <code>Map</code> from the "requestParameterMap"
            property of the <code>ExternalContext</code>.  If the value in the
            <code>Map</code> for the value of the "clientId" property of the
            component is <code>null</code>, create a String by concatenating
            the value of the "clientId" property of the component with the
            String ".x" (without the quotes).  Create another String in the
            same manner, but concatenate ".y" (without the quotes).  If
            <code>null</code> is the value in the <code>Map</code> for both
            Strings, return from <code>decode()</code>.  If the value in the
            <code>Map</code> for the value of the "clientId" property of the
            component is not <code>null</code>, get the value of the "type"
            attribute, and convert it to lower case.  If the result is equal
            to the String "reset" (without the quotes), return from
            <code>decode()</code>.  Otherwise, create a
            <code>javax.faces.event.ActionEvent</code> around the component,
            and pass it to the <code>queueEvent()</code> method of the
            component, which must be an instance of
            <code>UICommand</code>.</p>
            </ul>

            <p>Encode Behavior</p>
                                                                                       
            <ul>
                                                                                       
            <p>Render the clientId of the component as the value of the
            "name" attribute.  Render the current value of the component as
            the value of the "value" attribute. If "image" attribute is specified
            render it as the value of the "src" attribute after passing it
            to the <code>getResourceURL()</code> method of the <code>ViewHandler</code> for this application, 
            and passing the result through the
            <code>encodeResourceURL()</code> method of the
            <code>ExternalContext</code>.If the "styleClass" attribute
            is specified, render its value as the value of the "class"
            attribute.</p>
                                                                                       
            </ul>]]>
        </description>

        <name>
            commandButton
        </name>
        <tag-class>
            renderkits.taglib.xul.CommandButtonTag
        </tag-class>
        <body-content>
            JSP
        </body-content>

        <attribute>
            <description>
                <![CDATA[MethodBinding representing the application action to invoke when
                this component is activated by the user.  The expression must
                evaluate to a public method that takes no parameters, and returns
                a String (the logical outcome) which is passed to the
                NavigationHandler for this application.]]>
            </description>
            <name>
                action
            </name>
            <required>
                false
            </required>
            <deferred-method>
                <method-signature>
                    java.lang.String action()
                </method-signature>
            </deferred-method>
        </attribute>
        <attribute>
            <description>
                <![CDATA[MethodBinding representing an action listener method that 
                will be notified when this component is activated by the user.  The
                expression must evaluate to a public method that takes an
                ActionEvent parameter, with a return type of void.]]>
            </description>
            <name>
                actionListener
            </name>
            <required>
                false
            </required>
            <deferred-method>
                <method-signature>
                    void actionListener(javax.faces.event.ActionEvent)
                </method-signature>
            </deferred-method>
        </attribute>
        <attribute>
            <description>
                The ValueExpression linking this component to a property in a 
                backing bean
            </description>
            <name>
                binding
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.component.UIComponent
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must
                be unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                false
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that, if this component is activated by 
                the user, notifications should be delivered to interested listeners 
                and actions immediately (that is, during Apply Request Values phase) 
                rather than waiting until Invoke Application phase.]]>
            </description>
            <name>
                immediate
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A localized user presentable name for this component.]]>
            </description>
            <name>
                label
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                clicked over this element.]]>
            </description>
            <name>
                onclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                clicked over this element.]]>
            </description>
            <name>
                oncommand
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when this element receives
                keyboard focus.]]>
            </description>
            <name>
                onfocusin
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when this element loses 
                keyboard focus.]]>
            </description>
            <name>
                onfocusout
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                pressed down over this element.]]>
            </description>
            <name>
                onmousedown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when the pointing device is 
                moved while it is over this element.]]>
            </description>
            <name>
                onmousemove
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when the pointing device is
                moved onto this element.]]>
            </description>
            <name>
                onmouseover
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when the pointing device is
                moved away from this element.]]>
            </description>
            <name>
                onmouseout
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                released over this element.]]>
            </description>
            <name>
                onmouseup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be 
                rendered (during Render Response Phase), or processed on any 
                subsequent form submit.  The default value for this property is 
                true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style(s) to be applied when this component is rendered.]]>    
            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type of button to create.  Valid values are "submit".]]>
            </description>
            <name>
                type
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The current value of this component.]]>
            </description>
            <name>
                value
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.Object
                </type>
            </deferred-value>
        </attribute>
    </tag>

    <tag>
        <description>
            <![CDATA[<p>Renders an HTML "form" element.</p>
                                                                                       
            <p>Decode Behavior</p>
                                                                                       
            <ul>
                                                                                       
            <p>Obtain the <code>Map</code> from the "requestParameterMap"
            property of the <code>ExternalContext</code>.  If the map contains
            an entry for the "clientId" of this <code>UIForm</code> component,
            call <code>setSubmitted(true)</code> on the form, otherwise call
            <code>setSubmitted(false)</code> on the form.</p>
                                                                                       
            </ul>
                                                                                       
                                                                                       
                                                                                       
            <p>Encode Behavior</p>
                                                                                       
            <ul>
                                                                                       
            <p>The value of the "method" attribute must be "post".  The value
            of the "action" attribute must be the result of passing the view
            identifier of the current view to the <code>getActionURL()</code>
            method of the <code>ViewHandler</code> for this application, then
            passing that String to the <code>encodeActionURL()</code> method
            on the <code>ExternalContext</code>.  If the "styleClass"
            attribute is specified, render its value as the value of the
            "class" attribute.  Call <code>ViewHandler.writeState()</code>
            before the the close of the "form" element.  Render all the
            necessary hidden fields for all commandLink instances in the page
            just before the close of the "form" element.</p>
                                                                                       
            </ul>]]>
        </description>
        <name>
            form
        </name>
        <tag-class>
            renderkits.taglib.xul.FormTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must
be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                false
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this form should prepend its id                to its descendent's id during the clientId generation process.
                If this flag is not set, the default value is true.]]>
            </description>
            <name>
                prependId
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[List of content types that a server processing this form
                will handle correctly]]>
            </description>
            <name>
                accept
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[List of character encodings for input data
                that are accepted by the server processing
                this form.]]>
            </description>
            <name>
                acceptcharset
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Content type used to submit the form to the server.  If not
                specified, the default value is
                "application/x-www-form-urlencoded".]]>
            </description>
            <name>
                enctype
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                clicked over this element.]]>
            </description>
            <name>
                onclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                pressed down over this element.]]>
            </description>
            <name>
                onmousedown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved within this element.]]>
            </description>
            <name>
                onmousemove
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved away from this element.]]>
            </description>
            <name>
                onmouseout
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved onto this element.]]>
            </description>
            <name>
                onmouseover
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                released over this element.]]>
            </description>
            <name>
                onmouseup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                The ValueExpression linking this component to a property in a backing bean
            </description>
            <name>
                binding
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.component.UIComponent
                </type>
            </deferred-value>
        </attribute>
    </tag>

    <tag>
        <description>
            <![CDATA[Renders a XUL "label" element.  Render the current value
            of the component as label text if it is specified. If a "for" attribute is
            specified, find the component specified by the value of the "for"
            attribute, and render its client id as the value of the "for" attribute.
            If "styleClass" attribute is specified, render its value as the value
            of the "class" attribute.]]>
        </description>
        <name>
            outputLabel
        </name>
        <tag-class>
            renderkits.taglib.xul.OutputLabelTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[Converter instance registered with this component.]]>
            </description>
            <name>
                converter
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.convert.Converter
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                true
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The current value of this component.]]>
            </description>
            <name>
                value
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.Object
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key that, when pressed, transfers focus
                to this element.]]>
            </description>
            <name>
                accesskey
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied to the containing "box" 
                element when this component is rendered.]]>
            </description>
            <name>
                boxStyle
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied to
                the containing "box" element when this element is rendered.  
                This value must be passed through as the "class" attribute 
                on generated markup.]]>
            </description>
            <name>
                boxClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client identifier of the component for which this element
                is a label.  This attribute is rendered as a XUL "control"
                attribute.]]>
            </description>
            <name>
                for
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                clicked over this element.]]>
            </description>
            <name>
                onclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                double clicked over this element.]]>
            </description>
            <name>
                ondblclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when this element receives focus.]]>
            </description>
            <name>
                onfocus
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                pressed down over this element.]]>
            </description>
            <name>
                onkeydown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                pressed and released over this element.]]>
            </description>
            <name>
                onkeypress
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                released over this element.]]>
            </description>
            <name>
                onkeyup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                pressed down over this element.]]>
            </description>
            <name>
                onmousedown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved within this element.]]>
            </description>
            <name>
                onmousemove
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved away from this element.]]>
            </description>
            <name>
                onmouseout
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved onto this element.]]>
            </description>
            <name>
                onmouseover
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                released over this element.]]>
            </description>
            <name>
                onmouseup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies where this label component will be 
                placed in the containing "box" element.]]>
            </description>
            <name>
                pack
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                this element is rendered.  This value must be passed through
                as the "class" attribute on generated markup.]]>
            </description>
            <name>
                styleClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
    </tag>

    <tag>
        <description>
            <![CDATA[Renders a XUL "label" element.  Render the current value
            of the component as label text if it is specified. If a "for" attribute is
            specified, find the component specified by the value of the "for"
            attribute, and render its client id as the value of the "for" attribute.
            If "styleClass" attribute is specified, render its value as the value
            of the "class" attribute.]]>
        </description>
        <name>
            outputLabel
        </name>
        <tag-class>
            renderkits.taglib.xul.OutputLabelTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[Converter instance registered with this component.]]>
            </description>
            <name>
                converter
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.convert.Converter
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                true
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The current value of this component.]]>
            </description>
            <name>
                value
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.Object
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key that, when pressed, transfers focus
                to this element.]]>
            </description>
            <name>
                accesskey
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client identifier of the component for which this element
                is a label.  This attribute is rendered as a XUL "control"
                attribute.]]>
            </description>
            <name>
                for
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                this element is rendered.  This value must be passed through
                as the "class" attribute on generated markup.]]>
            </description>
            <name>
                styleClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
    </tag>
     <tag>
        <description>
            <![CDATA[Renders a XUL "description" element.  If the
            "styleClass" attribute is present, render its value as the value
            of the "class" attribute.  If the "style" attribute is present,
            pass it thru.  If the "escape" attribute is not present, or it is
            present and its value is "true" all angle brackets should be
            converted to the ampersand xx semicolon syntax when rendering the
            value of the "value" attribute as the value of the component.  If
            the "escape" attribute is present and is "false" the value of the
            component should be rendered as text without escaping.]]>
        </description>
        <name>
            outputText
        </name>
        <tag-class>
            renderkits.taglib.xul.OutputTextTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[Converter instance registered with this component.]]>
            </description>
            <name>
                converter
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.convert.Converter
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                true
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The current value of this component.]]>
            </description>
            <name>
                value
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.Object
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that characters that are sensitive
                in HTML and XML markup must be escaped.  This flag
                is set to "true" by default.]]>
            </description>
            <name>
                escape
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                this element is rendered.  This value must be passed through
                as the "class" attribute on generated markup.]]>
            </description>
            <name>
                styleClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                The ValueExpression linking this component to a property in a backing bean
            </description>
            <name>
                binding
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.component.UIComponent
                </type>
            </deferred-value>
        </attribute>
    </tag>
    <tag>
        <name>
            panelGrid 
        </name>
        <description>
            <![CDATA[Renders a XUL "grid" element.]]>
        </description>
        <tag-class>
            renderkits.taglib.xul.PanelGridTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                true
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name or code of the background color for this table.]]>
            </description>
            <name>
                bgcolor
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Width (in pixels) of the border to be drawn
                around this table.]]>
            </description>
            <name>
                border
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    int
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Comma-delimited list of CSS style classes that will be applied
                to the columns of this table.  A space separated list of
                classes may also be specified for any individual column.  If
                the number of elements in this list is less than the number of
                columns specified in the "columns" attribute, no "class"
                attribute is output for each column greater than the number of
                elements in the list.  If the number of elements in the list
                is greater than the number of columns specified in the
                "columns" attribute, the elements at the posisiton in the list
                after the value of the "columns" attribute are ignored.]]>
            </description>
            <name>
                columnClasses
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The number of columns to render before
                starting a new row.]]>
            </description>
            <name>
                columns
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    int
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                clicked over this element.]]>
            </description>
            <name>
                onclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                double clicked over this element.]]>
            </description>
            <name>
                ondblclick
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                pressed down over this element.]]>
            </description>
            <name>
                onkeydown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                pressed and released over this element.]]>
            </description>
            <name>
                onkeypress
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a key is
                released over this element.]]>
            </description>
            <name>
                onkeyup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                pressed down over this element.]]>
            </description>
            <name>
                onmousedown
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved within this element.]]>
            </description>
            <name>
                onmousemove
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved away from this element.]]>
            </description>
            <name>
                onmouseout
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                moved onto this element.]]>
            </description>
            <name>
                onmouseover
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Javascript code executed when a pointer button is
                released over this element.]]>
            </description>
            <name>
                onmouseup
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Comma-delimited list of CSS style classes that will be applied
                to the rows of this table.  A space separated list of classes
                may also be specified for any individual row.  Thes styles are
                applied, in turn, to each row in the table.  For example, if
                the list has two elements, the first style class in the list
                is applied to the first row, the second to the second row, the
                first to the third row, the second to the fourth row, etc.  In
                other words, we keep iterating through the list until we reach
                the end, and then we start at the beginning again.]]>
            </description>
            <name>
                rowClasses
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                this element is rendered.  This value must be passed through
                as the "class" attribute on generated markup.]]>
            </description>
            <name>
                styleClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                The ValueExpression linking this component to a property in a backing bean
            </description>
            <name>
                binding
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.component.UIComponent
                </type>
            </deferred-value>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Renders a XUL groupbox element.]]>
        </description>
        <name>
            panelGroup
        </name>
        <tag-class>
            renderkits.taglib.xul.PanelGroupTag
        </tag-class>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>
                <![CDATA[The component identifier for this component.  This value must be
                unique within the closest parent component that is a naming
                container.]]>
            </description>
            <name>
                id
            </name>
            <required>
                false
            </required>
            <rtexprvalue>
                true
            </rtexprvalue>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating whether or not this component should be rendered
                (during Render Response Phase), or processed on any subsequent
                form submit.  The default value for this property is true.]]>
            </description>
            <name>
                rendered
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The XUL caption element label for this groupbox element.]]>
            </description>
            <name>
                captionLabel
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                the XUL caption element is rendered.  This value must be passed through
                as the "class" property on generated markup.]]>
            </description>
            <name>
                captionClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
            <name>
                style
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied when
                this element is rendered.  This value must be passed through
                as the "class" property on generated markup.]]>
            </description>
            <name>
                styleClass
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>
                The ValueExpression linking this component to a property in a backing bean
            </description>
            <name>
                binding
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    javax.faces.component.UIComponent
                </type>
            </deferred-value>
        </attribute>
    </tag>
</taglib>
