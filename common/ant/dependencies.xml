<?xml version="1.0" encoding="UTF-8"?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->

<project name="JSF Dependencies" basedir=".">

    <!-- 
        Current Dependencies
           HtmlUnit 1.8
           Cactus 1.3-1.7.1
           JUnit 3.8.1
           Taglibrary Document Generator 1.3
           Maven java.net repository importer 1.2
    -->

    <property name="dependency.base.dir" value="${jsf.build.home}/dependencies"/>
    <property name="dependency.jar.dir" value="${dependency.base.dir}/jars"/>
	
    <property name="junit.version" value="3.8.1"/>
    <property name="htmlunit.version" value="1.10"/>
    <property name="cactus.version" value="13-1.7.1"/>
    <property name="taglibdoc.version" value="1.3"/>
    <property name="servlet.api.version" value="2.5"/>
    <property name="jsp.api.version" value="2.1"/>
    <property name="jstl.api.version" value="1.2"/>
    <property name="annotation.api.version" value="1.0"/>
    <property name="portlet.api.version" value="1.0"/>
    <property name="groovy.version" value="1.5.5"/>
    <property name="maven.repository.importer.version" value="1.2"/>
	
    <property name="maven2.mirror" value="http://mirrors.ibiblio.org/pub/mirrors/maven2"/>
	<property name="java.net.maven" value="https://maven-repository.dev.java.net/nonav/repository/"/>
    <property name="codehaus.maven" value="http://repository.codehaus.org"/>
    <property name="download.java.net" value="http://download.java.net/javaee5/external/shared"/>

    <property name="junit.home" value="${dependency.base.dir}/junit${junit.version}"/>
    <property name="htmlunit.home" value="${dependency.base.dir}/htmlunit-${htmlunit.version}"/>
    <property name="cactus.home" value="${dependency.base.dir}/jakarta-cactus-${cactus.version}"/>
    <property name="taglibdoc.home" value="${dependency.base.dir}/taglibrarydoc-${taglibdoc.version}"/>
    <property name="maven.repository.importer.home" value="${dependency.base.dir}/maven-repository-importer-${maven.repository.importer.version}"/>
    <property name="servlet.home" value="${dependency.base.dir}/servlet-${servlet.api.version}"/>
    <property name="jsp.home" value="${dependency.base.dir}/jsp-${jsp.api.version}"/>
    <property name="jstl.home" value="${dependency.base.dir}/jstl-${jstl.api.version}"/>
    <property name="annotation.home" value="${dependency.base.dir}/annotation-${annotation.api.version}"/>

    <property name="junit.jar"                     value="${dependency.jar.dir}/junit-${junit.version}.jar"/>
    <property name="htmlunit.jar"                  value="${dependency.jar.dir}/htmlunit-${htmlunit.version}.jar"/>
    <property name="tlddoc.jar"                    value="${dependency.jar.dir}/tlddoc-${taglibdoc.version}.jar"/>
    <property name="maven.repository.importer.jar" value="${dependency.jar.dir}/maven-repository-importer-${maven.repository.importer.version}.jar"/>
    <property name="servlet.jar"                   value="${dependency.jar.dir}/servlet-api-${servlet.api.version}.jar"/>
    <property name="jsp.jar"                       value="${dependency.jar.dir}/jsp-api-${jsp.api.version}.jar"/>
    <property name="jstl.jar"                      value="${dependency.jar.dir}/jstl-${jstl.api.version}.jar"/>
    <property name="annotation.jar"                value="${dependency.jar.dir}/jsr250-api-${annotation.api.version}.jar"/>
    <property name="sun-commons-beanutils.jar"     value="${dependency.jar.dir}/com-sun-commons-beanutils.jar"/>
    <property name="sun-commons-digester.jar"      value="${dependency.jar.dir}/com-sun-commons-digester.jar"/>
    <property name="sun-commons-collections.jar"   value="${dependency.jar.dir}/com-sun-commons-collections.jar"/>
    <property name="sun-commons-logging.jar"       value="${dependency.jar.dir}/com-sun-commons-logging-api.jar"/>
    <property name="portlet.jar"                   value="${dependency.jar.dir}/portlet-api-${portlet.api.version}.jar"/>
    <property name="groovy.jar"                    value="${dependency.jar.dir}/groovy-all-${groovy.version}.jar"/>

    <property name="glassfish.download.url"        value="http://download.java.net/javaee5/v2ur1/promoted/" />
    <property name="glassfish.installer.jar"       value="glassfish-installer-v2ur1-b09d-"/>    

    <target name="update" description="Download project dependencies">
        <mkdir dir="${dependency.base.dir}/downloads"/>
    	<mkdir dir="${dependency.jar.dir}" />

        <!-- setup the proxy if necessary -->
        <if>
            <and>
                <length string="${http.proxy.host}" when="greater" length="0"/>
                <length string="${http.proxy.port}" when="greater" length="0"/>
            </and>
            <then>
                <setproxy proxyhost="${http.proxy.host}"
                          proxyport="${http.proxy.port}"/>
            </then>
        </if>

        <!-- JUNIT -->
        <if>
            <not>
                <available file="${junit.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${maven2.mirror}/junit/junit/${junit.version}/junit-${junit.version}.jar"
                     dest="${junit.jar}"
                     usetimestamp="true"/>
            </then>
        </if>

        <!-- HTMLUNIT -->
    	<!--
    	This one needs a ton of extras, so we have to do this one like this or
    	add a bunch more deps.  Maybe another day... :)
    	-->
        <if>
            <not>
                <available file="${htmlunit.home}" property="ignored"/>
            </not>
            <then>
                <get src="http://easynews.dl.sourceforge.net/sourceforge/htmlunit/htmlunit-${htmlunit.version}.zip"
                     dest="${dependency.base.dir}/downloads/htmlunit-${htmlunit.version}.zip"
                     usetimestamp="true"/>
                <unzip
                      src="${dependency.base.dir}/downloads/htmlunit-${htmlunit.version}.zip"
                      dest="${dependency.base.dir}"/>
            </then>
        </if>

        <!-- CACTUS -->
    	<!-- Is this not in a maven repo somewhere? -->
        <if>
            <not>
                <available file="${cactus.home}" property="ignored"/>
            </not>
            <then>
                <get src="http://archive.apache.org/dist/jakarta/cactus/binaries/jakarta-cactus-${cactus.version}.zip"
                     dest="${dependency.base.dir}/downloads/jakarta-cactus-${cactus.version}.zip"
                     usetimestamp="true"/>
                <unzip
                      src="${dependency.base.dir}/downloads/jakarta-cactus-${cactus.version}.zip"
                      dest="${dependency.base.dir}"/>
            </then>
        </if>

        <!-- TAGLIBDOC -->
        <if>
            <not>
                <available file="${tlddoc.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${maven2.mirror}/taglibrarydoc/tlddoc/${taglibdoc.version}/tlddoc-${taglibdoc.version}.jar"
                     dest="${tlddoc.jar}"
                     usetimestamp="true"/>

            </then>
        </if>

        <!-- MAVEN REPOSITORY IMPORTER -->
        <if>
            <not>
                <available file="${maven.repository.importer.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${java.net.maven}/com.sun.wts.tools.mri/jars/maven-repository-importer-${maven.repository.importer.version}.jar"
                     dest="${maven.repository.importer.jar}"
                     usetimestamp="true"/>

            </then>
        </if>

        <!-- SERVLET API -->
        <if>
            <not>
                <available file="${servlet.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${java.net.maven}/javax.servlet/jars/servlet-api-${servlet.api.version}.jar"
                     dest="${servlet.jar}"
                     usetimestamp="true"/>

            </then>
        </if>

        <!-- JSP API -->
        <if>
            <not>
                <available file="${jsp.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${java.net.maven}/javax.servlet.jsp/jars/jsp-api-${jsp.api.version}.jar"
                     dest="${jsp.jar}"
                     usetimestamp="true"/>

            </then>
        </if>


        <!-- JSTL API -->
        <if>
            <not>
                <available file="${jstl.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${java.net.maven}/jstl/jars/jstl-${jstl.api.version}.jar"
                     dest="${jstl.jar}"
                     usetimestamp="true"/>

            </then>
        </if>

        <!-- ANNOTATION API -->
        <if>
            <not>
                <available file="${annotation.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${java.net.maven}/javax.annotation/jars/jsr250-api-${annotation.api.version}.jar"
                     dest="${annotation.jar}"
                     usetimestamp="true"/>

            </then>
        </if>

        <!-- Portlet -->
        <if>
            <not>
                <available file="${portlet.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${maven2.mirror}/javax/portlet/portlet-api/${portlet.api.version}/portlet-api-${portlet.api.version}.jar"
                     dest="${portlet.jar}"
                     usetimestamp="true"/>
            </then>
        </if>

        <!-- Groovy -->
        <if>
            <not>
                <available file="${groovy.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${codehaus.maven}/org/codehaus/groovy/groovy-all/${groovy.version}/groovy-all-${groovy.version}.jar"
                     dest="${groovy.jar}"
                     usetimestamp="true"/>
            </then>
        </if>

        <!-- com-sun-commons -->
        <if>
            <not>
                <available file="${sun-commons-collections.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${download.java.net}/com-sun-commons-collections/jars/com-sun-commons-collections-2.1.jar"
                     dest="${dependency.base.dir}/jars/com-sun-commons-collections-2.1.jar"
                     usetimestamp="true"/>
                <unjar src="${dependency.base.dir}/jars/com-sun-commons-collections-2.1.jar" dest="${dependency.jar.dir}"/>
                <delete file="${dependency.base.dir}/jars/com-sun-commons-collections-2.1.jar"/>
            </then>
        </if>

        <if>
            <not>
                <available file="${sun-commons-digester.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${download.java.net}/com-sun-commons-digester/jars/com-sun-commons-digester-1.5.jar"
                     dest="${dependency.base.dir}/jars/com-sun-commons-digester-1.5.jar"
                     usetimestamp="true"/>
                <unjar src="${dependency.base.dir}/jars/com-sun-commons-digester-1.5.jar" dest="${dependency.jar.dir}"/>
                <delete file="${dependency.base.dir}/jars/com-sun-commons-digester-1.5.jar"/>
            </then>
        </if>

        <if>
            <not>
                <available file="${sun-commons-beanutils.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${download.java.net}/com-sun-commons-beanutils/jars/com-sun-commons-beanutils-1.6.1.jar"
                     dest="${dependency.base.dir}/jars/com-sun-commons-beanutils-1.6.1.jar"
                     usetimestamp="true"/>
                <unjar src="${dependency.base.dir}/jars/com-sun-commons-beanutils-1.6.1.jar" dest="${dependency.jar.dir}"/>
                <delete file="${dependency.base.dir}/jars/com-sun-commons-beanutils-1.6.1.jar"/>
            </then>
        </if>

        <if>
            <not>
                <available file="${sun-commons-logging.jar}" property="ignored"/>
            </not>
            <then>
                <get src="${download.java.net}/com-sun-commons-logging/jars/com-sun-commons-logging-1.0.4.jar"
                     dest="${dependency.base.dir}/jars/com-sun-commons-logging-1.0.4.jar"
                     usetimestamp="true"/>
                <unjar src="${dependency.base.dir}/jars/com-sun-commons-logging-1.0.4.jar" dest="${dependency.jar.dir}"/>
                <delete file="${dependency.base.dir}/jars/com-sun-commons-logging-1.0.4.jar"/>
            </then>
        </if>


        <antcall target="update.containers"/>
    </target>


    <property name="glassfish.home"
              value="${dependency.base.dir}/glassfish"/>
    <property name="tomcat6.home"
              value="${dependency.base.dir}/apache-tomcat-6.0.13"/>
    <property name="glassfish.jar"
              value="${dependency.base.dir}/glassfish/lib/appserv-rt.jar"/>
    <property name="tomcat6.jar"
              value="${tomcat6.home}/lib/catalina.jar"/>
    <property name="jetty.version.dir" value="6.1.4"/>
    <property name="jetty.version" value="6.1.4rc0"/>
    <property name="jetty.home"
              value="${dependency.base.dir}/jetty-${jetty.version}"/>
    <property name="jetty.annotations.jar"
              value="${jetty.home}/lib/annotations/jetty-annotations-${jetty.version}.jar"/>
    <property name="jetty.plus.jar"
              value="${jetty.home}/lib/plus/jetty-plus-${jetty.version}.jar"/>
    <target name="update.containers"
            description="Downloads containers necessary for building implementation specific additions"
            depends="detect.os">

        <if>
            <not>
                <available file="${dependency.base.dir}/${glassfish.installer.jar}${fl.os}.jar" property="ignored"/>
            </not>
            <then>
                <!-- The jar is not available, so delete ant dependencies/glassfish dir that may exist and "run" the new jar -->
                <echo>
The current GlassFish installer jar was not found, so we are deleting any 
existing GlassFish installation in the Mojarra tree.  We will download the 
current version, extract and configure it inside the tree.  This will not 
affect any glassfish.home pointing to a GlassFish installation outside the 
Mojarra tree.
                </echo>
                <delete dir="${dependency.base.dir}/glassfish"/>
                <get src="${glassfish.download.url}/${dl.os}/${glassfish.installer.jar}${fl.os}.jar"
                    dest="${dependency.base.dir}/${glassfish.installer.jar}${fl.os}.jar"
                    usetimestamp="true"/>
            </then>
        </if>
                
        <if>
            <not>
                <available file="${dependency.base.dir}/glassfish" property="ignored"/>
            </not>
            <then>
                <echo file="${dependency.base.dir}/install.bat">
<![CDATA[
echo a > input
java -Xmx256m -jar ${dependency.base.dir}/${glassfish.installer.jar}${fl.os}.jar -console < ./input
]]>
                </echo>
                <chmod file="${dependency.base.dir}/install.bat" perm="700"/>
                <exec executable="${dependency.base.dir}/install.bat" dir="${dependency.base.dir}" />
                <delete file="${dependency.base.dir}/install.bat"/>
                <delete file="${dependency.base.dir}/input"/>
                <ant antfile="${dependency.base.dir}/glassfish/setup.xml" dir="${dependency.base.dir}/glassfish" target="setup"/>
                <echo file="${dependency.base.dir}/glassfish/password.txt">AS_ADMIN_PASSWORD=adminadmin</echo>
                <!--
                Download and install the Eclipse JDT compiler to help speed up unit tests.  See Jan Luehe's
                blog for more information:  http://blogs.sun.com/jluehe/entry/how_to_enable_eclipse_s.
                -->
                <get src="http://blogs.sun.com/roller/resources/jluehe/jasper-compiler-jdt.jar"
                    dest="${dependency.base.dir}/glassfish/lib/jasper-compiler-jdt.jar"
                    usetimestamp="true"/>
                <get src="http://blogs.sun.com/roller/resources/jluehe/jasper-compiler-jdt-ext.jar"
                    dest="${dependency.base.dir}/glassfish/lib/jasper-compiler-jdt-ext.jar"
                    usetimestamp="true"/>
            </then>
        </if>
  
        <if>
            <not>
                <available file="${dependency.base.dir}/apache-tomcat-6.0.13.zip"
                           property="ignored"/>
            </not>
            <then>
                <get src="http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.13/bin/apache-tomcat-6.0.13.zip"
                     dest="${dependency.base.dir}/apache-tomcat-6.0.13.zip"
                     usetimestamp="true"/>
                <unzip
                      src="${dependency.base.dir}/apache-tomcat-6.0.13.zip"
                      dest="${dependency.base.dir}"/>
            </then>
        </if>
        <if>
            <not>
                <available file="${dependency.base.dir}/jetty-${jetty.version}.zip" property="ignored"/>
            </not>
            <then>
                <get src="http://dist.codehaus.org/jetty/jetty-${jetty.version.dir}/jetty-${jetty.version}.zip"
                     dest="${dependency.base.dir}/jetty-${jetty.version}.zip"
                     usetimestamp="true"/>
                <unzip
                    src="${dependency.base.dir}/jetty-${jetty.version}.zip"
                    dest="${dependency.base.dir}"/>
            </then>
        </if>
    </target>

    <target name="detect.os">
        <condition property="dl.os" value="SunOS">
            <and>
                <os name="SunOS"/>
                <os arch="sparc"/>
            </and>
        </condition>
        <condition property="dl.os" value="SunOS_X86">
            <and>
                <os name="SunOS"/>
                <os arch="x86"/>
            </and>
        </condition>
        <condition property="dl.os" value="WINNT">
	    <os family="winnt"/>
        </condition>
        <condition property="dl.os" value="Darwin">
            <os name="Mac OS X"/>
        </condition>
        <condition property="dl.os" value="Linux">
            <and>
                <os family="unix"/>
                <not>
                    <os name="SunOS"/>
                </not>
                <not>
                    <os name="Max OS X"/>
                </not>
            </and>
        </condition>
        <condition property="fl.os" value="sunos">
            <and>
                <os name="SunOS"/>
                <os arch="sparc"/>
            </and>
        </condition>
        <condition property="fl.os" value="sunos_x86">
            <and>
                <os name="SunOS"/>
                <os arch="x86"/>
            </and>
        </condition>
        <condition property="fl.os" value="windows">
            <os family="winnt"/>
        </condition>
        <condition property="fl.os" value="darwin">
            <os name="Mac OS X"/>
        </condition>
        <condition property="fl.os" value="linux">
            <and>
                <os family="unix"/>
                <not>
                    <os name="SunOS"/>
                </not>
                <not>
                    <os name="Max OS X"/>
                </not>
            </and>
        </condition>

    </target>

</project>
