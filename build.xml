<?xml version='1.0' encoding='UTF-8'?>

<!--
 Copyright 2004 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->


<!-- ************ JSF build file ************************************** -->

<project name="publish.java.net" default="publish.java.net" basedir=".">

<!-- ************ Per user local properties ******************************* -->

  <property file="build.properties"/>                <!-- Component local   -->
  <property file="../build.properties"/>             <!-- Commons local     -->
  <property file="${user.home}/build.properties"/>   <!-- User local        -->
  <property environment="myenv" />


<!-- ************ Where are we building into? ***************************** -->

  <!-- the root of our tomcat -->

  <!-- The base directory for compilation targets -->
  
  <!-- The base directory for the JSF APIs -->
  <property name="jsf-api.home" value ="${basedir}/jsf-api"/>

  <property name="jsf-tools.home"    value="${basedir}/jsf-tools"/>
  
  <property name="jsf-portlet.home"    value="${basedir}/jsf-portlet"/>
  
  <property name="jsf-ri.home" value ="${basedir}/jsf-ri"/>
  
  <property name="jsf-demo.home"    value="${basedir}/jsf-demo"/>
  
  <property name="installer.home"    
      value="${tomcat.home}/../installer/"/>

<!-- ************ Compiler Defaults *************************************** -->


<!-- ************ Executable Targets ************************************** -->

  
 <taskdef name="installerBuilder" classname="com.sun.tools.xjc.installer.builder.BuilderTask">
     <classpath>
         <fileset dir="${installer.home}" includes="*.jar"/>
     </classpath>
  </taskdef>
  
  <target name="clean" 
   description="Clean build and distribution directories">
    <delete file="${basedir}/javaserverfaces_binary.zip" />
    <delete file="${basedir}/javaserverfaces_binary.class" />
    <delete file="${basedir}/javaserverfaces_source.zip" />
    <delete file="${basedir}/javaserverfaces_source.class" />
    <delete file="jsf-portlet.zip" />
    <delete dir="{jsf-portlet.home}/dist" />
  </target>

  <!-- Create the source distribution -->
  <target name="jsf.source">
    <zip     destfile="${basedir}/javaserverfaces_source.zip">
    
      <zipfileset dir="${jsf-api.home}"
               excludes="**/CVS/**, **/build/**"
               prefix="jsf-api"/> 
     
      <zipfileset dir="${jsf-ri.home}"
             excludes="**/CVS/**, **/build/**"
               prefix="jsf-ri"/>
               
      <zipfileset dir="${jsf-tools.home}"
             excludes="**/CVS/**, **/build/**"
               prefix="jsf-tools"/>
                       
      <zipfileset dir="${jsf-portlet.home}"
             excludes="**/CVS/**, **/build/**"
               prefix="jsf-portlet"/>
     
      <zipfileset dir="${jsf-demo.home}"
            excludes="**/CVS/**, **/build/**, **/dist/**"
            prefix="jsf-demo"/>
  
    </zip>
  </target>


  <target name="publish.java.net" description="Build distribution files">
  <ant dir="${jsf-demo.home}" target="dist" inheritAll="false" />
 
  <copy file="${jsf-demo.home}/jsf-${version}.zip"
          tofile="${basedir}/javaserverfaces_binary.zip" />
          
  <delete file="${jsf-demo.home}/jsf-${version}.zip" />
    
  <ant target="jsf.source" />
  
  <installerBuilder
          classFile="javaserverfaces_binary.class"
          licenseFile="${jsf-ri.home}/PRE-RELEASE-LICENSE.txt"
          zipFile="${basedir}/javaserverfaces_binary.zip" />
          
  <installerBuilder
          classFile="javaserverfaces_source.class"
          licenseFile="${installer.home}/jrl_1_3.txt"
          zipFile="${basedir}/javaserverfaces_source.zip" />
  </target>
  
   <!-- 
       =================================================================== 
         Create the Portlet Integration library
       =================================================================== 
  -->
  <target name="build-portletLibrary"
      description="Build Portlet Integration Library">
      <mkdir dir="${jsf-portlet.home}/dist/jsf-portlet" />
      <mkdir dir="${jsf-portlet.home}/dist/jsf-portlet/samples"/>
      <mkdir dir="${jsf-portlet.home}/dist/jsf-portlet/lib"/>
      <echo>
      jsf-portlet is ${jsf-portlet.home}
    </echo>
    
    <delete file="jsf-portlet.zip" />
    <delete dir="${jsf-portlet.home}/dist" />
    <delete dir="${jsf-portlet.home}/build" />
    
    <ant dir="${jsf-portlet.home}" inheritall="false" target="main"/>
    <copy file="${jsf-portlet.home}/portlet-lib/build/lib/jsf-portlet.jar"
         todir="${jsf-portlet.home}/dist/jsf-portlet/lib" />
    
    <!-- copy the portlet-guessNumber.war and source -->
    <ant dir="${jsf-demo.home}/portlet-guessNumber" inheritAll="false">
    </ant>
    <copy todir="${jsf-portlet.home}/dist/jsf-portlet/samples"
          file="${jsf-demo.home}/portlet-guessNumber/build/portlet-guessNumber.war"/>
          
    <copy todir="${jsf-portlet.home}/dist/jsf-portlet/samples/portlet-guessNumber" 
        includeEmptyDirs="false">
      <fileset dir="${jsf-demo.home}/portlet-guessNumber" excludes="**/build/**"/>
    </copy>
     <zip zipfile="jsf-portlet.zip">
      <fileset dir="${jsf-portlet.home}/dist"
               includes="jsf-portlet/**"/>
    </zip>
      
  </target>
  
  <target name="nightly" depends="publish.java.net" 
      description="update nightly build" >
  <taskdef resource="org/kohsuke/javanettasks.properties">
    <classpath>
      <fileset dir="${installer.home}/javanettasks-1.0.2-SNAPSHOT/lib" includes="*.jar"/>
    </classpath>
  </taskdef>
  
  <javaNetUpload projectName="javaserverfaces" 
      toFile="/nightly/javaserverfaces_binary.class" fromFile="${basedir}/javaserverfaces_binary.class" 
      fileDescription="Nightly snapshot.Use at own risk." overwrite="yes" />
  
     
  <javaNetUpload projectName="javaserverfaces" 
      toFile="/nightly/javaserverfaces_source.class" fromFile="${basedir}/javaserverfaces_source.class" 
      fileDescription="Nightly source snapshot." overwrite="yes" /> 
  </target>
  
  <target name="weekly" depends="publish.java.net" 
      description="update weekly build" >
  <taskdef resource="org/kohsuke/javanettasks.properties">
    <classpath>
      <fileset dir="${installer.home}/javanettasks-1.0.2-SNAPSHOT/lib" includes="*.jar"/>
    </classpath>
  </taskdef>
  
  <javaNetUpload projectName="javaserverfaces" 
      toFile="/weekly/javaserverfaces_binary.class" fromFile="${basedir}/javaserverfaces_binary.class" 
      fileDescription="Weekly binary snapshot." overwrite="yes" />
  
     
  <javaNetUpload projectName="javaserverfaces" 
      toFile="/weekly/javaserverfaces_source.class" fromFile="${basedir}/javaserverfaces_source.class" 
      fileDescription="Weekly source snapshot." overwrite="yes" /> 
  </target>
</project>
