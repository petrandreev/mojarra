<!--
 Copyright 2003 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<project name="Java Server Faces Unit Tests" default="test.local" basedir=".">

<!--
        This is a generic build.xml file for Ant that is used to run the
        Java Server Faces unit tests. This build file *must* be called from the
        build.xml file in order to inherit most of it's needed properties
        (See below for the list of these properties).
-->

<!-- ========== Prerequisite Properties =================================== -->


<!--
        These properties MUST be set on the "ant" command line, the "antrc"
        properties file in your home directory, or from settings in a superior
        build.xml script.

        build.home                    Base directory into which we are building
                                      the Struts components.

        servlet.jar                   The servlet jar (either 2.2 or 2.3)

        cactus.jar                    The Cactus jar (either for Servlet API
                                      2.2 or 2.3)

        cactus.ant.jar                The Cactus custom Ant tasks jar

        httpclient.jar                The Cactus httpclient jar

        aspectjrt.jar                 The Cactus AspectJ Language Support jar

        junit.jar                     The JUnit jar

        tomcat.home                   The home directory of where Tomcat 
                                      is installed

        compile.debug                 The debug mode for compilation

        compile.deprecation           The deprecation mode for compilation

        compile.optimize              The optimization mode for compilation

        src.dir                       The location of the source directory

        app.name                      The name of the Struts jar (without the
                                      '.jar' suffix

-->

<!-- ========== Initialization Properties ================================= -->

<!-- ========== Derived Properties ======================================== -->

<!--
        These property values are derived from values defined above, and
        generally should NOT be overridden by command line settings
-->

   <property file="build.properties"/>              <!-- Component local   -->
   <property file="../build.properties"/>           <!-- Commons local     -->
   <property file="${user.home}/build.properties"/> <!-- User local        -->

    <!-- Default value for debugging arguments is no.  Override in
         build.properties -->
    <property name="debug.jvm.args" value=""/>

    <!-- Source directory for tests -->
    <property name="src.test.dir" value="${basedir}/test"/>

    <!-- Configuration directory for tests -->
    <property name="conf.test.dir" value="conf/test"/>

    <!-- Output directory for tests -->
    <property name="out.test.dir" value="${build.home}/test"/>

    <!-- all of these properties must have valid values -->
    <property name="catalina-ant.jar" value="${tomcat.home}/server/lib/catalina-ant.jar"/>
    <property name="cactus.home" 
              value="${tomcat.home}/../jakarta-cactus-13-1.4.1"/>
    <property name="cactus.ant.jar" 
              value="${cactus.home}/lib/cactus-ant-1.4.1.jar"/>
    <property name="cactus.jar" 
              value="${cactus.home}/lib/cactus-1.4.1.jar"/>
    <property name="aspectjrt.jar" 
              value="${cactus.home}/lib/aspectjrt-1.0.5.jar"/>
    <property name="httpclient.jar" 
              value="${cactus.home}/lib/commons-httpclient-2.0alpha1-20020606.jar"/>

    <property name="junit.jar" 
              value="${tomcat.home}/../junit3.8.1/junit.jar"/>

    <property name="standard.jar" 
              value="${tomcat.home}/jstl/lib/standard.jar"/>
    
    <property name="username" value="tomcat"/>
    <property name="password" value="tomcat"/>

    <property name="url"      value="http://localhost:8080/manager"/>

    <!-- Compilation Classpath -->
    <path id="compile.classpath">
      <pathelement location="${servlet.jar}"/>
      <pathelement location="${jsp.jar}"/>
      <pathelement location="${junit.jar}"/>
      <pathelement location="${cactus.jar}"/>
      <pathelement location="${httpclient.jar}"/>
      <pathelement location="${aspectjrt.jar}"/>
      <pathelement location="${jsf-api.jar}"/>
      <pathelement location="${commons-beanutils.jar}"/>
      <pathelement location="${commons-collections.jar}"/>
      <pathelement location="${commons-digester.jar}"/>
      <pathelement location="${commons-logging.jar}"/>      
      <pathelement location="${build.home}/classes"/>
      <pathelement location="${tomcat.home}/bin/bootstrap.jar"/>
      <!-- For cactus.properties -->
      <pathelement location="${conf.test.dir}"/>
      <pathelement location="${jstl.jar}"/>
    </path>

    <path id="catalina-ant.classpath">
      <pathelement location="${catalina-ant.jar}"/>
    </path>

<!-- ========== Executable Targets ======================================== -->

<!--
        Initialization of custom Ant tasks
-->
    <target name="init">

        <taskdef name="runservertests"
            classname="org.apache.cactus.ant.RunServerTestsTask">
            <classpath>
                <pathelement location="${cactus.ant.jar}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </taskdef>

    </target>


<!-- 
        Create directories and copy files for the struts tests
-->
    <target name="prepare.test" depends="init">

        <!-- Create target directories for classes -->
        <mkdir dir="${out.test.dir}/WEB-INF/classes"/>

        <!-- Create a lib directory where needed libs for the test war will
             be put -->
        <mkdir dir="${out.test.dir}/WEB-INF/lib"/>

    </target>

<!-- 
        Compile unit tests
-->
    <target name="compile.test" depends="prepare.test">

        <javac srcdir="${src.test.dir}"
            destdir="${out.test.dir}/WEB-INF/classes"
            debug="${compile.debug}"
            optimize="${compile.optimize}"
            deprecation="${compile.deprecation}">

            <classpath refid="compile.classpath"/>
        </javac>
        <copy todir="${out.test.dir}/WEB-INF/classes">
            <fileset dir="${src.test.dir}" includes="**/*.properties"/>
        </copy>

    </target>

    <target name="prepare.test.webapp" 
            description="put the test webapp in the WAR file format in out.test.dir"
            depends="compile.test">

        <!-- Copy needed libs in /lib -->
        <copy file="${junit.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${cactus.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${aspectjrt.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${commons-beanutils.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${commons-collections.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${commons-digester.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${commons-logging.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${jsf-api.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${jstl.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${standard.jar}" todir="${out.test.dir}/WEB-INF/lib"/>
        <copy file="${basedir}/build/lib/jsf-ri.jar" todir="${out.test.dir}/WEB-INF/lib"/>

        <!-- copy the all important web.xml -->
        <filter token="test.root.dir" value="${out.test.dir}"/>
        <copy file="${conf.test.dir}/web.xml" todir="${out.test.dir}/WEB-INF"
              filtering="on"/>

        <!-- copy the test data files -->
        <antcall target="copy-test-data-files"/>

    </target>

    <target name="execute.cactus.tests" depends="prepare.test.webapp">
      <antcall target="safe.remove"/>
      <antcall target="install"/>
      <antcall target="run.cactus.test"/>
      <antcall target="remove"/>
    </target>

    <target name="copy-test-data-files">
       <!-- Copy Unit test static files. -->
       <copy todir="${out.test.dir}">
           <fileset dir="${basedir}/web/test"/>
           <fileset dir="${cactus.home}/web" includes="jspRedirector.jsp"/>
       </copy>
    </target>

    <target name="install" depends="prepare.test.webapp"
            description="Install cactus unit test webapp">
       <install url="${url}" username="${username}" password="${password}"
                path="/test"
                war="file://${out.test.dir}"/>
    </target>

    <target name="remove"
            description="Remove cactus unit test webapp"> 
      <remove url="${url}" username="${username}" password="${password}"
            path="/test"/>
    </target>

    <target name="safe.remove"
            description="Remove cactus unit test webapp, don't fail on error">
      <exec executable="ant.bat" os="Windows 2000" failonerror="false">
        <arg line="-f build-tests.xml -Dusername=${username} -Dpassword=${password} remove"/>
      </exec>
      <exec executable="ant" os="SunOS,Linux" failonerror="false">
        <arg line="-f build-tests.xml -Dusername=${username} -Dpassword=${password} remove"/>
      </exec>
    </target>

<!--
        Start the Cactus test using JUnit test runner.
-->
    <target name="run.cactus.test">

        <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes">
            <classpath>
                <pathelement path="${java.class.path}"/>
                <pathelement location="${out.test.dir}/WEB-INF/classes"/>
                <!-- For cactus.properties -->
                <pathelement location="${conf.test.dir}"/>
            </classpath>
            <classpath refid="compile.classpath"/>

            <formatter type="plain" usefile="false"/>

            <!-- Suite of tests -->
            <test name="com.sun.faces.application.TestApplicationImpl_Config"/>
            <test name="com.sun.faces.config.ConfigFileTestCase"/>
            <test name="com.sun.faces.config.TestManagedBeanFactory"/>
            <test name="com.sun.faces.application.TestActionListenerImpl"/>
            <test name="com.sun.faces.application.TestApplicationFactoryImpl"/>
            <test name="com.sun.faces.application.TestApplicationImpl"/>
            <test name="com.sun.faces.application.TestNavigationHandler"/>
            <test name="com.sun.faces.context.TestExternalContextImpl"/>
            <test name="com.sun.faces.context.TestFacesContextFactoryImpl"/>
            <test name="com.sun.faces.context.TestFacesContextImpl"/>
            <test name="com.sun.faces.application.TestMessageResourcesImpl"/>
            <test name="com.sun.faces.convert.TestConverters"/>
            <test name="com.sun.faces.el.impl.TestELImpl"/>
            <test name="com.sun.faces.el.TestPropertyResolverImpl"/>
            <test name="com.sun.faces.el.TestValueBindingImpl"/>
            <test name="com.sun.faces.el.TestValueBindingImpl_Model"/>
            <test name="com.sun.faces.el.TestVariableResolverImpl"/>
            <test name="com.sun.faces.lifecycle.TestApplyRequestValuesPhase"/>
            <test name="com.sun.faces.lifecycle.TestInvokeApplicationPhase"/>
            <test name="com.sun.faces.lifecycle.TestLifecycleFactoryImpl"/>
            <test name="com.sun.faces.lifecycle.TestLifecycleImpl"/>
            <test name="com.sun.faces.lifecycle.TestProcessEvents"/>
            <test name="com.sun.faces.lifecycle.TestProcessValidationsPhase"/>
            <test name="com.sun.faces.lifecycle.TestRestoreViewPhase"/>
            <test name="com.sun.faces.lifecycle.TestUpdateModelValuesPhase"/>
            <test name="com.sun.faces.renderkit.html_basic.TestHtmlResponseWriter"/>
            <test name="com.sun.faces.renderkit.html_basic.TestComponentType"/>
            <test name="com.sun.faces.renderkit.html_basic.TestRendererConversions"/>
            <test name="com.sun.faces.renderkit.html_basic.TestRenderers_1"/>
            <test name="com.sun.faces.renderkit.html_basic.TestRenderers_3"/>
            <test name="com.sun.faces.renderkit.html_basic.TestRenderers_4"/>
            <test name="com.sun.faces.renderkit.html_basic.TestRenderers_2"/>
            <test name="com.sun.faces.renderkit.TestFormatPoolImpl"/>
            <test name="com.sun.faces.renderkit.TestRenderKitFactory"/>
            <test name="com.sun.faces.renderkit.TestRenderKit"/>
            <test name="com.sun.faces.util.TestUtil"/>
            <test name="com.sun.faces.util.TestUtil_messages"/>
            <test name="com.sun.faces.taglib.jsf_core.TestValidatorTags"/>
            <test name="com.sun.faces.lifecycle.TestPhase"/>
            <test name="com.sun.faces.lifecycle.TestRenderResponsePhase"/>
            <test name="com.sun.faces.lifecycle.TestLifecycleImpl_initial"/>
            <test name="com.sun.faces.lifecycle.TestViewHandlerImpl"/>

            <!-- To run the following tests, comment last 3 tests, uncomment
                 following tests and set saveStateInClient property in
                 conf/test/web.xml to true
            <test name="com.sun.faces.lifecycle.TestSaveStateInPage"/>
            <test name="com.sun.faces.lifecycle.TestRestoreViewFromPage"/> -->

        </junit>

    </target>


    <target name="run.test" depends="compile.test,copy-test-data-files">

        <junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="yes">
            <!-- uncomment the below line to enable attaching a debugger -->
            <!-- <jvmarg line="${debug.jvm.args}"/> -->

            <classpath>
                <pathelement path="${java.class.path}"/>
                <pathelement location="${out.test.dir}/WEB-INF/classes"/>
            </classpath>
            <classpath refid="compile.classpath"/>

            <formatter type="plain" usefile="false"/>

            <test name="com.sun.faces.util.TestUtil_local"/>
        </junit>

    </target>

    <!-- Custom Tomcat Integration -->
    <taskdef  name="install"  classname="org.apache.catalina.ant.InstallTask">
        <classpath>
          <pathelement location="${catalina-ant.jar}" />
        </classpath>
    </taskdef>
    <taskdef  name="remove"   classname="org.apache.catalina.ant.RemoveTask">
        <classpath>
          <pathelement location="${catalina-ant.jar}" />
        </classpath>
    </taskdef>

</project>
