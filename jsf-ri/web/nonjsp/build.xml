<!--
 * Copyright 2003 Sun Microsystems, Inc. All Rights Reserved.
 * 
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 * 
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 * - Redistribution in binary form must reproduce the above
 *   copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials
 *   provided with the distribution.
 * 
 * Neither the name of Sun Microsystems, Inc. or the names of
 * contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * 
 * This software is provided "AS IS," without a warranty of any
 * kind. ALL EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND
 * WARRANTIES, INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT, ARE HEREBY
 * EXCLUDED. SUN AND ITS LICENSORS SHALL NOT BE LIABLE FOR ANY
 * DAMAGES OR LIABILITIES SUFFERED BY LICENSEE AS A RESULT OF OR
 * RELATING TO USE, MODIFICATION OR DISTRIBUTION OF THIS SOFTWARE OR
 * ITS DERIVATIVES. IN NO EVENT WILL SUN OR ITS LICENSORS BE LIABLE
 * FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT, INDIRECT,
 * SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER
 * CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF
 * THE USE OF OR INABILITY TO USE THIS SOFTWARE, EVEN IF SUN HAS
 * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 * 
 * You acknowledge that this software is not designed, licensed or
 * intended for use in the design, construction, operation or
 * maintenance of any nuclear facility.
  
-->

<project name="nonjsp" default="build" basedir=".">
  <target name="init">
      <tstamp/>
  </target>

  <!-- Configure the context path for this application -->
  <property file="build.properties"/>
  <property file="../../build.properties"/>
  <property name="context.path" value="/nonjsp"/>
  <property name="example" value="nonjsp" />
  <property name="build"   value="${basedir}/build" />
  <property name="dist"   value="${basedir}/dist" />


  <!-- Configure properties to access the Manager application -->
  <property name="url"      value="http://localhost:8080/manager"/>

  <path id="classpath">
    <fileset dir="${build}/WEB-INF/lib" includes="*.jar" />
    <pathelement location="${build}/WEB-INF/classes"/>
    <pathelement location="${servlet23.jar}"/>
  </path>


  <target name="clean" >
    <delete dir="${build}" />
    <delete dir="${dist}" />
    <delete dir="${context.path}" />
  </target>

  <target name="verifyPreconditions">

    <antcall target="checkRequiredFile">
       <param name="file" value="${servlet23.jar}"/>
       <param name="fail.message" value="A jar file containing the Servlet 2.3 and JSP1.2 classes is required to compile nonjsp.  Please define the property servlet23.jar in your build.properties file and ensure that the file exists."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-beanutils.jar}"/>
       <param name="fail.message" value="${commons-beanutils.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-digester.jar}"/>
       <param name="fail.message" value="${commons-digester.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-logging.jar}"/>
       <param name="fail.message" value="${commons-logging.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${commons-collections.jar}"/>
       <param name="fail.message" value="${commons-collections.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl_el.jar}"/>
       <param name="fail.message" value="${jstl_el.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-api.jar}"/>
       <param name="fail.message" value="${jsf-api.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jsf-ri.jar}"/>
       <param name="fail.message" value="${jsf-ri.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${standard.jar}"/>
       <param name="fail.message" value="${standard.jar} must exist."/>
    </antcall>

    <antcall target="checkRequiredFile">
       <param name="file" value="${jstl.jar}"/>
       <param name="fail.message" value="${jstl.jar} must exist."/>
    </antcall>

  </target>

  <target name="prepare" depends="init, copyJarsToDemo"
   	description="Create build directories.">
    <mkdir dir="${build}" />
    <mkdir dir="${build}/images" />
    <mkdir dir="${build}/WEB-INF" />
    <mkdir dir="${build}/WEB-INF/classes" />
    <mkdir dir="${build}/WEB-INF/lib" />
    <copy todir="${build}/WEB-INF/lib" >
      <fileset dir="${basedir}/web/WEB-INF/lib">
        <include name="*.jar"/>
      </fileset>
    </copy>
  </target>

  <!-- FIX_ME this target and properties will not be needed once non-jsp demo moved to jsf-demo -->

  <!-- The base directory for dependent jars -->
  <property name="jsf-ri.home" value="../.."/>
  <property name="lib.home" value="${jsf-ri.home}/lib"/>

  <target name="copyJarsToDemo">

	<mkdir dir="${build}/WEB-INF/lib"/>
	<copy todir="${build}/WEB-INF/lib" file="${lib.home}/commons-beanutils.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${lib.home}/commons-logging.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${lib.home}/commons-digester.jar" />
 	<copy todir="${build}/WEB-INF/lib" file="${lib.home}/commons-collections.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${lib.home}/jstl_el.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${lib.home}/servlet.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${jsf.api.head.home}/build/lib/jsf-api.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${jsf-ri.home}/build/lib/jsf-ri.jar" />
	<copy todir="${build}/WEB-INF/lib" file="${standard.jar}" />
	<copy todir="${build}/WEB-INF/lib" file="${jstl.jar}" />

  </target>

  
  <taskdef name="list" classname="org.apache.catalina.ant.ListTask"/>	
  <taskdef name="install" classname="org.apache.catalina.ant.InstallTask"/>
  <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"/>
  <taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask"/>	

  <!-- Executable Targets -->

  <target name="list" description="List web applications" >
    <list url="${url}" username="${username}" password="${password}" />
  </target>

  <target name="install" description="Install web application"
          depends="build">
    <install url="${url}" username="${username}" password="${password}"
          path="${context.path}"  war="file:${build}" />
  </target>

  <target name="reload" description="Reload web application"
          depends="build">
    <reload  url="${url}" username="${username}" password="${password}"
          path="${context.path}"/>
  </target>

  <target name="remove" description="Remove web application">
    <remove url="${url}" username="${username}" password="${password}"
          path="${context.path}"/>
  </target>

  <target name="build" depends="prepare" 
     description="Compile Java files and copy static files." >
    <javac srcdir="src" destdir="${build}/WEB-INF/classes">
    	<include name="**/*.java" />
     <classpath refid="classpath"/>
    </javac>
    <copy todir="${build}/WEB-INF">
      <fileset dir="web/WEB-INF"    >
        <include name="web.xml" />
        <include name="*.tld" />
      </fileset>
    </copy>

     <copy todir="${build}">
      <fileset dir="web">
        <include name="*.html" />
        <include name="*.gif" />
        <include name="*.jpg" />
        <include name="*.xul" />
        <include name="*.xml" />
        <include name="*.css" />
      </fileset>
    </copy>

    <copy todir="${build}/images">
      <fileset dir="web/images">
        <include name="*.gif" />
      </fileset>
    </copy>

    <copy todir="${build}/WEB-INF/classes/${example}" >
      <fileset dir="src/nonjsp" >
         <include name="*properties"/>
      </fileset>
      <fileset dir="src/${example}" >
         <include name="*.xml"/>
      </fileset>
    </copy>
  </target>	 

  <target name="build.war" depends="build">
    <!-- create a war file for distribution -->
    <mkdir dir="${dist}" />
    <jar jarfile="${dist}/${example}.war" basedir="${build}"/> 
  </target>

</project>

