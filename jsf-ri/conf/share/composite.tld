<?xml version="1.0" encoding="UTF-8"?>

<taglib xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.1">

<!-- ============== Tag Library Description Elements ============= -->

    <description>

<![CDATA[

</pre>

<div class="changed_added_2_0">

  <p>Describes the Facelets2 tag library used for declaring and defining
  the usage contract for composite UI Components.  When authoring a
  composite component, use of this tag library is largely optional,
  though always recommended.  Declaring and defining a composite
  component with this taglib provides valuable information about the
  component that can be used by tools and users of the composite
  component. In most cases, a composite component can be authored
  without declaring and defining its usage contract with this taglib.
  PENDING: the limit of what one can do without declaring and defining a
  usage contract must be cleary specified and documented.  PENDING: The
  implementation team must help discover these limits.
  </p>

<h2>Creating a Composite Component</h2>

  <p>The default implementation must support authoring A composite
  component is declared by creating a Facelets2 file inside of a resource
  library.  (See section 2.6 of the specification prose document for
  more information about resource libraries.)  A composite component
  must reside within a resource library.  It is not possible to create a
  composite component without putting it inside of a resource
  library.</p>

  <p>The default XML namespace URI of the taglib that contains the
  composite component, for use in <em>the using page</em>, is
  <code>http://java.sun.com/jsf/composite/&lt;composite-library-name&gt;</code>,
  where <code>&lt;composite-library-name&gt;</code> is the name of the
  resource library.  For example:</p>

<pre><code>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" <br />
            "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br />
&lt;html xmlns="http://www.w3.org/1999/xhtml"<br />
      xmlns:h="http://java.sun.com/jsf/html"<br />
      xmlns:f="http://java.sun.com/jsf/core"<br />
      xmlns:ui="http://java.sun.com/jsf/facelets"<br />
      xmlns:ez="<i>http://java.sun.com/jsf/composite/<b>ezcomp</b></i>"&gt;<br />
...<br />
</code></pre>

<p>This declares that any Facelets2 file in the resource
library called <code>ezcomp</code> can be used as a regular JSF UI
component in a page with the above namespace declaration by using the
"<code>ez</code>" prefix.  For example, placing a file called
<code>foo.xhtml</code> in a resource library called <code>ezcomp</code>
would make that file accessible like this.</p>

<pre><code>
&lt;ez:foo /&gt;
</code></pre>


  <p>The implementation must also support declaring the
  namespace of the tag library in a JSF PDL tag library descriptor.
  This descriptor file is optional and is useful for component vendors
  that do not want to use the default XML namespace.  This version of
  the proposal currently uses the facelet taglib descriptor syntax.  For
  example: </p>

<pre><code>
&lt;facelet-taglib&gt;<br />
    &lt;namespace&gt;http://domain.com/path&lt;/namespace&gt; <br />
    &lt;composite-library-name&gt;compositeTest&lt;/composite-library-name&gt; <br />
&lt;/facelet-taglib&gt; <br />
</code></pre>

  <p>Components from that taglibrary may be used in a using page by
  declaring them in the XML namespace for that page:</p>

<pre><code>
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" <br />
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;<br />
&lt;html xmlns="http://www.w3.org/1999/xhtml"<br />
      xmlns:h="http://java.sun.com/jsf/html"<br />
      xmlns:f="http://java.sun.com/jsf/core"<br />
      xmlns:ui="http://java.sun.com/jsf/facelets"<br />
      xmlns:ez="<i><b>http://domain.com/path/namespace</b></i>"&gt;<br />
...<br />
</code></pre>


  <p>Below is an example of a fairly involved composite component
  declaration.  Such a declaration might appear in
  <code>foo.xhtml</code>.</p>

<div class="syntax"><div class="html4strict" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span class="sc2">&lt;<a href="interface.html">composite:interface</a> <span class="kw3">name</span>=<span class="st0">&quot;foo&quot;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;displayName=<span class="st0">&quot;Very Simple Login Panel&quot;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;preferred=<span class="st0">&quot;true&quot;</span></div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;expert=<span class="st0">&quot;false&quot;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;shortDescription=<span class="st0">&quot;An illustration of the composite component feature&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;<a href="attribute.html">composite:attribute</a> <span class="kw3">name</span>=<span class="st0">&quot;model&quot;</span> required=<span class="st0">&quot;true&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc2">&lt;composite:attribute <span class="kw3">name</span>=<span class="st0">&quot;loginAction&quot;</span> required=<span class="st0">&quot;true&quot;</span> method-signature=<span class="st0">&quot;java.lang.Object action()&quot;</span><span class="kw2">/ &gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2"><span class="kw2">&lt;</span>/composite:attribute&gt;</span></div></li>
<li class="li1"><div class="de2">&nbsp; <span class="sc2">&lt;<a href="editableValueHolder.html">composite:editableValueHolder</a>  <span class="kw3">name</span>=<span class="st0">&quot;username&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de2">&nbsp; <span class="sc2">&lt;composite:actionSource <span class="kw3">name</span>=<span class="st0">&quot;loginEvent&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc2">&lt;composite:actionSource <span class="kw3">name</span>=<span class="st0">&quot;cancelEvent&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de2">&nbsp; <span class="sc2">&lt;composite:actionSource <span class="kw3">name</span>=<span class="st0">&quot;allEvents&quot;</span> targets=<span class="st0">&quot;loginEvent,cancelEvent&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2"><span class="sc2"><span class="kw2">&lt;</span>/composite:interface&gt;</span></div></li>
<li class="li1"><div class="de1"><span class="sc2">&lt;<a href="implementation.html">composite:implementation</a> &gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc2">&lt;ui:decorate template=<span class="st0">&quot;fooTemplate.xhtml&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc2">&lt;ui:define <span class="kw3">name</span>=<span class="st0">&quot;header&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;p&gt;</span></span>This is the login panel header<span class="sc2"><span class="kw2">&lt;/p&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;</span>/ui:define&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; <span class="sc2">&lt;ui:define <span class="kw3">name</span>=<span class="st0">&quot;body&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;p&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="sc2">&lt;h:inputText <span class="kw3">id</span>=<span class="st0">&quot;username&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;/p&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;p&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;h:commandButton <span class="kw3">id</span>=<span class="st0">&quot;loginEvent&quot;</span> <span class="kw3">value</span>=<span class="st0">&quot;Login&quot;</span> <span class="kw3">action</span>=<span class="st0">&quot;#{compositeComponent.elAttrs.model.loginAction}&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;</span>/h:commandButton&gt;</span> </div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2">&lt;h:commandButton <span class="kw3">id</span>=<span class="st0">&quot;cancelEvent&quot;</span> <span class="kw3">value</span>=<span class="st0">&quot;Cancel&quot;</span> <span class="kw3">action</span>=<span class="st0">&quot;cancel&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;</span>/h:commandButton&gt;</span> </div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;/p&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;</span>/ui:define&gt;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; <span class="sc2">&lt;ui:define <span class="kw3">name</span>=<span class="st0">&quot;footer&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp;<span class="sc2"><span class="kw2">&lt;p&gt;</span></span>This is the login panel footer<span class="sc2"><span class="kw2">&lt;/p&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; <span class="sc2"><span class="kw2">&lt;</span>/ui:define&gt;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2"><span class="kw2">&lt;</span>/ui:decorate&gt;</span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2"><span class="sc2"><span class="kw2">&lt;</span>/composite:implementation&gt;</span> </div></li></ol></div></div>


<p>The values for attributes in a composite component PDL file can be
fully localized by putting them inside a ResourceBundle in the same
directory as the PDL page and accessing them with the per-component
resource bundle syntax.  Consider the file <code>foo.xhtml</code>, in
the resource library <code>ezcomp</code>.  The
<code>shortDescription</code> element could be changed to be:</p>

<pre><code>
&lt;composite:interface shortDescription="#{compositeComponent.resourceBundleMap.shortDescription}" &gt;
</code></pre>

<p>In this case, In the same <code>ezcomp</code> directory as
<code>foo.xhtml</code>, there would be a <code>foo.properties</code>
file that would contain this entry:</p>

<pre><code>
shortDescription=A really nifty login panel.
</code></pre>

<p>The normal localization rules for <code>ResourceBundle</code> would
apply.</p>

</div>



<pre>

]]>

    </description>

    <tlib-version>
        2.1
    </tlib-version>

    <short-name>
        composite
    </short-name>

    <uri>
        http://java.sun.com/jsf/composite
    </uri>

<!-- ===================== HTML 4.0 basic tags ====================== -->

    <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">
<p>This element declares the usage contract for a
            composite component.  If not present in a <em>PDL page</em>,
            the contract will be inferred as described in the
            specification.  There must be zero or one of these elements
            in a composite component PDL file.  If a
            <code>&lt;composite:interface&gt;</code> element does
            appear, there must be an accompanying
            <code>&lt;composite-implementation&gt;</code> element in the
            same PDL file.  </p>


</div>
]]>
        </description>
        <name>
            interface
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The name of this composite component.
                Advisory only.  The real name is taken from the
                filename.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The <code>component-type</code> of the <code>UIComponent</code> that
will serve as the <em>composite component root</em> for this composite
component.  The declared <code>component-family</code> for this
component must be <code>javax.faces.NamingContainer</code>.</p></div>]]>

            </description>
            <name>
                componentType
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The name to display in a tool palette
                containing this component.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                displayName
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Is this a "preferred" component.  The value
                of this attribute will be set as the value for this
                property on the <em>composite component bean
                descriptor</em>.</p></div>]]>

            </description>
            <name>
                preferred
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Is this component only for expert users?
                The value of this attribute will be set as the value for
                this property on the <em>composite component bean
                descriptor</em>.</p></div>]]>

            </description>
            <name>
                expert
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>    
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>A short description of the purpose of this
                component.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                shortDescription
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>  
  </tag>

    <tag>
        <description>
            <![CDATA[
<div class="changed_added_2_0">
<p>Defines the implementation of the composite
            component.  There must be zero or one of these in a
            composite component markup file.  If a
            <code>&lt;composite:interface&gt;</code> element appears,
            there must be a corresponding
            <code>&lt;composite-implementation&gt;</code> element. If no
            <code>&lt;composite:interface&gt;</code> element appears,
            the <code>&lt;composite-implementation&gt;</code> element is
            optional.  </p> </div>]]>
        </description>
        <name>
            implementation
        </name>
        <body-content>
            JSP
        </body-content>
  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">
<p>Declares an attribute that may be given to an instance of the
<em>composite component</em> tag for this composite component.  There
may be zero or many of these inside of the
<code>&lt;composite:interface</code>&gt; section.  This element may be
nested within other <code>&lt;composite:attribute&gt;</code> elements to
convey a usage contract that includes nested properties.</p>

            <p></p>

</div>]]>
        </description>
        <name>
            attribute
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The name of the attribute as it must appear
                on the <em>composite component tag</em> in the
                <em>using page</em>.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                true
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If this attribute is not required, and a
                value is not supplied by the page author, use this as
                the default value.</p></div>]]>

            </description>
            <name>
                default
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The name to display in a tool palette
                containing this component.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                displayName
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>True if the page author must supply a value
                for this attribute.</p></div>]]>

            </description>
            <name>
                required
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Is this a "preferred" component.  The value
                of this attribute will be set as the value for this
                property on the <em>composite component bean
                descriptor</em>.</p></div>]]>

            </description>
            <name>
                preferred
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Is this component only for expert users?
                The value of this attribute will be set as the value for
                this property on the <em>composite component bean
                descriptor</em>.</p></div>]]>

            </description>
            <name>
                expert
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>    
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>A short description of the purpose of this
                component.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                shortDescription
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>  
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Declares that this attribute must be a <code>MethodExpression</code>
whose method signature is described by the value of this attribute.  The
signature must be described using fully qualified class names wherever a
type is required.  This attribute is mutually exclusive with the "type"
attribute.  If both attributes are present, the "method-signature"
attribute is ignored.</p> </div>]]>

            </description>
            <name>
                method-signature
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>

        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Declares that this attribute must be a <code>ValueExpression</code>
whose expected type is given by the value of this attribute.  If not
specified, and no "method-signature" attribute is present,
<code>java.lang.Object</code> is assumed.  </p> </div>]]>

            </description>
            <name>
                type
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>  

  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">

<p>Declares that this composite component supports a facet with the
name given by the value of the "name" attribute. </p>

            <p></p>

</div>]]>
        </description>
        <name>
            facet
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The name of the attribute as it must appear
                on the <em>composite component tag</em> in the
                <em>using page</em>.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                true
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>

        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The name to display in a tool palette
                containing this component.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                displayName
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>True if the page author must supply a facet with this name.</p></div>]]>

            </description>
            <name>
                required
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Is this a "preferred" facet.  The value
                of this attribute will be set as the value for this
                property on the <em>composite component bean
                descriptor</em>.</p></div>]]>

            </description>
            <name>
                preferred
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>Is this facet only for expert users?
                The value of this attribute will be set as the value for
                this property on the <em>composite component bean
                descriptor</em>.</p></div>]]>

            </description>
            <name>
                expert
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    boolean
                </type>
            </deferred-value>
        </attribute>    
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>A short description of the purpose of this
                facet.  The value of this attribute will be set as
                the value for this property on the <em>composite
                component bean descriptor</em>.</p></div>]]>

            </description>
            <name>
                shortDescription
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>  
  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">

<p>This element is used in the
<code>&lt;composite:implementation&gt;</code> section.  The facet with
the name equal to the value of the name attribute, given by the page
author in the using page, will be rendered at this point in the
composite component PDL page. </p>


            <p>The implementation of this tag handler must insert a
            component with <code>component-type</code>
            <code>javax.faces.Output</code> and <code>renderer-type</code>
            <code>javax.faces.ConsumingPageCompositeChildren</code> as a
            child at this point in the component tree.</p>

<p>The implementation of this tag handler must store an attribute into
the created component's attribute map under the key given by the value
of the symbolic constant <code>UIComponent.FACETS_KEY</code>.  The value
for this key must be the evaluated value of the "name" attribute.</p>

</div>]]>
        </description>
        <name>
            insertFacet
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>The value of the name attribute as it must appear on an
<code>&lt;f:facet&gt;</code> tag nested within the <em>composite
component tag</em> in the <em>using page</em>.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                true
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">

<p>This element is used in the
<code>&lt;composite:implementation&gt;</code> section.  Any child
components or template text within the composite component tag in the
using page will be inserted into the rendered output at this point
in the composite component PDL page.</p>

            <p>The implementation of this tag handler must insert a
            component with <code>component-type</code>
            <code>javax.faces.Output</code> and <code>renderer-type</code>
            <code>javax.faces.ConsumingPageCompositeChildren</code> as a
            child at this point in the component tree.</p>

</div>]]>
        </description>
        <name>
            insertChildren
        </name>
        <body-content>
            JSP
        </body-content>
  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">
<p>Declares that the composite component whose
            contract is declared by the
            <code>&lt;composite:interface&gt;</code> in which this
            element is nested exposes an implementation of
            <code>ValueHolder</code> suitable for use as the target of
            <em>attached objects</em> in <em>the using page</em>.
            Any attached objects suitable for implementations of
            <code>ValueHolder</code> may be attached to the composite
            component.  Consider this excerpt from <em>the using
            page</em>:
            </p>

<div class="syntax"><div class="html4strict" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span class="sc2">&lt;ez:foo&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;f:converter <span class="kw3">for</span>=<span class="st0">&quot;userid&quot;</span> binding=<span class="st0">&quot;#{bean.converter}&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc2"><span class="kw2">&lt;</span>/ez:foo&gt;</span> </div></li></ol></div></div>

           <p>Line 2 refers to the
           <code>&lt;composite:valueHolder&gt;</code> declaration on
           line 2 of <code>foo.xhtml</code>:</p>

<div class="syntax"><div class="html4strict" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span class="sc2">&lt;composite:interface&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;composite:valueHolder <span class="kw3">name</span>=<span class="st0">&quot;userid&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc2"><span class="kw2">&lt;</span>/composite:interface&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="sc2">&lt;composite:implementation&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;h:inputText <span class="kw3">id</span>=<span class="st0">&quot;userid&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc2"><span class="kw2">&lt;</span>/composite:implementation&gt;</span> </div></li></ol></div></div>

<p></p>

<p>It is possible to declare that a single
<code>&lt;composite:valueHolder&gt;</code> element should cause multiple
components within the <code>&lt;composite:implementation&gt;</code>
section to be the targets of an <em>attached object</em> in the
using page.  Assuming the same <em>using page</em> excerpt as
above, the revised <em>PDL page</em> is:</p>

<div class="syntax"><div class="html4strict" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span class="sc2">&lt;composite:interface&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;composite:valueHolder targets=<span class="st0">&quot;userid,password&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc2"><span class="kw2">&lt;</span>/composite:interface&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="sc2">&lt;composite:implementation&gt;</span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;h:inputText <span class="kw3">id</span>=<span class="st0">&quot;userid&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc2">&lt;h:inputText <span class="kw3">id</span>=<span class="st0">&quot;password&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2"><span class="sc2"><span class="kw2">&lt;</span>/composite:implementation&gt;</span> </div></li></ol></div></div>

<p>In this case, the "targets" attribute on the
<code>&lt;composite:valueHolder&gt;</code> element, on line 2 above,
replaces the "name" attribute in the previous example.  "targets" is a
list of ids of components within the
<code>&lt;composite:implementation&gt;</code> section.  In this case,
"targets" refers to the <code>&lt;h:inputText&gt;</code> components on
lines 6 and 7 above.</p>

</div>]]>
        </description>
        <name>
            valueHolder
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If present, this must be the component id of
                a component within the
                <code>&lt;composite:implementation&gt;</code> section.
                If not present, the "targets" attribute must be
                present.  If both "name" and "targets" are present, "targets"
                takes precedence.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If present, this must be a comma separated
                list of component ids of components within the
                <code>&lt;composite:implementation&gt;</code> section.
                If not present, the "name" attribute must be present.
                If both "name" and "targets" are present, "targets"
                takes precedence.</p></div>]]>

            </description>
            <name>
                targets
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">
<p>Declares that the composite component whose
            contract is declared by the
            <code>&lt;composite:interface&gt;</code> in which this
            element is nested exposes an implementation of
            <code>EditableValueHolder</code> suitable for use as the
            target of <em>attached objects</em> in <em>the using
            page</em>.  Any attached objects suitable for
            implementations of <code>EditableValueHolder</code> may be
            attached to the composite component.The example from <a
            href="valueHolder.html"><code>&lt;composite:valueHolder&gt;</code></a>
            still applies.
            </p>
</div>]]>
        </description>
        <name>
            editableValueHolder
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If present, this must be the component id of
                a component within the
                <code>&lt;composite:implementation&gt;</code> section.
                If not present, the "targets" attribute must be
                present.  If both "name" and "targets" are present, "targets"
                takes precedence.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If present, this must be a comma separated
                list of component ids of components within the
                <code>&lt;composite:implementation&gt;</code> section.
                If not present, the "name" attribute must be present.
                If both "name" and "targets" are present, "targets"
                takes precedence.</p></div>]]>

            </description>
            <name>
                targets
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
  </tag>

  <tag>
        <description>

            <![CDATA[
<div class="changed_added_2_0">
<p>Declares that the composite component whose
            contract is declared by the
            <code>&lt;composite:interface&gt;</code> in which this
            element is nested exposes an implementation of
            <code>ActionSource2</code> suitable for use as the target of
            <em>attached objects</em> in <em>the using page</em>.
            Any attached objects suitable for implementations of
            <code>ActionSource2</code> may be attached to the composite
            component.  Consider this excerpt from <em>the using
            page</em>:
            </p>

<div class="syntax"><div class="html4strict" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span class="sc2">&lt;ez:loginPanel <span class="kw3">id</span>=<span class="st0">&quot;loginPanel&quot;</span> model=<span class="st0">&quot;#{bean}&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;f:valueChangeListener <span class="kw3">for</span>=<span class="st0">&quot;username&quot;</span></div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; binding=<span class="st0">&quot;#{bean.useridValueChangeListener}&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;f:actionListener <span class="kw3">for</span>=<span class="st0">&quot;loginEvent&quot;</span> </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; binding=<span class="st0">&quot;#{bean.loginEventListener}&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc2">&lt;f:actionListener <span class="kw3">for</span>=<span class="st0">&quot;cancelEvent&quot;</span> </div></li>
<li class="li2"><div class="de2">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; binding=<span class="st0">&quot;#{bean.cancelEventListener}&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp;</div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;f:actionListener <span class="kw3">for</span>=<span class="st0">&quot;allEvents&quot;</span> </div></li>
<li class="li1"><div class="de1">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; binding=<span class="st0">&quot;#{bean.allEventsListener}&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp;</div></li>
<li class="li1"><div class="de1"><span class="sc2"><span class="kw2">&lt;</span>/ez:loginPanel&gt;</span> </div></li></ol></div></div>

<p>The <code>&lt;f:actionListener&gt;</code> elements on lines 4, 7, and 10
refer to the <em>attached objects</em> declared on lines 2, 3 and 4 below.</p>

<div class="syntax"><div class="html4strict" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span class="sc2">&lt;composite:interface <span class="kw3">name</span>=<span class="st0">&quot;loginPanel&quot;</span><span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;composite:actionSource <span class="kw3">name</span>=<span class="st0">&quot;loginEvent&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1">&nbsp; <span class="sc2">&lt;composite:actionSource <span class="kw3">name</span>=<span class="st0">&quot;cancelEvent&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li2"><div class="de2">&nbsp; <span class="sc2">&lt;composite:actionSource <span class="kw3">name</span>=<span class="st0">&quot;allEvents&quot;</span> targets=<span class="st0">&quot;loginEvent,cancelEvent&quot;</span> /<span class="kw2">&gt;</span></span></div></li>
<li class="li1"><div class="de1"><span class="sc2"><span class="kw2">&lt;</span>/composite:interface&gt;</span> </div></li></ol></div></div>

<p>Most of the concepts from example content from <a
href="valueHolder.html"><code>&lt;composite:valueHolder&gt;</code></a>
also applies in the case of
<code>&lt;composite:actionSource&gt;</code>.</p>

</div>]]>
        </description>
        <name>
            actionSource
        </name>
        <body-content>
            JSP
        </body-content>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If present, this must be the component id of
                a component within the
                <code>&lt;composite:implementation&gt;</code> section.
                If not present, the "targets" attribute must be
                present.  If both "name" and "targets" are present, "targets"
                takes precedence.</p></div>]]>

            </description>
            <name>
                name
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
        <attribute>
            <description>

                <![CDATA[
<div class="changed_added_2_0">
<p>If present, this must be a comma separated
                list of component ids of components within the
                <code>&lt;composite:implementation&gt;</code> section.
                If not present, the "name" attribute must be present.
                If both "name" and "targets" are present, "targets"
                takes precedence.</p></div>]]>

            </description>
            <name>
                targets
            </name>
            <required>
                false
            </required>
            <deferred-value>
                <type>
                    java.lang.String
                </type>
            </deferred-value>
        </attribute>
  </tag>



</taglib>
