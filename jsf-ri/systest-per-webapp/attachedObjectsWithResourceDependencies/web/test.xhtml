<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:mjx="http://java.sun.com/jsf/mojarra/extensions"
      xmlns:hb="https://javaserverfaces.dev.java.net/demo/headbody"
      xmlns:ui="http://java.sun.com/jsf/facelets">
<f:view contentType="text/html"/>

<mjx:head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <title>attachedObjectsWithResourceDependencies</title>
</mjx:head>

<mjx:body>

<h1>Demonstrate that converters and validators can have
@ResourceDependency annotations</h1>

<h:form prependId="false">

  <p>This text field has a validator and a converter attached to it.
  Both artifacts use the @ResourceDependency to cause a script to be
  output.</p>

<p>

   <h:inputText value="#{bean.stringProperty}">
                <f:converter converterId="converterWithResourceDependency" />
                <f:validator validatorId="validatorWithResourceDependency" />
   </h:inputText>

</p>

  <p><h:commandButton value="reload" /></p>

  <p><span id="replaceByJavaScript" /></p>

</h:form>

<form>

  <p><input type="submit" value="call validator script" onclick="inValidatorScript(); return false; " /></p>

  <p><input type="submit" value="call converter script" onclick="inConverterScript(); return false; " /></p>

</form>

</mjx:body>

</html>
