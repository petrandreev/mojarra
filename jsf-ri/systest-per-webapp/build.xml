<?xml version='1.0' encoding='UTF-8'?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License). You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the License at
 https://javaserverfaces.dev.java.net/CDDL.html or
 legal/CDDLv1.0.txt. 
 See the License for the specific language governing
 permission and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at legal/CDDLv1.0.txt.    
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 your own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 [Name of File] [ver.__] [Date]
 
 Copyright 2005 Sun Microsystems Inc. All Rights Reserved
-->


<!-- ************ JSF build file ************************************** -->

<project name="JSF-RI-Systest-per-webapp" default="test" basedir=".">

    <property name="Name" value="JavaServer Faces RI per-webapp System Test"/>
    <property name="name" value="jsf-ri-systest-per-webapp"/>

    <!-- ************ Per user local properties ******************************* -->

    <property file="${user.home}/build.properties"/>
    <!-- User local        -->
    <property file="../../build.properties"/>
    <!-- Project local     -->
    <import file="${jsf.build.home}/common/ant/common.xml"/>

    <!-- Construct compile classpath -->
    <path id="test.compile.classpath">
        <pathelement location="${jsf-api.jar}"/>
        <pathelement location="${jsf-impl.jar}"/>
        <pathelement location="${jsf.test.jar}"/>
        <path refid="compile.classpath"/>
        <pathelement location="${basedir}/build/classes"/>
        <path refid="htmlunit.compile.classpath"/>
    </path>

    <!-- Property containing all of the currenly running systests.  
         This property list *must* match the one defined in the
         systest-per-webapp build-tests.xml. -->
    <property name="applications"
              value="prefer-xhtml-render,
                   replace-application,
                   replace-statemanager,                                    
                   command-link-back-button,
                   nested-datatables,
                   jar-ordering,                  
                   replace-lifecycle,
                   string-converter"/>

    <!-- 
       EXCLUDED APPLICATIONS:
          view-expired
          core-tags
          el-performance
          command-link-redirect
    -->

    <!-- ************ Executable Targets ************************************** -->


    <target name="init"
            description="Initialize and evaluate conditionals">
        <echo message="-------- ${Name} ${impl.version} --------"/>
    </target>


    <target name="prepare" depends="init"
            description="Prepare build directory">

    </target>

    <macrodef name="deploy.app">
        <attribute name="base-app-dir"/>
        <attribute name="appname"/>
        <sequential>
            <mkdir dir="@{base-app-dir}/build/classes"/>
            <jsf.javac srcdir="@{base-app-dir}/src/java"
                       destdir="@{base-app-dir}/build/classes">
                <classpath>
                    <path refid="test.compile.classpath"/>
                </classpath>
            </jsf.javac>
            <jsf.war archive-name="jsf-@{appname}"
                     basedir="@{base-app-dir}/build"
                     webxml="@{base-app-dir}/web/WEB-INF/web.xml">
                <archive-elements>
                    <zipfileset dir="@{base-app-dir}/web"
                                includes="**/*"/>
                    <zipfileset dir="@{base-app-dir}/build/classes"
                                prefix="WEB-INF/classes"/>
                    <zipfileset dir="@{base-app-dir}/src/java"
                                includes="**/*.properties,**/*.xml"
                                prefix="WEB-INF/classes"/>
                    <zipfileset file="${jsf.test.jar}"
                                prefix="WEB-INF/lib"/>
                    <zipfileset dir="${basedir}/build/classes"
                                prefix="WEB-INF/classes"/>
                    <zipfileset dir="${impl.dir}/build/test/classes"
                                prefix="WEB-INF/classes"/>
                </archive-elements>
            </jsf.war>
            <deploy.artifact
                  artifact="@{base-app-dir}/build/jsf-@{appname}.war"
                  appName="jsf-@{appname}"/>
        </sequential>
    </macrodef>

    <macrodef name="undeploy.app">
        <attribute name="appname"/>
        <sequential>
            <undeploy.artifact artifact="jsf-@{appname}.war"
                               appName="jsf-@{appname}"/>
        </sequential>
    </macrodef>

    <target name="compile.base.sources">
        <mkdir dir="${basedir}/build/classes"/>
        <jsf.javac srcdir="${impl.dir}/systest/src"
                   destdir="${basedir}/build/classes">
            <classpath>
                <path refid="test.compile.classpath"/>
            </classpath>
        </jsf.javac>
    </target>

    <target name="install" depends="compile.base.sources">

        <for list="${applications}" param="app" trim="true">
            <sequential>
                <undeploy.app appname="@{app}"/>
                <deploy.app appname="@{app}"
                            base-app-dir="${basedir}/@{app}"/>
            </sequential>
        </for>

    </target>


    <target name="remove">

        <for list="${applications}" param="app" trim="true">
            <sequential>
                <undeploy.app appname="@{app}"/>
            </sequential>
        </for>

    </target>

    <target name="clean"
            description="Clean build and distribution directories">

        <delete dir="${basedir}/build"/>
        <for list="${applications}" param="app" trim="true">
            <sequential>
                <delete dir="${basedir}/@{app}/build"/>
            </sequential>
        </for>

    </target>


    <!-- ********** Test Execution Targets ************************************ -->


    <target name="test" depends="install"
            description="Execute all tests against installed /jsf-* applications">

        <ant antfile="build-tests.xml" target="test"/>

    </target>

</project>
