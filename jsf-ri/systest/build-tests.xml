<?xml version='1.0' encoding='UTF-8'?>

<!--
 $Id: build-tests.xml,v 1.67 2005/03/11 18:14:07 edburns Exp $
-->

<!--
 Copyright 2004 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<!-- ********** JSF System Integration Test File ************************** -->


<project name="JSF-RI-Systest-Execute" default="test" basedir=".">


<!-- =========================== Configuration ============================ -->


  <!-- Load properties in case this script executed directly -->
  <property file="${user.home}/build.properties"/>
  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="../../build.properties"/>

  <!-- SystestClient connection properties -->
  <property name="context.path" value="/jsf-systest"/>
  <property name="host"         value="localhost"/>
  <property name="port"         value="8080"/>
  <!-- SystestClient failure handling properties -->
  <property name="failonerror"  value="true"/>
  <!-- Set 'protocol' to a zero length string to use HttpURLConnection -->
  <property name="protocol"     value="HTTP/1.0"/>
  <property name="golden.path"  value="${context.path}/golden"/>
  <property name="ignore.path"  value="${context.path}/ignore"/>
  <property name="local.golden.path" value="${basedir}/web/golden"/>

  <!-- Test results directory -->
  <property name="test.results.dir" value="../testresults"/>

  <!-- Default value for debugging arguments is no.  Override in
       build.properties -->
  <property name="debug.jvm.args" value=""/>

  <!-- SystestClient taskdef classpath -->
  <path id="test.classpath">
    <pathelement location="${ant.home}/lib/ant.jar"/>
    <pathelement location="${basedir}/build/WEB-INF/classes"/>
    <pathelement location="${commons-logging.jar}"/>
  </path>


  <!-- SystestClient taskdef declaration -->
  <taskdef  name="tester"
       classname="com.sun.faces.systest.ant.SystestClient">
    <classpath refid="test.classpath" />
  </taskdef>


  <!-- HtmlUnit client classpath -->
  <path id="html.classpath">
    <pathelement location="${junit.jar}"/>
    <pathelement location="../src"/>
    <pathelement location="${basedir}/build/WEB-INF/classes"/>
    <fileset dir="${htmlunit.home}/lib">
        <include name="*.jar"/>
    </fileset>
  </path>


<!-- ======================== Test Execution ============================== -->


  <target name="test"
   description="Execute all tests against installed application"
       depends="test.init,
                test.config,
                test.listener,
                test.duplicateIds,
                test.renderkit,
                test.hello,
                test.external,
                test.managed,
                test.message,
                test.converter,
                test.converter01,
                test.converter02,
                test.converter03,
                test.converter04,
                test.validator,
                test.validator01,
                test.validator02,
                test.validator03,
                test.component,
                test.component01,
                test.navigation,
                test.tlvalidator,
                test.standard,
                test.html.taglib,
                test.verbatim,
                test.phases,
                test.subview,
                test.jsp,
                test.path,
                test.methodRef,
                test.valueBindingGet
               "/>

    <target name="test.init">
        <mkdir dir="${test.results.dir}"/>
    </target>

    <target name="test.duplicateIds"
        description="Test duplicate ID detection">
    
        <tester host="${host}" port="${port}" protocol="${protocol}"
            request="${context.path}/faces/duplicateIds01.jsp"
             status="200" failonerror="${failonerror}"/>
        
        <tester host="${host}" port="${port}" protocol="${protocol}"
            request="${context.path}/faces/duplicateIds02.jsp"
             status="200" failonerror="${failonerror}"/>
        
        <tester host="${host}" port="${port}" protocol="${protocol}"
            request="${context.path}/faces/duplicateIds03.jsp"
             status="200" failonerror="${failonerror}"/>

        <tester host="${host}" port="${port}" protocol="${protocol}"
            request="${context.path}/faces/duplicateIds05.jsp"
            status="200" failonerror="${failonerror}" />

    <junit printsummary="yes" fork="yes"
          haltonfailure="yes" haltonerror="yes">

      <!-- uncomment the below line to enable attaching a debugger -->
      <jvmarg line="${debug.jvm.args}"/>

      <classpath refid="html.classpath"/>
      <formatter  type="plain"      usefile="false"/>
      <formatter  type="xml"        usefile="true"/>
      <sysproperty key="host"         value="${host}"/>
      <sysproperty key="port"         value="${port}"/>
      <sysproperty key="context.path" value="${context.path}"/>

      <batchtest todir="${test.results.dir}">
        <fileset    dir="${basedir}/build/WEB-INF/classes"
               includes="com/sun/faces/systest/TestDuplicateIds04.class"/>
      </batchtest>

    </junit>


    </target>

  <target name="test.external"
   description="Test ExternalContext implementation issues">

    <!-- Request scope attribute transparency -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/external01.jsp"
      outContent="/external01.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Session scope attribute transparency -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/external02.jsp"
      outContent="/external02.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Application scope attribute transparency -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/external03.jsp"
      outContent="/external03.jsp PASSED" failonerror="${failonerror}"/>

  </target>


  <target name="test.hello"
   description="Basic Hello, World Tests">

    <!-- Simple Non-Faces Response -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/hello.jsp" status="200"
      outContent="/hello.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Simple Faces Response (Indirect) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/facesResponse.jsp?responseViewId=/hello.jsp"
      outContent="/hello.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Simple Faces Response (Direct) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/hello.jsp"
      outContent="/hello.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Simple Golden File Test -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/hello.jsp"
          golden="${golden.path}/hello.txt" failonerror="${failonerror}"/>

    <!-- Simple Golden File Plus Ignore File Test -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/hello.jsp" failonerror="${failonerror}"
          golden="${golden.path}/hello-mismatch.txt"
          ignore="${ignore.path}/hello-mismatch.txt"/>

  </target>


  <target name="test.jsp"
   description="Test JSP Integration">

    <junit printsummary="yes" fork="yes"
          haltonfailure="yes" haltonerror="yes">

      <!-- uncomment the below line to enable attaching a debugger -->
      <jvmarg line="${debug.jvm.args}"/>

      <classpath refid="html.classpath"/>
      <formatter  type="plain"      usefile="false"/>
      <formatter  type="xml"        usefile="true"/>
      <sysproperty key="host"         value="${host}"/>
      <sysproperty key="port"         value="${port}"/>
      <sysproperty key="context.path" value="${context.path}"/>

      <!-- Uncomment the following for wire-level debugging -->
      <!-- NOTE:  this requires a hacked htmlunit-1.2.3.jar -->
<!--
      <sysproperty key="org.apache.commons.logging.Log"
                 value="org.apache.commons.logging.impl.SimpleLog"/>
      <sysproperty key="org.apache.commons.logging.simplelog.log.httpclient.wire"
                 value="debug"/>
-->
<!--
      <sysproperty key="org.apache.commons.logging.simplelog.showdatetime"
                 value="true"/>
-->

      <batchtest todir="${test.results.dir}">
        <fileset    dir="${basedir}/build/WEB-INF/classes"
               includes="com/sun/faces/jsptest/*TestCase.class"/>
      </batchtest> 

    </junit>

  </target>
    
    <target name="test.path"
        description="Test Path Handling">

        <junit printsummary="yes" fork="no"
            haltonfailure="yes" haltonerror="yes">

            <classpath refid="html.classpath"/>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"   usefile="true"/>
            <sysproperty key="host" value="${host}"/>
            <sysproperty key="port" value="${port}"/>
            <sysproperty key="context.path" value="${context.path}"/>

            <!-- Uncomment the following for wire-level debugging -->
            <!-- NOTE:  this requires a hacked htmlunit-1.2.3.jar -->
            <!--
            <sysproperty key="org.apache.commons.logging.Log"
            value="org.apache.commons.logging.impl.SimpleLog"/>
            <sysproperty key="org.apache.commons.logging.simplelog.log.httpclient.wire"
            value="debug"/>
            -->
            <!--
            <sysproperty key="org.apache.commons.logging.simplelog.showdatetime"
            value="true"/>
            -->

            <batchtest todir="${test.results.dir}">
                <fileset dir="${basedir}/build/WEB-INF/classes"
                    includes="com/sun/faces/pathtest/*TestCase.class,com/sun/faces/systest/NavigationTestCase.class"/>
            </batchtest>

        </junit>

    </target>

  <target name="test.methodRef"
   description="Test Method References">

    <junit printsummary="yes" fork="yes"
          haltonfailure="yes" haltonerror="yes">

      <!-- uncomment the below line to enable attaching a debugger -->
      <jvmarg line="${debug.jvm.args}"/>

      <classpath refid="html.classpath"/>
      <formatter  type="plain"      usefile="false"/>
      <formatter  type="xml"        usefile="true"/>
      <sysproperty key="host"         value="${host}"/>
      <sysproperty key="port"         value="${port}"/>
      <sysproperty key="context.path" value="${context.path}"/>

      <!-- Uncomment the following for wire-level debugging -->
      <!-- NOTE:  this requires a hacked htmlunit-1.2.3.jar -->
<!--
      <sysproperty key="org.apache.commons.logging.Log"
                 value="org.apache.commons.logging.impl.SimpleLog"/>
      <sysproperty key="org.apache.commons.logging.simplelog.log.httpclient.wire"
                 value="debug"/>
-->
<!--
      <sysproperty key="org.apache.commons.logging.simplelog.showdatetime"
                 value="true"/>
-->

      <batchtest todir="${test.results.dir}">
        <fileset    dir="${basedir}/build/WEB-INF/classes"
               includes="com/sun/faces/methodref/*TestCase.class"/>
      </batchtest>

    </junit>

    <!-- MethodBinding Test #2 (Superclass Method Calls) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/methodref02.jsp"
      outContent="/methodref02.jsp PASSED" failonerror="${failonerror}"/>

  </target>

  <target name="test.valueBindingGet"
   description="Test ValueBinding.getValue() implementation">

     <!-- ValueBinding Test #1 (Simple Bean Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding01.jsp"
      outContent="/valueBinding01.jsp PASSED" failonerror="${failonerror}"/>

    <!-- ValueBinding Test #2 (Simple String Property Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding02.jsp"
      outContent="/valueBinding02.jsp PASSED" failonerror="${failonerror}"/>

    <!-- ValueBinding Test #3 (Simple Integer Property Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding03.jsp"
      outContent="/valueBinding03.jsp PASSED" failonerror="${failonerror}"/>

    <!-- ValueBinding Test #4 (Simple Boolean Property Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding04.jsp"
      outContent="/valueBinding04.jsp PASSED" failonerror="${failonerror}"/>

    <!-- ValueBinding Test #5 (Simple Integer Expression Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding05.jsp"
      outContent="/valueBinding05.jsp PASSED" failonerror="${failonerror}"/>

    <!-- ValueBinding Test #6 (Simple Boolean Expression Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding06.jsp"
      outContent="/valueBinding06.jsp PASSED" failonerror="${failonerror}"/>

    <!-- ValueBinding Test #7 (Mixed Literal and Expression Getter) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/valueBinding07.jsp"
      outContent="/valueBinding07.jsp PASSED" failonerror="${failonerror}"/>

  </target>

  <target name="test.config"
   description="Test config loading facility">

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/config01.jsp"
      outContent="/config01.jsp PASSED" failonerror="${failonerror}"/>

   <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/factoryFinder.jsp"
        golden="${golden.path}/factoryFinder.txt" ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
        recordGolden="${local.golden.path}/factoryFinder.txt"
        failonerror="${failonerror}"/>

  </target>

  <target name="test.listener"
   description="Test listener">
                                                                                
    <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/listener.jsp"
         status="200" failonerror="${failonerror}"/>
  </target>

  <target name="test.managed"
   description="Test managed bean creation facility">

    <!-- Managed Bean Create #1 (No Property Setters) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/managed01.jsp"
      outContent="/managed01.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Managed Bean Create #2 (Primitive Property Setters) -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/managed02.jsp"
      outContent="/managed02.jsp PASSED" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/managed03.jsp"
      status="500" failonerror="${failonerror}"/>

   <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/managed04.jsp"
        golden="${golden.path}/managed04.txt"
        recordGolden="${local.golden.path}/managed04.txt" ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
        failonerror="${failonerror}"/> 

   <tester host="${host}" port="${port}" protocol="${protocol}"
            request="${context.path}/faces/managed07.jsp"
             status="500" failonerror="${failonerror}"/> 
  </target>



  <target name="test.message"
   description="Test message resources processing">

    <!-- Standard API Message Resources -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/message01.jsp"
      outContent="/message01.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Standard IMPL Message Resources -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/message02.jsp"
      outContent="/message02.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Single Message Resources Element -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/message03.jsp"
      outContent="/message03.jsp PASSED" failonerror="${failonerror}"/>

    <!-- Double Message Resources Element -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/message04.jsp"
      outContent="/message04.jsp PASSED" failonerror="${failonerror}"/>

  </target>

  <target name="test.navigation"
   description="Test navigation handler rule processing">

  </target>

  <target name="test.tlvalidator"
   description="Test the RI Tag Library Validator">

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestHtmlBasicValidatorFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestHtmlBasicValidatorSucceed.jsp"
      status="200" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestCoreValidatorFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestCoreValidatorSucceed.jsp"
      status="200" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestCoreValidatorIfFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestCoreValidatorIfSucceed.jsp"
      status="200" failonerror="${failonerror}"/>
<!-- JSTL forEach integration indefinately inoperable.
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestCoreValidatorIteratorFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestCoreValidatorIteratorSucceed.jsp"
      status="200" failonerror="${failonerror}"/>
-->

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestElValidatorActionRefFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestElValidatorActionRefSucceed.jsp"
      status="200" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/TestElValidatorComponentFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
   	 request="${context.path}/faces/TestElValidatorComponentSucceed.jsp"
      status="200" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
    	 request="${context.path}/faces/TestElValidatorIdFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
    	 request="${context.path}/faces/TestElValidatorIdSucceed.jsp"
      status="200" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
    	 request="${context.path}/faces/TestElValidatorValueRefFail.jsp"
      status="500" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
    	 request="${context.path}/faces/TestElValidatorValueRefSucceed.jsp"
      status="200" failonerror="${failonerror}"/>

    <tester host="${host}" port="${port}" protocol="${protocol}"
    	 request="${context.path}/faces/jsp/tlvTest01.jsp"
      status="200" failonerror="${failonerror}"/>

  </target>
  
  <target name="test.converter"
   description="Test Converter creation facility">

    <!-- Test Converter creation -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/converter.jsp"
      outContent="/converter.jsp PASSED" failonerror="${failonerror}"/>
  </target>
  
  <target name="test.converter01"
   description="Test standard Converter replacement">

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/converter01.jsp"
      outContent="/converter01.jsp PASSED" failonerror="${failonerror}"/>
  </target>

  <target name="test.converter02"
   description="Test passing Converter instances to component tag">
   
   <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/converter02.jsp"
        golden="${golden.path}/standard/converter02.txt" failonerror="${failonerror}"/>
  </target>
  
  <target name="test.converter03"
   description="Test converter">
                                                                                     
    <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/converter03.jsp"
         status="200" failonerror="${failonerror}"/>
  </target>

  <target name="test.converter04"
   description="Test converter">
                                                                                     
    <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/converter04.jsp"
         status="200" failonerror="${failonerror}"/>
  </target>

  <target name="test.validator"
   description="Test Validator creation facility">

    <!-- Test validator creation -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/validator.jsp"
      outContent="/validator.jsp PASSED" failonerror="${failonerror}"/>
  </target>
  
  <target name="test.validator01"
   description="Test standard Validator replacement">

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/validator01.jsp"
      outContent="/validator01.jsp PASSED" failonerror="${failonerror}"/>
  </target>

  <target name="test.validator02"
   description="Test validator">
                                                                                     
    <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/validator02.jsp"
         status="200" failonerror="${failonerror}"/>
  </target>
  
  <target name="test.validator03"
   description="Test validator">
                                                                                
                                                                                
    <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/faces/validator03.jsp"
         status="200" failonerror="${failonerror}"/>
  </target>

  <target name="test.component"
   description="Test Component creation facility">

    <!-- Test Component creation -->
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/component.jsp"
      outContent="/component.jsp PASSED" failonerror="${failonerror}"/>
  </target>
  
  <target name="test.component01"
   description="Test standard Component replacement">

   <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/component01.jsp"
      outContent="/component01.jsp PASSED" failonerror="${failonerror}"/>
  </target>

  <target name="test.standard"
          description="Test the Standard RenderKit">

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/standard/messages01.jsp"
          golden="${golden.path}/standard/messages01.txt" failonerror="${failonerror}"/>
          
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/standard/component01.jsp"
         golden="${golden.path}/standard/component01.txt" failonerror="${failonerror}"/>
  </target>

  <target name="test.html.taglib"
          description="Test the HTML JSP Tags">
      <echo message="Testing commandButton..."/>
      <tester host="${host}" port="${port}" protocol="${protocol}"
              request="${context.path}/faces/taglib/commandButton_test.jsp"
              golden="${golden.path}/taglib/commandButton_test.txt" failonerror="${failonerror}" ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              recordGolden="${local.golden.path}/taglib/commandButton_test.txt" />

      <echo message="Testing commandLink..."/>
      <tester host="${host}" port="${port}" protocol="${protocol}"
              request="${context.path}/faces/taglib/commandLink_test.jsp"
              golden="${golden.path}/taglib/commandLink_test.txt" failonerror="${failonerror}" ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              recordGolden="${local.golden.path}/taglib/commandLink_test.txt" />
      <tester host="${host}" port="${port}" protocol="${protocol}"
              request="${context.path}/faces/taglib/commandLink_multiform_test.jsp"
              golden="${golden.path}/taglib/commandLink_multiform_test.txt" failonerror="${failonerror}" ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              recordGolden="${local.golden.path}/taglib/commandLink_multiform_test.txt" />
      <tester host="${host}" port="${port}" protocol="${protocol}" 
              request="${context.path}/faces/taglib/attributeTest.jsp" ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              golden="${golden.path}/taglib/attributeTest.txt" failonerror="${failonerror}" />

  </target>

  <target name="test.verbatim"
          description="Test the Verbatim tag">
      <echo message="Testing verbatim..."/>
      <tester host="${host}" port="${port}" protocol="${protocol}"
           request="${context.path}/faces/verbatim_test.jsp"
            golden="${golden.path}/verbatim_test.txt"
       failonerror="${failonerror}"/>
      <tester host="${host}" port="${port}" protocol="${protocol}"
           request="${context.path}/faces/escape_test.jsp"
            golden="${golden.path}/escape_test.txt"
       failonerror="${failonerror}"/>
  </target>


  <target name="test.renderkit"
   description="Test renderkit processing">
   <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/renderkit01.jsp"
      outContent="/renderkit01.jsp PASSED" failonerror="${failonerror}"/>
   <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/renderkit02.jsp"
	golden="${golden.path}/renderkit02A.txt" failonerror="${failonerror}"/>
   <tester host="${host}" port="${port}" protocol="${protocol}"
        request="${context.path}/renderkit03.jsp"
	golden="${golden.path}/renderkit03A.txt" failonerror="${failonerror}"/>
  </target>

  <target name="test.phases"
   description="Test Phase processing with Phase Listener">
   <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/phaseListener01.jsp"
         outContent="/phaseListener01.jsp PASSED" failonerror="${failonerror}"/>
   <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/phaseListener01.jsp?param=foo"
         outContent="/phaseListener01.jsp FAILED" failonerror="${failonerror}"/>
  </target>
  <target name="test.subview"
          description="Test subview tag">

    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/subview01.jsp"
          golden="${golden.path}/subview01.txt" failonerror="${failonerror}"/>
          
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/subview02.jsp"
         golden="${golden.path}/subview02.txt" failonerror="${failonerror}"/>
         
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/subview03.jsp"
         golden="${golden.path}/subview03.txt" failonerror="${failonerror}"/>
         
    <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/subview04.jsp"
         golden="${golden.path}/subview04.txt" failonerror="${failonerror}"/>
         
     <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/subview05.jsp"
         golden="${golden.path}/subview05.txt" failonerror="${failonerror}"/>
         
     <tester host="${host}" port="${port}" protocol="${protocol}"
         request="${context.path}/faces/subview06.jsp"
         golden="${golden.path}/subview06.txt" failonerror="${failonerror}"/>
  </target>

</project>
