<?xml version='1.0' encoding='UTF-8'?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2010 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->

<!-- ********** JSF System Integration Test File ************************** -->


<project name="JSF-RI-Systest-Execute" default="test" basedir=".">


    <!-- =========================== Configuration ============================ -->


    <!-- Load properties in case this script executed directly -->
    <property file="${user.home}/build.properties"/>
    <property file="../../build.properties"/>

    <import file="${jsf.build.home}/common/ant/common.xml"/>

    <!-- SystestClient connection properties -->
    <property name="context.path" value="/jsf-systest"/>

    <!-- SystestClient failure handling properties -->
    <property name="failonerror" value="true"/>
    <!-- Set 'protocol' to a zero length string to use HttpURLConnection -->
    <property name="protocol" value="HTTP/1.0"/>

    <property name="regexp.path" value="${basedir}/web/regexp"/>

    <!-- ======================== Test Execution ============================== -->
    <!-- converter06 impl logic deferred to 2.0 -->
    <!-- DO NOT REORDER test.annotations -->
    <target name="test"
            description="Execute all tests against installed application"
            depends="define.scenario.aware.port,
                test.annotations,
                test.ajax,
                test.composite,
                test.facelets,
                test.init,                
                test.render,
                test.html.taglib,
                test.prefix.security,
                test.config,
                test.interweaving,
                test.listener,
                test.duplicateIds,
                test.viewIdNormalization,
                test.renderkit,
                test.hello,
                test.external,
                test.el,
                test.flash,
                test.event,
                test.resourcelocation,
                test.managed,
                test.message,
                test.converter,
                test.converter01,
                test.converter02,
                test.converter03,
                test.converter04,
                test.converter05,
                test.enum-converter-1,
                test.validator,
                test.validator01,
                test.validator02,
                test.validator03,
                test.valuechange,
                test.component,
                test.component01,
                test.navigation,
                test.implicitnav,
                test.state,
                test.resourceBundleELResolver,
                test.tlvalidator,
                test.standard,
                test.verbatim,
                test.phases,
                test.subview,
                test.methodRef,
                test.jsp,  
                test.jsf2jsp,
                test.path,
                test.valueBindingGet,
                test.misc,
                test.regressions,
                test.view.xml,
                test.projectstage,
                test.http.method.protection"
            />
            <!--
                test.groovy"
            -->
    <!-- Special double converter test that addresses java jre issue outlined here:
         http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/
         Java hangs when converting 2.2250738585072012e-308
         This test should be enabled once the Java jre is patched.

                test.converter07,
    -->

    <target name="test.init">
        <mkdir dir="${impl.test.results.dir}"/>
    </target>
    
    <target name="test.misc">
        <!-- validates fix for issue IMPL-262 - should be 404 not 500 -->
        <jsf.tester request="/faces/thispagedoesnexist.jsp"
            context-path="${context.path}"
            classpath-refid="html.classpath"
            test-results-dir="${impl.test.results.dir}"
            status="404"/>
    </target>

    <target name="test.view.xml">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/view/xml/*TestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>


    <target name="test.duplicateIds"
            description="Test duplicate ID detection">

      <if>
        <bool>
          <or>
            <equals arg1="${container.name}" arg2="tomcat7"/>
            <equals arg1="${container.name}" arg2="glassfishV3"/>
            <equals arg1="${container.name}" arg2="glassfishV3.1"/>
            <equals arg1="${container.name}" arg2="glassfishV3.1_no_cluster"/>
          </or>
        </bool>
        <then>

          <jsf.tester request="/faces/duplicateIds01.jsp"
                       context-path="${context.path}"
                       classpath-refid="html.classpath"
                       test-results-dir="${impl.test.results.dir}"
                       status="500"/> 

          <jsf.tester request="/faces/duplicateIds02.jsp"
                       context-path="${context.path}"
                       classpath-refid="html.classpath"
                       test-results-dir="${impl.test.results.dir}"
                       status="200"/>

          <jsf.tester request="/faces/duplicateIds03.jsp"
                       context-path="${context.path}"
                       classpath-refid="html.classpath"
                       test-results-dir="${impl.test.results.dir}"
                       status="500"/>

          <jsf.tester request="/faces/duplicateIds05.jsp"
                       context-path="${context.path}"
                       classpath-refid="html.classpath"
                       test-results-dir="${impl.test.results.dir}"
                       status="200"/>

          <jsf.tester request="/faces/forEach02.jsp"
                       context-path="${context.path}"
                       classpath-refid="html.classpath"
                       test-results-dir="${impl.test.results.dir}"
                       status="200"/>

          <!-- PENDING: return to running
          <jsf.junit context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}">
              <tests>
                  <fileset dir="${basedir}/build/classes"
                           includes="com/sun/faces/systest/DuplicateIds04TestCase.class"/>
              </tests>
          </jsf.junit>               
          -->
        </then>
      </if>

    </target>
    
    
    <target name="test.viewIdNormalization">
        <!-- request for any page will do -->
        <jsf.tester request="/faces/faces/faces/faces/duplicateIds02.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     status="200"/>
    </target>

    <target name="test.external"
            description="Test ExternalContext implementation issues">

        <!-- Request scope attribute transparency -->
        <jsf.tester request="/faces/external01.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/external01.jsp PASSED.*"/>

        <!-- Session scope attribute transparency -->
        <jsf.tester request="/faces/external02.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/external02.jsp PASSED.*"/>

        <!-- Application scope attribute transparency -->
        <jsf.tester request="/faces/external03.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/external03.jsp PASSED.*"/>

    </target>

    <target name="test.facelets">
        <!-- Tests to verify 955, return a 500, rather than a 404 -->
        <jsf.tester request="/faces/facelets/compositionnotfound.xhtml"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     status="500"/>
        <jsf.tester request="/faces/facelets/decoratenotfound.xhtml"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     status="500"/>
        <jsf.tester request="/faces/facelets/includenotfound.xhtml"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     status="500"/>        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/facelets/*TestCase.class"/> 
            </tests>
        </jsf.junit>
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/viewparameters/ViewParametersTestCase.class,com/sun/faces/systest/dynamic1757/*TestCase.class"/>
            </tests>
        </jsf.junit>  

    </target>

    <target name="test.groovy">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/groovy/*TestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>

    <target name="test.annotations">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/annotation/AnnotatedComponentsTestCase.class"/> 
            </tests>
        </jsf.junit>

        <jsf.tester request="/faces/pre31injection/injectedComponent.xhtml"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*Hello World from env-entry!.*"/>


    </target>

    <target name="test.el">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/el/ELTestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>

    <target name="test.flash">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/Flash*TestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>



    <target name="test.event">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/tags/EventTestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>

    <target name="test.resourcelocation">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/ResourceRelocationTestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>


    <target name="test.hello"
            description="Basic Hello, World Tests">

        <!-- Simple Non-Faces Response -->
        <jsf.tester request="/hello.jsp" status="200"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/hello.jsp PASSED.*"/>

        <!-- Simple Faces Response (Direct) -->
        <jsf.tester request="/faces/hello.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/hello.jsp PASSED.*"/>

        <jsf.tester request="/hello.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/hello.jsp PASSED.*"/>
    </target>


    <target name="test.jsp"
            description="Test JSP Integration">
        
        <jsf.tester request="/faces/positiveTagFile.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     status="200"/>

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/jsptest/ViewTagTestCase.class,
                                   com/sun/faces/jsptest/CommandLinkNoFormTestCase.class,
                                   com/sun/faces/jsptest/FormElTestCase.class,
                                   com/sun/faces/jsptest/MissingActionListenerMethodTestCase.class,
                                   com/sun/faces/jsptest/ConverterTestCase.class,
                                   com/sun/faces/jsptest/IdRefTestCase.class,
                                   com/sun/faces/jsptest/ForEachTestCase.class,
                                   com/sun/faces/jsptest/SetPropertyTestCase.class,
                                   com/sun/faces/jsptest/JspIntegrationTestCase2.class"/>
                               <!--
                                   com/sun/faces/jsptest/PrependIdTestCase.class,
                               -->
            </tests>
        </jsf.junit>       
    </target>

    <target name="test.jsf2jsp" 
            description="Issue 636 test JSF2 features with JSP">

            <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/jsf2jsp/Jsf2JspTestCase.class"
                         />
            </tests>
        </jsf.junit>
    </target>

    <target name="test.path"
            description="Test Path Handling">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/pathtest/*TestCase.class"
                         excludes="com/sun/faces/pathtest/PathTestCase.class"/>
            </tests>
        </jsf.junit>       
    </target>

    <target name="test.methodRef"
            description="Test Method References">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/methodref/*TestCase.class"/>
            </tests>
        </jsf.junit> 
       
        <!-- MethodBinding Test #2 (Superclass Method Calls) -->
        <jsf.tester request="/faces/methodref02.jsp"
                     context-path="${context.path}"
                     classpath-refid="html.classpath"
                     test-results-dir="${impl.test.results.dir}"
                     regexp="(?s).*/methodref02.jsp PASSED.*"/>

    </target>

    <target name="test.prefix.security"
            description="Ensure a prefix mapped FacesServlet doesn't allow access to WEB-INF">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/WEB-INF/test.jsp"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/WEB-INF"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/WEB-INF/"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/META-INF/MANIFEST.MF"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/META-INF"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/META-INF/"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/web-Inf/test.jsp"
              status="404"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/mEtA-InF/MANIFEST.MF"
              status="404"/>
    </target>

    <target name="test.http.method.protection">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/http/*TestCase.class"/> 
            </tests>
        </jsf.junit>

    </target>

    <target name="test.valueBindingGet"
            description="Test ValueBinding.getValue() implementation">

        <!-- ValueBinding Test #1 (Simple Bean Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding01.jsp"
              regexp="(?s).*/valueBinding01.jsp PASSED.*"/>

        <!-- ValueBinding Test #2 (Simple String Property Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding02.jsp"
              regexp="(?s).*/valueBinding02.jsp PASSED.*"/>

        <!-- ValueBinding Test #3 (Simple Integer Property Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding03.jsp"
              regexp="(?s).*/valueBinding03.jsp PASSED.*"/>

        <!-- ValueBinding Test #4 (Simple Boolean Property Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding04.jsp"
              regexp="(?s).*/valueBinding04.jsp PASSED.*"/>

        <!-- ValueBinding Test #5 (Simple Integer Expression Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding05.jsp"
              regexp="(?s).*/valueBinding05.jsp PASSED.*"/>

        <!-- ValueBinding Test #6 (Simple Boolean Expression Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding06.jsp"
              regexp="(?s).*/valueBinding06.jsp PASSED.*"/>

        <!-- ValueBinding Test #7 (Mixed Literal and Expression Getter) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/valueBinding07.jsp"
              regexp="(?s).*/valueBinding07.jsp PASSED.*"/>

    </target>

    <target name="test.config"
            description="Test config loading facility">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/config/*TestCase.class"/>
            </tests>
        </jsf.junit>
    </target>

    <target name="test.listener"
            description="Test listener">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/listener.jsp"
              status="200"/>
    </target>

    <target name="test.managed"
            description="Test managed bean creation facility">

        <!-- Managed Bean Create #1 (No Property Setters) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/managed01.jsp"
              regexp="(?s).*/managed01.jsp PASSED.*"/>

        <!-- Managed Bean Create #2 (Primitive Property Setters) -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/managed02.jsp"
              regexp="(?s).*/managed02.jsp PASSED.*"/>
        <if>
          <bool>
            <or>
              <equals arg1="${container.name}" arg2="tomcat7"/>
              <equals arg1="${container.name}" arg2="glassfishV3"/>
              <equals arg1="${container.name}" arg2="glassfishV3.1"/>
              <equals arg1="${container.name}" arg2="glassfishV3.1_no_cluster"/>
            </or>
          </bool>
          <then>

            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                  context-path="${context.path}" request="/faces/managed03.jsp"
                  status="500"/>
            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                  context-path="${context.path}" request="/faces/managed07.jsp"
                  status="500"/>

          </then>
        </if>

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/managed/*TestCase.class"/>
            </tests>
        </jsf.junit>

        <if>
          <bool>
            <not>
                <or>
                    <equals arg1="${container.name}" arg2="tomcat6"/>
                    <equals arg1="${container.name}" arg2="tomcat7"/>
                </or>
            </not>
          </bool>
          <then>
            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                context-path="${context.path}" request="/faces/resourceInjection01.jsp"
                regexp="(?s).*Hello World from env-entry!Hello World from env-entry!.*"/>
          </then>
        </if>


         <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/eagerbean.jsp"
              status="200"/>
        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/lifecycle/*TestCase.class"/>
            </tests>
        </jsf.junit>         
    </target>


    <target name="test.message"
            description="Test message resources processing">

        <!--
            These tests aren't run due to their design.  They
            shouldn't be changing the ViewRoot while the view
            is being built.
        -->
        <!-- Standard API Message Resources -->
        <!--
        <jsf.tester
              ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              context-path="${context.path}" request="/faces/message01.jsp"
              outContent="/message01.jsp PASSED"/>-->

        <!-- Standard IMPL Message Resources -->
        <!--
        <jsf.tester
              ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              context-path="${context.path}" request="/faces/message02.jsp"
              outContent="/message02.jsp PASSED"/>-->

        <!-- Single Message Resources Element -->
        <!--<jsf.tester
              ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              context-path="${context.path}" request="/faces/message03.jsp"
               outContent="/message03.jsp PASSED"/>-->

        <!-- Double Message Resources Element -->
        <!--<jsf.tester
              ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              context-path="${context.path}" request="/faces/message04.jsp"
              outContent="/message04.jsp PASSED"/>-->

    </target>

    <target name="test.navigation"
            description="Test navigation handler rule processing">
        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/*NavigationTestCase.class"/>
            </tests>
        </jsf.junit>         
        

    </target>
    
      <target name="test.formomitted"
            description="Test missing form">
        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/FormOmittedTestCase.class"/>
            </tests>
        </jsf.junit>         
        

    </target>

    <target name="test.state"
            description="Test new state manager">
        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/state/*TestCase.class"/>
            </tests>
        </jsf.junit>  

    </target>

    <target name="test.tlvalidator"
            description="Test the RI Tag Library Validator">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestHtmlBasicValidatorFail.jsp"
              status="500"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/TestHtmlBasicValidatorFail.jsp"
              status="500"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestHtmlBasicValidatorSucceed.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestCoreValidatorFail.jsp"
              status="500"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/TestCoreValidatorFail.jsp"
              status="500"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestCoreValidatorSucceed.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestCoreValidatorIfFail.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestCoreValidatorIfSucceed.jsp"
              status="200"/>
        <!-- JSTL forEach integration indefinately inoperable.
            <jsf.tester 
                 context-path="${context.path}" request="/faces/TestCoreValidatorIteratorFail.jsp"
              status="500"/>
        
            <jsf.tester 
                 context-path="${context.path}" request="/faces/TestCoreValidatorIteratorSucceed.jsp"
              status="200"/>
        -->
        <if>
          <bool>
            <or>
              <equals arg1="${container.name}" arg2="tomcat7"/>
              <equals arg1="${container.name}" arg2="glassfishV3"/>
              <equals arg1="${container.name}" arg2="glassfishV3.1"/>
              <equals arg1="${container.name}" arg2="glassfishV3.1_no_cluster"/>
            </or>
          </bool>
          <then>

            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                  context-path="${context.path}" request="/faces/TestElValidatorActionRefFail.jsp"
                  status="500"/>
            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                  context-path="${context.path}" request="/faces/TestElValidatorComponentFail.jsp"
                  status="500"/>

            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                  context-path="${context.path}" request="/faces/TestElValidatorIdFail.jsp"
                  status="500"/>

            <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
                  context-path="${context.path}" request="/faces/TestElValidatorValueRefFail.jsp"
                  status="500"/>

          </then>
        </if>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestElValidatorActionRefSucceed.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestElValidatorComponentSucceed.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestElValidatorIdSucceed.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestElValidatorValueRefSucceed.jsp"
              status="200"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/jsp/tlvTest01.jsp"
              status="200"/>

    </target>

    <target name="test.valuechange"
            description="Test ValueChangeListeners">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/jsptest/ValueChangeListenerTestCase.class"/>
            </tests>
        </jsf.junit>
    </target>

    <target name="test.converter"
            description="Test Converter creation facility">

        <!-- Test Converter creation -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter.jsp"
              regexp="(?s).*/converter.jsp PASSED.*"/>
    </target>

    <target name="test.converter01"
            description="Test standard Converter replacement">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter01.jsp"
              regexp="(?s).*/converter01.jsp PASSED.*"/>
    </target>

    <target name="test.converter02"
            description="Test passing Converter instances to component tag">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter02.jsp"
              regexpFile="${regexp.path}/converter02.txt"/>
    </target>

    <target name="test.converter03"
            description="Test converter">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter03.jsp"
              status="200"/>
    </target>

    <target name="test.converter04"
            description="Test converter">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter04.jsp"
              status="200"/>
    </target>

    <target name="test.converter05">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/converter/*TestCase.class"/> 
            </tests>
        </jsf.junit>

    </target>

    <target name="test.converter06">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter06.jsp"
              regexpFile="${regexp.path}/converter06.txt"/>
    </target>

    <!-- Special double converter test that addresses java jre issue outlined here:
         http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/
         Java hangs when converting 2.2250738585072012e-308
         This test should be enabled once the Java jre is patched.
      
    <target name="test.converter07">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/converter07.jsp"
              regexpFile="${regexp.path}/converter07.txt"/>
    </target>
    -->

    <target name="test.enum-converter-1"
            description="Test Enum Converter ">
                                                                                                                          
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/enum-converter-1.jsp"
              regexp="(?s).*/enum-converter-1.jsp PASSED.*"/>
    </target>

    <target name="test.validator"
            description="Test Validator creation facility">

        <!-- Test validator creation -->
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/validator.jsp"
              regexp="(?s).*/validator.jsp PASSED.*"/>

            <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/validator/*TestCase.class"/>
            </tests>
        </jsf.junit>

    </target>

    <target name="test.validator01"
            description="Test standard Validator replacement">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/validator01.jsp"
              regexp="(?s).*/validator01.jsp PASSED.*"/>
    </target>

    <target name="test.validator02"
            description="Test validator">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/validator02.jsp"
              status="200"/>
    </target>

    <target name="test.validator03"
            description="Test validator">


        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/validator03.jsp"
              status="200"/>
    </target>

    <target name="test.ajax"
            description="Test Ajax Functionality">

            <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/ajax/*TestCase.class"                         />
            </tests>
        </jsf.junit>
    </target>

    <target name="test.render"
            description="Test Rendering Functionality">

            <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/render/*TestCase.class" />
                         <!-- excludes="com/sun/faces/render/CommandButtonTestCase.class" /> -->
<!-- 139-StateSaving -->
            </tests>
        </jsf.junit>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/render/outputLinkSpaces.jsp"
              regexp="(?s).*text%20before%20query%20string.*?text%20after=query%20string.*"/>

    </target>

    <target name="test.component"
            description="Test Component creation facility">

        <!-- Test Component creation -->

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/component.jsp"
              regexp="(?s).*/component.jsp PASSED.*"/>
        
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"             
              context-path="${context.path}" request="/faces/ProcessSaveRestoreStateTest.jsp"
              status="200"/>
        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/ComponentMiscTestCase.class"/>
            </tests>
        </jsf.junit>
        
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/component/*TestCase.class,com/sun/faces/event/DynamicAddTestCase.class"
                         excludes="com/sun/faces/component/GetClientIdELTestCase.class"
                         />
<!-- 139-StateSaving edburns remove excludes -->
            </tests>
        </jsf.junit>
        
    </target>

    <target name="test.component01"
            description="Test standard Component replacement">

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/component01.jsp"
              regexp="(?s).*/component01.jsp PASSED.*"/>
    </target>

    <target name="test.composite"
            description="Test composite components">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/composite/*TestCase.class"/>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/composite/behavior/*TestCase.class"/>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/composite/*TestCase.class"/>

            </tests>
        </jsf.junit>

        <if>
            <bool>
                <or>
                    <equals arg1="${container.name}" arg2="glassfishV3"/>
                    <equals arg1="${container.name}" arg2="glassfishV3.1"/>
                    <equals arg1="${container.name}" arg2="glassfishV3.1_no_cluster"/>
                </or>
            </bool>
            <then>
		<jsf.junit context-path="${context.path}"
			   classpath-refid="html.classpath"
			   test-results-dir="${impl.test.results.dir}">
		    <tests>
			<fileset dir="${basedir}/build/classes"
				 includes="com/sun/faces/composite/*TestCaseWithEE6Dependencies.class"/>
		    </tests>
		</jsf.junit>  
            </then>
        </if>

    </target>


    <target name="test.standard"
            description="Test the Standard RenderKit">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" 
              request="/faces/standard/messages01.jsp"
              regexpFile="${regexp.path}/standard/messages01.txt"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/standard/messages02.jsp"
              regexpFile="${regexp.path}/standard/messages02.txt"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              regexpFile="${regexp.path}/standard/component01.txt"
              context-path="${context.path}" request="/faces/standard/component01.jsp"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              regexpFile="${regexp.path}/standard/autocomplete.txt"
              context-path="${context.path}" request="/faces/standard/autocomplete.jsp"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
            regexpFile="${regexp.path}/standard/dtablecolumnclasses.txt"
            context-path="${context.path}" request="/faces/standard/dtablecolumnclasses.jsp"/>
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/PGridColumnClassesTestCase.class,
                                   com/sun/faces/systest/SelectOneManyEnumTestCase.class,
                                   com/sun/faces/systest/SelectManyCollectionTestCase.class,
                                   com/sun/faces/systest/DataTableTestCase.class,
                                   com/sun/faces/systest/TestOutputTargets.class,
                                   com/sun/faces/systest/LinkTypeAttributeTestCase.class,
                                   com/sun/faces/systest/CheckboxTestCase.class,
                                   com/sun/faces/systest/SelectOneHideNoSelectItemGroupTestCase.class,
                                   com/sun/faces/systest/SelectOneHideNoSelectionTestCase.class,
                                   com/sun/faces/systest/ForEachFaceletsTestCase.class,
                                   com/sun/faces/systest/SelectOneValueExpressionHideNoSelectionTestCase.class"/>
            </tests>
        </jsf.junit>  
    </target>

    <target name="test.html.taglib"
            description="Test the HTML JSP Tags">
        <echo message="Testing commandButton..."/>

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/htmltaglib/*TestCase.class"/>
            </tests>
        </jsf.junit>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" 
              request="/faces/standard/selectmany02.jsp"
              regexpFile="${regexp.path}/standard/selectmany02.txt"/>

<!--  
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              context-path="${context.path}" request="/faces/standard/selectmany03.jsp"
              recordGolden="${local.golden.path}/standard/selectmany03.txt"
              golden="${golden.path}/standard/selectmany03.txt"/>              
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              ignoreIfContains="${ignore.path}/ignoreIfContains.txt"
              context-path="${context.path}" request="/faces/standard/selectmany04.jsp"
              recordGolden="${local.golden.path}/standard/selectmany04.txt"
              golden="${golden.path}/standard/selectmany04.txt"/>
-->
    </target>

    <target name="test.verbatim"
            description="Test the Verbatim tag">
        <echo message="Testing verbatim..."/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" 
              request="/faces/verbatim_test.jsp"
              regexpFile="${regexp.path}/verbatim_test.txt"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" 
              request="/faces/escape_test.jsp"
              regexpFile="${regexp.path}/escape_test.txt" />
    </target>


    <target name="test.renderkit"
            description="Test renderkit processing">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/renderkit01.jsp"
              regexp="(?s).*/renderkit01.jsp PASSED.*"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/renderkit02.jsp"
              regexp="(?s).*/renderkit02.jsp PASSED.*"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/renderkit03.jsp"
              regexp="(?s).*This IS A SIMPLE LABEL FROM THE CUSTOM RENDERER.*/renderkit03.jsp PASSED.*"/>
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/RenderKitsTestCase.class"/>
            </tests>
        </jsf.junit>        
    </target>

    <target name="test.resourceBundleELResolver"
            description="Test ResourceBundleELResolver ">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/resourceBundle01.jsp"
              regexp="(?s).*Expression\s*in\s*raw\s*JSP\s*page\s*is\s*Value\s*From\s*ResourceBundle\..*"/>

        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" 
              request="/faces/resourceBundle02.jsp"
              regexp="(?s).*Value\s*from\s*Faces\s*component\s*is\s*Value\s*From\s*ResourceBundle\..*"/>
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" 
              request="/faces/resourceBundle03.jsp"
              regexp="(?s).*Values\s*from\s*Components:.*resourceBundle01:.*Value\s*From\s*ResourceBundle.*non\s*existing\s*resourceBundle:\s*.br/.\s*resourceBundle03:\s*Value\s*from\s*ResourceBundle03.*"/>
        <!-- RETURN TO RUNNING
            <jsf.tester 
                 context-path="${context.path}" request="/faces/resourceBundle04.jsp"
                 recordGolden="${local.golden.path}/resourceBundle04.txt"
                 golden="${golden.path}/resourceBundle04.txt"/>
        -->
    </target>


    <target name="test.phases"
            description="Test Phase processing with Phase Listener">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/phaseListener01.jsp"
              regexp="(?s).*/phaseListener01.jsp PASSED.*"/>
        <!-- PENDING investigate the need for this
  <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}" 
        context-path="${context.path}" request="/faces/phaseListener01.jsp?param=foo"
        outContent="/phaseListener01.jsp FAILED"/>
        -->
    </target>
    <target name="test.subview"
            description="Test subview tag">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/subview/*TestCase.class"/> 
            </tests>
        </jsf.junit>

    </target>

    <target name="test.interweaving"
            description="Test interweaving">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/interweaving/*TestCase.class"/> 
            </tests>
        </jsf.junit>

    </target>
    
    <target name="test.regressions">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
            context-path="${context.path}" request="/faces/regression/AreaTextRowsAttrTest.jsp"
            regexpFile="${regexp.path}/regression/AreaTextRowsAttrTest.txt"/>
       <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
            context-path="${context.path}" request="/faces/regression/SelectOneManySizeAttrTest.jsp"
            regexpFile="${regexp.path}/regression/SelectOneManySizeAttrTest.txt" />
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/jsp/regressions/*TestCase.class"/> 
            </tests>
        </jsf.junit>

    </target>

    <target name="test.implicitnav">
        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/implicitnav/*TestCase.class"/> 
            </tests>
        </jsf.junit>

    </target>

    <target name="test.projectstage">

        <jsf.junit context-path="${context.path}"
                   classpath-refid="html.classpath"
                   test-results-dir="${impl.test.results.dir}">
            <tests>
                <fileset dir="${basedir}/build/classes"
                         includes="com/sun/faces/systest/projectstage/*TestCase.class"/> 
            </tests>
        </jsf.junit>
    </target>

    <target name="passthru" depends="define.scenario.aware.port">
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/faces/TestCoreValidatorFail.jsp"
              status="500"/>
 
        <jsf.tester classpath-refid="html.classpath" test-results-dir="${impl.test.results.dir}"
              context-path="${context.path}" request="/TestCoreValidatorFail.jsp"
              status="500"/>


    </target>


</project>
