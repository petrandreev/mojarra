<?xml version='1.0' encoding='UTF-8'?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License). You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the License at
 https://javaserverfaces.dev.java.net/CDDL.html or
 legal/CDDLv1.0.txt. 
 See the License for the specific language governing
 permission and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at legal/CDDLv1.0.txt.    
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 your own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 [Name of File] [ver.__] [Date]
 
 Copyright 2005 Sun Microsystems Inc. All Rights Reserved
-->


<!-- ************ JSF build file ******************************************* -->

<project name="JSF-RI-Systest" default="main" basedir=".">    

    <property name="Name" value="JavaServer Faces RI System Test"/>   

    <!-- ************ Per user local properties **************************** -->
    <property file="${user.home}/build.properties"/>    
    <property file="../../build.properties"/>
    
    <!-- Deployment handling import -->  
    <import file="${jsf.build.home}/common/ant/common.xml"/>


    <!-- ************ Where are we building into? ************************** -->

    <property name="test.suite.name" value="jsf-systest"/>  

    <!-- The base directory for compilation targets -->
    <property name="build.dir" value="${basedir}/build"/>
    <property name="dist.dir" value="${basedir}/dist"/>

    <!-- The base directory for system test sources -->
    <property name="source.dir" value="${basedir}/src"/>   

    <!-- The base directory for static web files -->
    <property name="web.dir" value="${basedir}/web"/>


    <!-- Context Path of the integration test web-app -->
    <property name="context.path" value="/${test.suite.name}"/>

    <path id="systest.compile.classpath">
        <pathelement path="${jsf-api.jar}"/>
        <pathelement path="${jsf-impl.jar}"/>
        <path refid="jsf.test.jar.classpath"/>
        <path refid="compile.classpath"/>
        <path refid="htmlunit.compile.classpath"/> 
    </path>
           
    <!-- ************ Executable Targets ************************************** -->


    <target name="init"
            description="Initialize and evaluate conditionals">
        <echo message="-------- ${test.suite.name} ${impl.version} --------"/>
    </target>
    
    
    <target name="build.war" depends="compile">
        <jsf.war basedir="${build.dir}"
                 archive-name="jsf-systest"
                 webxml="${web.dir}/WEB-INF/web.xml">
            <archive-elements>
                <zipfileset dir="${source.dir}"
                            includes="**/*.properties,**/*.xml"
                            prefix="WEB-INF/classes"/>
                <zipfileset dir="${build.dir}/classes"
                            prefix="WEB-INF/classes"/>
                <zipfileset dir="${web.dir}"/>
            </archive-elements>
        </jsf.war>
    </target>

    <target name="compile" depends=""
            description="Just compile the classes">
        <mkdir dir="${build.dir}/classes"/>
        <!-- Run javac through everything -->
        <jsf.javac srcdir="${impl.dir}/test"
                   destdir="${build.dir}/classes"
                   includes="**/TestingUtil**">
            <classpath>
                <path refid="systest.compile.classpath"/>                   
            </classpath>              
        </jsf.javac>
        <jsf.javac srcdir="${source.dir}"
                   destdir="${build.dir}/classes">
            <classpath>
                <path refid="systest.compile.classpath"/>                   
            </classpath>
        </jsf.javac>                         
    </target>


    <target name="clean"
            description="Clean build and distribution directories">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>


    <target name="main" depends="init,compile"/>


    <!-- ********** Test Execution Targets ************************************ -->


    <target name="test" depends="init,build.war"
            description="Execute all tests against installed /jsf-systest application">
       
        <antcall target="undeploy"/>
        <antcall target="deploy"/>
        <ant antfile="build-tests.xml" target="test"/>
        <antcall target="undeploy"/>
        
    </target>  
    
    <target name="test.with.nodeploy"
            description="The same as 'test', but with no deployment">
        <ant antfile="build-tests.xml" target="test"/>    
    </target>

    <target name="deploy" 
            description="Deploy the jsf-systest application">
        <deploy.artifact artifact="${build.dir}/jsf-systest.war"
                appName="jsf-systest"/>
    </target>
    
    <target name="undeploy" 
            description="Undeploy the jsf-systest application">
        <undeploy.artifact artifact="${build.dir}/jsf-systest.war"
                  appName="jsf-systest"/>
    </target>
        
</project>
