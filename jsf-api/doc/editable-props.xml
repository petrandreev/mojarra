<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2004 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<!-- ========== EditableValueHolder Properties ============================= -->


<!-- template

      <property>
        <description>
        </description>
        <display-name></display-name>
        <icon></icon>
        <property-name></property-name>
        <property-class>java.lang.String</property-class>
      </property>

-->
<root>
    <property>
        <description>
          Flag indicating whether the "localValue" property
          of this component has been set.  This property is
          reset automatically when the "value" propertyis set.
        </description>
        <display-name>Local Value Set</display-name>
        <icon></icon>
        <property-name>localValueSet</property-name>
        <property-class>boolean</property-class>
        <property-extension>
            <tag-attribute>false</tag-attribute>
        </property-extension>
    </property>

    <property>
        <description>
          Flag indicating that the user is required to provide a submitted
          value for this input component.
        </description>
        <display-name>Required Flag</display-name>
        <icon></icon>
        <property-name>required</property-name>
        <property-class>boolean</property-class>
        <property-extension>
            <value-expression-enabled>true</value-expression-enabled>
        </property-extension>
    </property>

    <property>
        <description>
          A ValueExpression enabled attribute that, if present, will be
          used as the text of the validation message for the "required"
          facility, if the "required" facility is used.
        </description>
        <display-name>Required Message</display-name>
        <icon></icon>
        <property-name>requiredMessage</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <value-expression-enabled>true</value-expression-enabled>
        </property-extension>
    </property>

    <property>
        <description>
          A ValueExpression enabled attribute that, if present, will be
          used as the text of the converter message, replacing any message
          that comes from the converter.
        </description>
        <display-name>Converter Message</display-name>
        <icon></icon>
        <property-name>converterMessage</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <value-expression-enabled>true</value-expression-enabled>
        </property-extension>
    </property>

    <property>
        <description>
          A ValueExpression enabled attribute that, if present, will be
          used as the text of the validator message, replacing any
          message that comes from the validator.
        </description>
        <display-name>Validator Message</display-name>
        <icon></icon>
        <property-name>validatorMessage</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <value-expression-enabled>true</value-expression-enabled>
        </property-extension>
    </property>

    <property>
        <description>
          The value submitted for this input component by the user, prior to
          any required conversion or validation.
        </description>
        <display-name>Submitted Value</display-name>
        <icon></icon>
        <property-name>submittedValue</property-name>
        <property-class>java.lang.Object</property-class>
        <property-extension>
            <tag-attribute>false</tag-attribute>
        </property-extension>
    </property>

    <property>
        <description>
          MethodBinding representing a validator method that will be called
          during Process Validations to perform correctness checks on the
          value of this component.  The expression must evaluate to a public
          method that takes FacesContext, UIComponent, and Object parameters,
          with a return type of void.
        </description>
        <display-name>Validator</display-name>
        <icon></icon>
        <property-name>validator</property-name>
        <property-class>javax.el.MethodExpression</property-class>
        <property-extension>
            <method-signature>
                void validate(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)
            </method-signature>
        </property-extension>
    </property>

    <property>
        <description>
          MethodBinding representing a value change listener method that will be
          notified when a new value has been set for this input component.  The
          expression must evaluate to a public method that takes a
          ValueChangeEvent parameter, with a return type of void.
        </description>
        <display-name>Value Change Listener</display-name>
        <icon></icon>
        <property-name>valueChangeListener</property-name>
        <property-class>javax.el.MethodExpression</property-class>
        <property-extension>
            <method-signature>
                void valueChange(javax.faces.event.ValueChangeEvent)
            </method-signature>
        </property-extension>
    </property>

    <property>
        <description>
          Flag indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
        </description>
        <display-name>Immediate Action</display-name>
        <icon></icon>
        <property-name>immediate</property-name>
        <property-class>boolean</property-class>
        <property-extension>
            <value-expression-enabled>true</value-expression-enabled>
        </property-extension>
    </property>

    <property>
        <description>
          Flag indicating whether or not any required conversion or validation
          on this component value has been performed successfully.
        </description>
        <display-name>Valid Flag</display-name>
        <icon></icon>
        <property-name>valid</property-name>
        <property-class>valid</property-class>
        <property-extension>
            <tag-attribute>false</tag-attribute>
        </property-extension>
    </property>
</root>
