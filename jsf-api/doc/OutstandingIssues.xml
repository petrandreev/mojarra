<?xml version="1.0"?>

<!--
 Copyright 2003 Sun Microsystems, Inc. All rights reserved.
 SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->


<!-- Informal DTD for contents of "issue" subelements:

  id                Unique issue identifier
  originator        EG member (or public comment) that originated the issue
  summary           Summary one-line description
  description       Full (multiline) description of the issue
  resolution        Full (multiline) description of resolution
  status            OPEN, CLOSED, LATER
  date              Date on which status was last changed

-->

<issues>


<issue>
  <id>ObjectManager-1</id>
  <originator></originator>
  <summary>JSFA14 in Scarab</summary>
  <description>

See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA14">JSFA14</a> in Scarab.

  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>OutputMethods-2</id>
  <originator>Craig</originator>
  <summary>JSFA18 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA18">JSFA18</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>Listeners-3</id>
  <originator>Craig</originator>
  <summary>See JSFA7 in Scarab</summary>
  <description>
  </description>
  <resolution>
    <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA7">JSFA7</a> in Scarab.
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>NamedChild-4</id> <originator>Adam</originator> <summary>moved to
  <a
  href="http://tokyo.betaversion.org:8080/issues/id/JSFA1">JSFA1</a>
  in Scarab.</summary>
  <description>
moved to
  <a
  href="http://tokyo.betaversion.org:8080/issues/id/JSFA1">JSFA1</a>
  in scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>StateSaving-5</id>
  <originator>Adam</originator>
  <summary>JSFA22 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA22">JSFA22</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>04 Sep 2002</status-date>
  <priority>1</priority>
  <effort>Medium</effort>
</issue>


<issue>
  <id>ServletDependencies-6</id>
  <originator>Adam</originator>
  <summary>JSFA11 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA11">JSFA11</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>JspDependencies-7</id>
  <originator>Hans</originator>
  <summary>JSFA23 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA23">JSFA23</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>ELDependencies-8</id>
  <originator>Hans</originator>
  <summary>JSFA24</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA24">JSFA24</a> in Scarab.
  </description>
 <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>TreeCreation-9</id>
  <originator>Jeff</originator>
  <summary>See JSFA8 in Scarab.</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA8">JSFA8</a> in Scarab
  </description>
  <resolution>
    
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>ComponentNamespace-10</id>
  <originator>Jeff</originator>
  <summary>JSFA2 in Scarab</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA2">JSFA2</a> in Scarab.
  </description>
  <resolution>
    <p><em>02 Oct 2002</em> - Consolidate [ComponentIdentifiers-27]
       into this item.</p>
  </resolution>
  <status>OPEN</status>
  <status-date>04 Sep 2002</status-date>
  <priority>1</priority>
  <effort>Small</effort>
</issue>


<issue>
  <id>ApplicationHandler-11</id>
  <originator>Public</originator>
  <summary>JSFA10 in Scarab</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA10">JSFA10</a> in Scarab.
  </description>
  <resolution>
    
  </resolution>
  <status></status>
  <status-date> Sep 2002</status-date>
  <priority>1</priority>
  <effort>Small</effort>
</issue>


<issue>
  <id>ModelReferences-12</id>
  <originator>Public</originator>
  <summary>JSFA25 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA25">JSFA25</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>XmlModel-13</id>
  <originator>Public</originator>
  <summary>JSFA26 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA26">JSFA26</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>CommandHyperlink-14</id>
  <originator>RI Team</originator>
  <summary>JSFA27 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA27">JSFA27</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>UserAgent-15</id>
  <originator>Craig</originator>
  <summary>JSFA28 in Scarab</summary>
  <description>
See <a href=""></a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>DataGrid-16</id>
  <originator>Jeff</originator>
  <summary>JSFA29 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA29">JSFA29</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>NonJSPRendering-17</id>
  <originator>Hans</originator>
  <summary>JSFA30 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA30">JSFA30</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>TreeClass-18</id>
  <originator>EG</originator>
  <summary>JSFA31 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA31">JSFA31</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>

<issue>
  <id>EventTypes-19</id>
  <originator>EG</originator>
  <summary>See JSFA7 in Scarab</summary>
  <description>
  </description>
  <resolution>
    <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA7">JSFA7</a> in Scarab.
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>UIParameter-20</id>
  <originator>EG</originator>
  <summary>JSFA20 in Scarab</summary>
  <description>
    <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA20">JSFA20</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>UIComponentBase-21</id>
  <originator>EG</originator>
  <summary>See JSFA32 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA32">JSFA32</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>OASIS-22</id>
  <originator>Kris &amp; Bart</originator>
  <summary>JSFA33 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA33">JSFA33</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>PortletTerminology-23</id>
  <originator>Kris &amp; Bart</originator>
  <summary>JSFA34 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA34">JSFA34</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>FacesServlet-24</id>
  <originator>Kris &amp; Bart</originator>
  <summary>JSFA35 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA35">JSFA35</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>LookAndFeel-25</id>
  <originator>Kris &amp; Bart</originator>
  <summary>JSFA36 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA36">JSFA36</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>ConfigFiles-26</id>
  <originator>Kris &amp; Bart</originator>
  <summary>JSFA37 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA37">JSFA37</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>ComponentIdentifiers-27</id>
  <originator>Joe</originator>
  <summary>JSFA28 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA28">JSFA28</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>VisibleProperty-28</id>
  <originator>Jeff</originator>
  <summary>JSFA6 in Scarab</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA6">JSFA6</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>Converters-29</id>
  <originator>EG</originator>
  <summary>JSFA19 in Scarab</summary>
  <description>
    Now tracked at <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA19">JSFA19</a> at Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>OnLoad-30</id>
  <originator>Hans</originator>
  <summary>JSFA39 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA39">JSFA39</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>JavaScript-31</id>
  <originator>Hans</originator>
  <summary>JSFA40 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA40">JSFA40</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>InitialTree-32</id>
  <originator>Hans</originator>
  <summary>JSFA41 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA41">JSFA41</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>HandlersModifyTree-33</id>
  <originator>Hans</originator>
  <summary>See JSFA7 in Scarab</summary>
  <description>
  </description>
  <resolution>
    <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA7">JSFA7</a> in Scarab.
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>HandlersSelectTree-34</id>
  <originator>Hans</originator>
  <summary>See JSFA7 in Scarab</summary>
  <description>
  </description>
  <resolution>
    <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA7">JSFA7</a> in Scarab.
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>InitialRequestURLs-35</id>
  <originator>Hans</originator>
  <summary>JSFA42 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA42">JSFA42</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>ComponentTreeParent-36</id>
  <originator>Adam</originator>
  <summary>JSFA43 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA43">JSFA43</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>RequiredValidator-37</id>
  <originator>Hans</originator>
  <summary>JSFA44 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA44">JSFA44</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>StandardComponentEvents-38</id>
  <originator>Hans</originator>
  <summary>See JSFA7 in Scarab</summary>
  <description>
  </description>
  <resolution>
    <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA7">JSFA7</a> in Scarab.
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>EventProcessingPhases-39</id>
  <originator>Hans</originator>
  <summary>JSFA45 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA45">JSFA45</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>UntypedStrings-40</id>
  <originator>Hans</originator>
  <summary>JSFA46 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA46">JSFA46</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>DecodeEncode-41</id>
  <originator>EG</originator>
  <summary>JSFA47 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA47">JSFA47</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>ValidatorsAPI-42</id>
  <originator>Adam</originator>
  <summary>JSFA51 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA51">JSFA51</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>TraversalOrder-43</id>
  <originator>Adam</originator>
  <summary>Moved to JSFA5 in Scarab</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA5">JSFA5</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>ValidatorParams-44</id>
  <originator>Hans</originator>
  <summary>Should we set validation properties on the validator instance
           instead of on the component</summary>
  <description>
    <p>I suggested a while ago that the validation arguments should be
    properties of the validator instead of being handled as untyped
    attributes on the component, and got a lot of support from Adam,
    Jeff, and Craig.  It greatly simplifies both the JSP and the
    non-JSP cases.</p>

  </description>
  <resolution>
    <p><em>12 Sep 2002</em> - Partially implemented in 0902 draft, but
    spec needs updating (esp. 3.5.2.x and 3.1.7 example).</p>
    <p><em>02 Oct 2002</em> - Spec updates were completed for 0920 draft.</p>
  </resolution>
  <status>CLOSED</status>
  <status-date>02 Oct 2002</status-date>
  <priority>5</priority>
  <effort></effort>
</issue>


<issue>
  <id>MultiRequest-45</id>
  <originator>Bart &amp; Kris</originator>
  <summary>What about rendering that takes more than one HTTP request?</summary>
  <description>
    <p>One cannot assume that rendering <em>one</em> complete response
    view is completed in <em>one</em> HTTP request/response cycle.
    RenderKits may contain render strategies that take more than one cycle
    to complete the response view rendering.</p>

    <p>For more background, and sample scenarios, see the EG mailing list
    message from Kris on 09/13/2002 entitled "Request Processing Lifecycle
    Issue."</p>

    <p>Craig:  Might become a JSF 1.1 issue.</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>NonVisual-46</id>
  <originator>Bart &amp; Kris</originator>
  <summary>JSFA49 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA49">JSFA49</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>ValidatorCombos-47</id>
  <originator>Hans</originator>
  <summary>Is an AND-based validation model sufficient?</summary>
  <description>
    <p>Is the AND-based validation model sufficient, or do we need to
    support a more sophisticated model where both AND and OR relations
    between validators can be defined?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>GenericAttributes-48</id>
  <originator>Hans</originator>
  <summary>Can we eliminate use of generic component attributes?</summary>
  <description>
    <p>Currently, a component is associated with a RendererType and the
    JSF implementation finds an instance of this type when needed.  The
    renderer may then use generic attributes of the component to adjust
    its behavior.  If we implement <code>[ValidatorParams-44]</code>, this
    is the last specific use of Generic Attributes defined by the spec (the
    spec says they can also be used for application-specific, general
    purpose attributes).</p>

    <p>Would we lose anything by handling renderers the same as we
    handle Validators (as per [ValidatorParams-44]), i.e. associate a
    specific Renderer <em>instance</em> with the component instead of
    a type?  It would make the model more consistent, and probably provide
    the same simplifications as [ValidatorParams-44]).  I assume that an
    argument against it is that it makes it impossible (or at least harder)
    to switch from one RenderKit to another for an existing tree, but how
    useful is that really?</p>

    <p>(<em>Spec Lead Note - one implication to consider is that Renderer
    instances would need to be Serializable, or some other mechanism for
    saving and restoring them would need to be provided.</em>)</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>AbstractClassNames-49</id>
  <originator>Hans</originator>
  <summary>JSFA50 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA50">JSFA50</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>NonPublicClasses-50</id>
  <originator>CTS</originator>
  <summary>Non-Public Classes in jsf-api</summary>
  <description>
    <p>The current <code>jsf-api</code> includes a couple of non-public
    base classes (like <code>ValidatorBase</code>) to assist in the
    implementation of some concrete classes that are part of the API.
    The design intent was that this was just an implementation choice
    made for this particular version of the API classes.
    The existence of such classes causes problems in the developing
    signature tests that validate the spec compliance of a particular
    version of the API classes.  We need to make such classes public,
    eliminate them, or perhaps remove the concrete classes from the
    API somehow.</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>1</priority>
  <effort>Medium</effort>
</issue>


<issue>
  <id>MessageResources-51</id>
  <originator>Hans</originator>
  <summary>Can we remove MessageResources/MessageResourcesFactory</summary>
  <description>
    <p>Do we really need MessageResources/MessageResourcesFactory?  Does
    it offer significant features over what the regular ResourceBundle
    class offers (I can't see any)_?  For the FACES_API_MESSAGES and
    FACES_IMPL_MESSAGES resources, we could instead require JSF implementations
    to make ResourceBundles with javax.faces.* names available.</p>

    <p><em>(Craig - eliminating these would also assist in interoperating
    with JSTL's i18n classes, which already use resource bundles)</em></p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>Lifecycle-52</id>
  <originator>Hans</originator>
  <summary>Do we need to support additional phases, or have Lifecycle at all?</summary>
  <description>
    <p>Do we really have strong use-cases for supporting additional phases?
    It seems to complicate things and a feature that may impact the
    portability of components.</p>

    <p>Additional note from Joe:  Should we allow Phase.execute() to return
    any phase identifier value, instead of just symbolic constants for the
    known cases?</p>

    <p><em>(Craig - additionally, if we relax the rules to allow a JSF
    implementation to simply call the standard Phase implementations in the
    right order, and obey the return value appropriately, we might not
    need Lifecycle/LifecycleFactory at all.)</em></p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>BackButton-53</id>
  <originator>Joe</originator>
  <summary>Dealing with the browser BACK button</summary>
  <description>
    <p>What should the spec say about the eternal issues of dealing with
    a browser user using the BACK button, such as transaction tokens to
    avoid processing the same form submit more than once?  Note that tokens
    should be scoped to specific forms, not a global property of a JSF
    implementation (i.e. probably don't want one on search forms).</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>DefaultRendering-54</id>
  <originator>Joe</originator>
  <summary>Should components have default decode/encode behavior?</summary>
  <description>
    <p>We currently describe default behavior for the <code>decode()</code>
    and <code>encodeXxx()</code> methods of standard component classes.  This
    was done originally to avoid the case where a page author forgets to
    set the renderer type, and no decode/encode processing at all is performed.
    (Note that this won't happen in the typical JSP case, because setting the
    renderer type is implicit in the choice of tag used).  Do we still want
    this?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>2</priority>
  <effort>Small</effort>
</issue>


<issue>
  <id>TypeSpecificRenderers-55</id>
  <originator>Joe</originator>
  <summary>Should converters replace type-specific renderers like
           Date, DateTime, and Time?</summary>
  <description>
    <p>The recently added Converter functionality has a lot of overlap with
    the previously defined Date, DateTime, and Time renderers.  Do we want
    to keep both?  Don't forget to consider the usability implications on
    how you specify such things in a JSP page (in particular, how you
    parametrically configure converters for things like date patterns).</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>18 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>URLs-56</id>
  <originator>Adam</originator>
  <summary>Should JSF perform context-path prefixing on "/" URLs?</summary>
  <description>
    <p>The current description of UIGraphic states that JSF will add a
    context path prefix in front of URLs that begin with a "/" character.
    This feature is replicated in other places where URLs are specified.</p>

    <p>Struts developers have found the automatic prefixing functionality
    to be very useful, but Adam is concerned because it changes semantics
    that webapp developers might be expecting (i.e. '/' URLs are server
    relative).  Do we want to keep this behavior?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>RendererDelegation-57</id>
  <originator>Adam</originator>
  <summary>Moved to JSFA4</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA4">JSFA4</a> in Scarab.
  </description>
  <resolution>
  </resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>


<issue>
  <id>FacesContext-58</id>
  <originator>Adam</originator>
  <summary>Should FacesContext be factored out into APIs for related
           sets of methods?</summary>
  <description>
    <p>Recently, we have been moving towards a lot of functionality
    added to FacesContext, to the degree where it might be too confusing.
    Example:  MessageList used to be a separate object that had all the
    message queue related methods.  Do we want to continue this trend,
    or reverse it?</p>

    <p>For the FacesContext user, it makes calling simpler
    (<code>context.addMessage()</code> instead of
    <code>context.getMessageList().addMessage()</code>), at the cost
    of lots of methods on FacesContext.</p>

    <p>In addition, it may be appropriate to consider factoring <em>in</em>
    method calls to eliminate the need for components and applications to
    use factories to retrieve MessageResources and Converter instances.</p>

   <p> I'd like to see the FacesContext made available from a
     thread-local variable via a static method call such as
     FacesContext.currentContext().  This obviously goes hand-in-hand
     with guaranteeing single-threaded processing throughout the
     lifecycle, but I think such a guarantee is probably overdue
     anyway. </p>

  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>UsabilityRenames-59</id>
  <originator>EG</originator>
  <summary>JSFA48 in Scarab</summary>
  <description>
See <a href="http://tokyo.betaversion.org:8080/issues/id/JSFA48">JSFA48</a> in Scarab.
  </description>
  <resolution></resolution>
  <status></status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>

</issue>


<issue>
  <id>ValidatorMessages-60</id>
  <originator>Jeff</originator>
  <summary>We should allow "validation message" attributes to be specified
           along with the other configuration properties</summary>
  <description>
    <p>See Jeff's "comments on the 0902 spec" message dated 09/13/2002.</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>URLRewriting-61</id>
  <originator>Jeff</originator>
  <summary>Should URL rewriting be performed on generated URLs?</summary>
  <description>
    <p>Currently, the spec required URL rewriting on generated URLs.  Should
    this be unconditional, conditional, or not performed?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>FileUpload-62</id>
  <originator>Jeff</originator>
  <summary>Do we need a file upload component/renderer?</summary>
  <description>
    <p>It would be useful to have a component and/or renderer for processing
    file uploads.</p>

    <p>Sounds like a good JSF 1.1 feature addition.</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>4</priority>
  <effort></effort>
</issue>


<issue>
  <id>XForms-63</id>
  <originator>Jeff</originator>
  <summary>Additional XForms input types to be supported?</summary>
  <description>
    <p>Should we support additional XForms input types:  range, trigger,
    submit?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>RenderKitComponents-64</id>
  <originator>Jeff</originator>
  <summary>The relationship between renderkits and component types/classes
           seems confusing and duplicative</summary>
  <description>
    <p>Currently, we register components with renderkits by either component
    type or class.  Do we need both, or only one?  If one, which?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>1</priority>
  <effort>Medium</effort>
</issue>


<issue>
  <id>BrowserVersions-65</id>
  <originator>Jeff</originator>
  <summary>Reconfirm browser versions supported by standard RenderKit</summary>
  <description>
    <p>What browsers are we going to certify the standard RenderKit against?
    (Currently we just say "HTML/4.01").  Despite what we claim for this,
    what concessions are we willing to make for back-level browsers?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>XHTML-66</id>
  <originator>Jeff</originator>
  <summary>Mandatory or optional XHTML/1.0 compatibility?</summary>
  <description>
    <p>How much (if any) should we specify for the standard HTML render kit
    (beyond HTML/4.01) for compatibility with XHTML/1.0?</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>20 Sep 2002</status-date>
  <priority>3</priority>
  <effort></effort>
</issue>


<issue>
  <id>JstlDependencies-67</id>
  <originator>Craig</originator>
  <summary>Should we mandate a JSTL 1.0 dependency when using JSP?</summary>
  <description>
    <p>For JSF page authors using JSP as their rendering technology, it is
    highly desireable that we interoperate seamlessly with JSTL tags and
    APIs where appropriate.  Examples include:</p>
    <ul>
    <li>A data grid ([DataGrid-16]) should be able to process data provided
        via a <code>javax.servlet.jstl.sql.Result</code>, among others.</li>
    <li>Localization should be sensitive to any current
        <code>javax.servlet.jsp.jstl.fmt.LocalizationContext</code>.</li>
    <li>Iterative rendering might need to interoperate with JSTL iteration
        constructs, including
        <code>javax.servlet.jsp.jstl.core.LoopTagStatus</code>.</li>
    </ul>

    <p>Note that the data structure APIs (like Result) may be useful for
    application developers even in a non-JSP rendering environment.  However,
    doing any of this means we must declare a dependency on having a JSTL 1.0
    implementation available, along with a JSF 1.0 implementation (and of
    course Servlet 2.3 and JSP 1.2).</p>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>03 Oct 2002</status-date>
  <priority>1</priority>
  <effort>Small</effort>
</issue>


<issue>
  <id>VerbatimOutput-68</id>
  <originator>EG</originator>
  <summary>Need a mechansim for including raw HTML (or whatever)</summary>
  <description>
    <p>Although JSF components will normally generate the HTML (or other)
    markup language to render themselves, there are cases where we'd like
    to be able to output raw markup directly.  In a JSP page, you can do
    that using embedded template text, but there needs to be a mechanism
    for this purpose at the component API level.  Options include:</p>
    <ul>
    <li>New <code>UIVerbatim</code> component that specifically contains
        markup, but is otherwise treated similarly to <code>UIOutput</code>.
        </li>
    <li>New <code>Verbatim</code> Renderer that treats any
        <code>UIOutput</code> component as the source of raw markup,
        and just renders it literally.  <em>(Craig:  I'm not sure that
        this is functionally any different than the <code>Text</code>
        renderer processing an UIOutput component, unless we decide to
        make that one do some sort of filtering for characters sensitive
        to HTML.)</em></li>
    </ul>
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date>08 Oct 2002</status-date>
  <priority>1</priority>
  <effort>Small</effort>
</issue>

<issue>
  <id>Tools Support-69</id>
  <originator></originator>
  <summary> JSFA13 in Scarab.</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA13">JSFA13</a> in Scarab
  </description>
  <resolution>
  </resolution>
  <status>OPEN</status>
  <status-date></status-date>
  <priority></priority>
  <effort></effort>
</issue>

<issue>
  <id>Ease_of_Use-70</id>
  <originator>Jennifer</originator>
  <summary>Move to JSFA15 in Scarab</summary>
  <description>
<a href="http://tokyo.betaversion.org:8080/issues/id/JSFA15">JSFA15</a> in Scarab.
  </description>
  <status></status>
  <status-date></status-date>
  <priority>1</priority>
  <effort></effort>
</issue>

<issue>
  <id>Re-OrganizingSpec-71</id>
  <originator>Ed Burns</originator>
  <summary>Re-organize spec.</summary>
  <description>
    <p> </p>
  </description>
  <status>OPEN</status>
  <status-date>8 January 2003</status-date>
  <priority>2</priority>
  <effort>Medium</effort>
</issue>

<issue>
  <id>Iterator_Support-72</id>
  <originator>JSF-Forum, C1</originator>
  <summary>Will JSF support Iterator tag ?</summary>
  <description>
    <p> Currently JSF doesn't have an iterator tag. List Pages are very common in any application.  Richard from C1 has made some suggestions in the forum discussions on how it can be possibly implemented</p>
  </description>
  <status>OPEN</status>
  <status-date>8 January 2003</status-date>
  <priority>2</priority>
  <effort>Medium</effort>
</issue>

<issue>
  <id>Template_Text_In_Renderers-73</id>
  <originator>JSF-Forum, Heath Chiavettone</originator>
  <summary>Can Renderers use JSP or other template text?</summary>
  <description>
<p>Also, I'm thinking that section JSF.8.2.7 might be impacted, if you agree
with my assessment that components (and their Renderers) should be allowed
to render themselves via inclusion of (JSP) templates.  </p>
  </description>
  <status>OPEN</status>
  <status-date>10 January 2003</status-date>
  <priority>2</priority>
  <effort>Medium</effort>
</issue>


</issues>
