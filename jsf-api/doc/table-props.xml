<?xml version='1.0' encoding='UTF-8'?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->


<!-- ========== Table Properties =========================================== -->


<!-- template

      <property>
        <description>
        </description>
        <display-name></display-name>
        <icon></icon>
        <property-name></property-name>
        <property-class>java.lang.String</property-class>
      </property>

-->
<root>
    <property>
        <description>
          Name or code of the background color for this table.
        </description>
        <display-name>Background Color</display-name>
        <icon></icon>
        <property-name>bgcolor</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Width (in pixels) of the border to be drawn
          around this table.
        </description>
        <display-name>Table Border</display-name>
        <icon></icon>
        <property-name>border</property-name>
        <property-class>int</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Definition of how much space the user agent should
          leave between the border of each cell and its contents.
        </description>
        <display-name>Cell Padding</display-name>
        <icon></icon>
        <property-name>cellpadding</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Definition of how much space the user agent should
          leave between the left side of the table and the
          leftmost column, the top of the table and the top of
          the top side of the topmost row, and so on for the
          right and bottom of the table.  It also specifies
          the amount of space to leave between cells.
        </description>
        <display-name>Cell Spacing</display-name>
        <icon></icon>
        <property-name>cellspacing</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Comma-delimited list of CSS style classes that will be applied
          to the columns of this table.  A space separated list of
          classes may also be specified for any individual column.  If
          the number of elements in this list is less than the number of
          columns specified in the "columns" attribute, no "class"
          attribute is output for each column greater than the number of
          elements in the list.  If the number of elements in the list
          is greater than the number of columns specified in the
          "columns" attribute, the elements at the posisiton in the list
          after the value of the "columns" attribute are ignored.
        </description>
        <display-name>Column CSS Classes</display-name>
        <icon></icon>
        <property-name>columnClasses</property-name>
        <property-class>java.lang.String</property-class>
    </property>

    <property>
        <description>
          Space-separated list of CSS style class(es) that will be
          applied to any footer generated for this table.
        </description>
        <display-name>Footer CSS Classes</display-name>
        <icon></icon>
        <property-name>footerClass</property-name>
        <property-class>java.lang.String</property-class>
    </property>

    <property>
        <description>
          Code specifying which sides of the frame surrounding
          this table will be visible.  Valid values are:
          none (no sides, default value); above (top side only);
          below (bottom side only); hsides (top and bottom sides
          only); vsides (right and left sides only); lhs (left
          hand side only); rhs (right hand side only); box
          (all four sides); and border (all four sides).
        </description>
        <display-name>Table Frame</display-name>
        <icon></icon>
        <property-name>frame</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Space-separated list of CSS style class(es) that will be
          applied to any caption generated for this table.
        </description>
        <display-name>Caption CSS Classes</display-name>
        <icon></icon>
        <property-name>captionClass</property-name>
        <property-class>java.lang.String</property-class>
    </property>
                                                                                        
    <property>
        <description>
          CSS style(s) to be applied when this caption is rendered.
        </description>
        <display-name>Caption CSS Styles</display-name>
        <icon></icon>
        <property-name>captionStyle</property-name>
        <property-class>java.lang.String</property-class>
    </property>

    <property>
        <description>
          Space-separated list of CSS style class(es) that will be
          applied to any header generated for this table.
        </description>
        <display-name>Header CSS Classes</display-name>
        <icon></icon>
        <property-name>headerClass</property-name>
        <property-class>java.lang.String</property-class>
    </property>

    <property>
        <description>
          Comma-delimited list of CSS style classes that will be applied
          to the rows of this table.  A space separated list of classes
          may also be specified for any individual row.  Thes styles are
          applied, in turn, to each row in the table.  For example, if
          the list has two elements, the first style class in the list
          is applied to the first row, the second to the second row, the
          first to the third row, the second to the fourth row, etc.  In
          other words, we keep iterating through the list until we reach
          the end, and then we start at the beginning again.
        </description>
        <display-name>Row CSS Classes</display-name>
        <icon></icon>
        <property-name>rowClasses</property-name>
        <property-class>java.lang.String</property-class>
    </property>

    <property>
        <description>
          Code specifying which rules will appear between cells
          within this table.  Valid values are:  none (no rules,
          default value); groups (between row groups); rows
          (between rows only); cols (between columns only); and
          all (between all rows and columns).
        </description>
        <display-name>Table Rules</display-name>
        <icon></icon>
        <property-name>rules</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Summary of this table's purpose and structure, for
          user agents rendering to non-visual media such as
          speech and Braille.
        </description>
        <display-name>Table Summary</display-name>
        <icon></icon>
        <property-name>summary</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>

    <property>
        <description>
          Width of the entire table, for visual user agents.
        </description>
        <display-name>Table Width</display-name>
        <icon></icon>
        <property-name>width</property-name>
        <property-class>java.lang.String</property-class>
        <property-extension>
            <pass-through>true</pass-through>
        </property-extension>
    </property>
    <property>
        <description>
          Comma separated list of row indices for which a new
          "tbody" element should be started (and any
          previously opened one should be ended).
        </description>
        <display-name>Body Rows</display-name>
        <icon></icon>
        <property-name>bodyrows</property-name>
        <property-class>java.lang.String</property-class>
    </property>

</root>
